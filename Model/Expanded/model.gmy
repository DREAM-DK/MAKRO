
# ======================================================================================================================
# Model definition
# ======================================================================================================================
# In this file we define the sets, variables, and equations that comprise the model.
# The variables and equations are organized in groups of variable and blocks of equation.
# We combine the module-specific groups into bigger groups. 
# Finally, we combine the blocks of equations to get the basic model.


# ======================================================================================================================
# Functions
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\functions.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Functions
# ======================================================================================================================
# In this file we define functions and macros to be used elsewhere in the model
# Macros are a vanilla GAMS feature
# The FUNCTION command is is a gamY feature. It should be used when the user defined function includes other gamY commands.


# ----------------------------------------------------------------------------------------------------------------------
# Macros related to sets
# ----------------------------------------------------------------------------------------------------------------------
# See the sets files


# ----------------------------------------------------------------------------------------------------------------------
# Adjusting for growth and inflation
# ----------------------------------------------------------------------------------------------------------------------
# Shift variables to adjust for inflation and growth
variable INF_GROWTH_ADJUSTED "Dummy indicating if variables are growth and inflation adjusted";
INF_GROWTH_ADJUSTED.l = 0;


# ----------------------------------------------------------------------------------------------------
#  Define function: inf_growth_adjust
# ----------------------------------------------------------------------------------------------------


#  $FUNCTION inf_growth_adjust():
#    abort$(INF_GROWTH_ADJUSTED.l) "Trying to adjust for inflation and growth, but model is already adjusted.";
#    $LOOP All:
#      $IF "{name}".startswith("p"):
#        {name}.l{sets} = {name}.l{sets} * inf_factor[t];
#      $ENDIF
#      $IF "{name}".startswith("q"):
#        {name}.l{sets} = {name}.l{sets} * growth_factor[t];
#      $ENDIF
#      $IF "{name}".startswith("v"):
#        {name}.l{sets} = {name}.l{sets} * inf_growth_factor[t];
#      $ENDIF
#    $ENDLOOP
#    INF_GROWTH_ADJUSTED.l = 1;
#  $ENDFUNCTION

# Remove inflation and growth adjustment

# ----------------------------------------------------------------------------------------------------
#  Define function: remove_inf_growth_adjustment
# ----------------------------------------------------------------------------------------------------


#  $FUNCTION remove_inf_growth_adjustment():
#    abort$(not INF_GROWTH_ADJUSTED.l) "Trying to remove inflation and growth adjustment, but model is already nominal.";
#    $LOOP All:
#      $IF "{name}".startswith("p"):
#        {name}.l{sets} = {name}.l{sets} / inf_factor[t];
#      $ENDIF
#      $IF "{name}".startswith("q"):
#        {name}.l{sets} = {name}.l{sets} / growth_factor[t];
#      $ENDIF
#      $IF "{name}".startswith("v"):
#        {name}.l{sets} = {name}.l{sets} / inf_growth_factor[t];
#      $ENDIF
#    $ENDLOOP
#    INF_GROWTH_ADJUSTED.l = 0;
#  $ENDFUNCTION


# ----------------------------------------------------------------------------------------------------------------------
# Save and load states
# ----------------------------------------------------------------------------------------------------------------------
# Load levels of group from GDX file 

# ----------------------------------------------------------------------------------------------------
#  Define function: load
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: load_nonzero
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: load_as
# ----------------------------------------------------------------------------------------------------


# Set group to a linear combination of current values and values from a GDX file

# ----------------------------------------------------------------------------------------------------
#  Define function: load_linear_combination
# ----------------------------------------------------------------------------------------------------


# Export all variables to GDX files (with and without adjusment for inflation and growth).

# ----------------------------------------------------------------------------------------------------
#  Define function: unload
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: unload_all_nominal
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: unload_all
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: unload_group
# ----------------------------------------------------------------------------------------------------


# Save the values of a group of variables, by creating parameters with the same names and a suffix added.

# ----------------------------------------------------------------------------------------------------
#  Define function: save_as
# ----------------------------------------------------------------------------------------------------


# Save the values of a group of variables so that they can later be recalled.

# ----------------------------------------------------------------------------------------------------
#  Define function: save
# ----------------------------------------------------------------------------------------------------


# Reset the values of a group of variables to the levels saved previously. 

# ----------------------------------------------------------------------------------------------------
#  Define function: reset_to
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: reset
# ----------------------------------------------------------------------------------------------------


# Display the difference between the current values of a group of variables and the previously saved values.

# ----------------------------------------------------------------------------------------------------
#  Define function: display_difference
# ----------------------------------------------------------------------------------------------------


# Abort if differences exceed the threshold. Differences are between the current values of a group of variables and the previously saved values.

# ----------------------------------------------------------------------------------------------------
#  Define function: assert_no_difference_from
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: assert_no_difference
# ----------------------------------------------------------------------------------------------------


# ----------------------------------------------------------------------------------------------------------------------
# Math
# ----------------------------------------------------------------------------------------------------------------------
# Example: mean(t, a[t]) -> sum(t, a[t]) / sum(t, 1)

# ----------------------------------------------------------------------------------------------------
#  Define function: mean
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: geo_mean
# ----------------------------------------------------------------------------------------------------


# Smooth approximation of ABS function. The error is zero when {x} is zero and goes to -smooth_abs_delta as abs({x}) increases.
scalar smooth_abs_delta /0.01/;

# ----------------------------------------------------------------------------------------------------
#  Define function: abs
# ----------------------------------------------------------------------------------------------------


# Smooth approximation of MAX function. The error is smooth_max_delta/2 when {x}=={y} and goes to zero as {x} and {y} diverge.
scalar smooth_max_delta /0.001/;

# ----------------------------------------------------------------------------------------------------
#  Define function: max
# ----------------------------------------------------------------------------------------------------


# Smooth approximation of MIN function. The error is -smooth_min_delta/2 when {x}=={y} and goes to zero as {x} and {y} diverge.
scalar smooth_min_delta /0.001/;

# ----------------------------------------------------------------------------------------------------
#  Define function: min
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------------------------
# Solving
# ----------------------------------------------------------------------------------------------------------------------
# Solve {model} as CNS with a number of solver options set

# ----------------------------------------------------------------------------------------------------
#  Define function: solve
# ----------------------------------------------------------------------------------------------------


# Set bounds on three groups, G_lower_bound, G_zero_bound, and G_lower_upper_bound

# ----------------------------------------------------------------------------------------------------
#  Define function: set_bounds
# ----------------------------------------------------------------------------------------------------


# Set bounds on {group} to {lo}, {up}

# ----------------------------------------------------------------------------------------------------
#  Define function: bound
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: NLP_solve
# ----------------------------------------------------------------------------------------------------


# ----------------------------------------------------------------------------------------------------------------------
# Other
# ----------------------------------------------------------------------------------------------------------------------
FILE logfile /''/;

# ----------------------------------------------------------------------------------------------------
#  Define function: print
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------
#  Define function: copy_equation_to_period
# ----------------------------------------------------------------------------------------------------



# ----------------------------------------------------------------------------------------------------------------------
# Local linear Regression functions
# ----------------------------------------------------------------------------------------------------------------------
# Smooth {var} using local linear regression with bandwidth {h}

# ----------------------------------------------------------------------------------------------------
#  Define function: LLreg
# ----------------------------------------------------------------------------------------------------




# ----------------------------------------------------------------------------------------------------------------------
# HP-filter
# ----------------------------------------------------------------------------------------------------------------------
# Apply an HP-filter to the input variable

# ----------------------------------------------------------------------------------------------------
#  Define function: HPfilter
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Variables
# ======================================================================================================================
# ----------------------------------------------------------------------------------------------------------------------
# Variable definitions
# ----------------------------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\IO.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Input Output system
# - This module handles the details of the IO system.
#   The different demand components are satisfied with domestic production competing with imports.
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# ---------------------------------------------G_IO_prices--------------------------------------------
#  Initialize G_IO_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE pY[s_,t] "Produktionsdeflator fordelt på brancher, Kilde: ADAM[pX] eller ADAM[pX<i>]";
pY.L[s_,t]$(sTot[s_] or spTot[s_]) = 0;
VARIABLE pM[s_,t] "Importdeflator fordelt på importgrupper, Kilde: ADAM[pM] eller ADAM[pM<i>]";
pM.L[s_,t]$(sTot[s_]) = 0;
VARIABLE pBNP[t] "BNP-deflator, Kilde: ADAM[pY]";
pBNP.L[t] = 0;
VARIABLE pBVT[s_,t] "BVT-deflator, Kilde: ADAM[pyf] eller ADAM[pyf<i>]";
pBVT.L[s_,t] = 0;
VARIABLE pIO[d_,s,t] "Imputeret deflator for branchefordelte leverancer fra både import og indenlandsk produktion fordelt på efterspørgselskomponenter.";
pIO.L[d_,s,t]$(d1IO[d_,s,t] and dux_[d_]) = 0;
VARIABLE pIOy[d_,s,t] "Imputeret deflator for branchefordelte leverancer fra indenlandsk produktion fordelt på efterspørgselskomponenter.";
pIOy.L[d_,s,t]$(d1IOy[d_,s,t]) = 0;
VARIABLE pIOm[d_,s,t] "Imputeret deflator for branchefordelte leverancer fra import fordelt på efterspørgselskomponenter.";
pIOm.L[d_,s,t]$(d1IOm[d_,s,t]) = 0;
VARIABLE pX[x_,t] "Eksportdeflator fordelt på eksportgrupper, Kilde: ADAM[pe] eller ADAM[pe<i>]";
pX.L[x_,t] = 0;
VARIABLE pXm[x,t] "Deflator på import til reeksport.";
pXm.L[x,t]$(d1Xm[x,t]) = 0;
VARIABLE pXy[x,t] "Deflator på direkte eksport.";
pXy.L[x,t] = 0;
VARIABLE pR[r_,t] "Deflator på materialeinput fordelt på brancherne som modtager materialeinputtet, Kilde: ADAM[pV] eller ADAM[pv<i>]";
pR.L[r_,t] = 0;
VARIABLE pCDK[c_,t] "Forbrugsdeflator fordelt på forbrugsgrupper, Kilde: ADAM[pcp] eller ADAM[pC<i>]";
pCDK.L[c_,t] = 0;
VARIABLE pCTurist[c,t] "Price index of tourists consumption by consumption group.";
pCTurist.L[c,t]$(d1CTurist[c,t]) = 0;
VARIABLE pG[g_,t] "Deflator for offentligt forbrug, Kilde: ADAM[pco]";
pG.L[g_,t] = 0;
VARIABLE pI[i_,t] "Investeringsdeflator fordelt på investeringstyper, Kilde: ADAM[pI] eller ADAM[pim] eller ADAM[pib]";
pI.L[i_,t] = 0;
VARIABLE pI_s[i_,s_,t] "Investeringsdeflator fordelt på brancher, Kilde: ADAM[pI<i>] eller ADAM[pim<i>] eller ADAM[pib<i>]";
pI_s.L[i_,s_,t]$(d1I_s[i_,s_,t]) = 0;
VARIABLE pC[c_,t] "Imputeret prisindeks for forbrugskomponenter for husholdninger - dvs. ekskl. turisters forbrug.";
pC.L[c_,t]$(c[c_] or cTot[c_]) = 0;
$onlisting
  
# -------------------------------------------G_IO_quantities------------------------------------------
#  Initialize G_IO_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE qY[s_,t] "Produktion fordelt på brancher, Kilde: ADAM[fX]";
qY.L[s_,t] = 0;
VARIABLE qM[s_,t] "Import fordelt på importgrupper, Kilde: ADAM[fM] eller ADAM[fM<i>]";
qM.L[s_,t] = 0;
VARIABLE qBNP[t] "BNP, Kilde: ADAM[fY]";
qBNP.L[t] = 0;
VARIABLE qBVT[s_,t] "BVT, Kilde: ADAM[fYf] eller ADAM[fYf<i>]";
qBVT.L[s_,t] = 0;
VARIABLE qGrus[t] "Eksogen mængde af produktion fra udvindingsbranche som ikke udfases, men heller ikke indgår i Nordsøbeskatning.";
qGrus.L[t] = 0;
VARIABLE qIO[d_,s_,t] "Imputeret branchefordelte leverancer fra både import og indenlandsk produktion fordelt på efterspørgselskomponenter.";
qIO.L[d_,s_,t]$(d1IO[d_,s_,t] and dux_[d_]) = 0;
VARIABLE qIOy[d_,s_,t] "Imputeret branchefordelte leverancer fra indenlandsk produktion fordelt på efterspørgselskomponenter.";
qIOy.L[d_,s_,t]$(d1IOy[d_,s_,t]) = 0;
VARIABLE qIOm[d_,s_,t] "Imputeret branchefordelte leverancer fra import fordelt på efterspørgselskomponenter.";
qIOm.L[d_,s_,t]$(d1IOm[d_,s_,t]) = 0;
VARIABLE qX[x_,t] "Eksport fordelt på eksportgrupper, Kilde: ADAM[fE] eller ADAM[fE<i>]";
qX.L[x_,t]$(xTot[x_]) = 0;
VARIABLE qR[r_,t] "Materialeinput fordelt på brancherne som modtager materialeinputtet, Kilde: ADAM[fV] eller ADAM[fV<i>]";
qR.L[r_,t]$(rTot[r_] or spTot[r_]) = 0;
VARIABLE qCDK[c,t] "Det private forbrug fordelt på forbrugsgrupper, Kilde: ADAM[fCp] eller ADAM[fC<i>]";
qCDK.L[c,t] = 0;
VARIABLE qC[c_,t] "Husholdningernes samlede forbrug fordelt på forbrugsgrupper og aggregater inkl. lejebolig og imputeret ejerbolig.";
qC.L[c_,t]$(cTot[c_]) = 0;
VARIABLE qI[i_,t] "Investeringer fordelt på investeringstype, Kilde: ADAM[fI] eller ADAM[fIm] eller ADAM[fIb]";
qI.L[i_,t] = 0;
VARIABLE qI_s[i_,s_,t] "Investeringer fordelt på brancher, Kilde: ADAM[fI<i>] eller ADAM[fIm<i>] eller ADAM[fIb<i>]";
qI_s.L[i_,s_,t]$(d1I_s[i_,s_,t] and iTot[i_]) = 0;
$onlisting
  
# ---------------------------------------------G_IO_values--------------------------------------------
#  Initialize G_IO_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vY[s_,t] "Produktionsværdi fordelt på brancher, Kilde: ADAM[X] eller ADAM[X<i>]";
vY.L[s_,t] = 0;
VARIABLE vM[s_,t] "Import fordelt på importgrupper, Kilde: ADAM[M] eller ADAM[M<i>]";
vM.L[s_,t] = 0;
VARIABLE vBNP[t] "BNP, Kilde: ADAM[Y]";
vBNP.L[t] = 0;
VARIABLE vBVT[s_,t] "BVT, Kilde: ADAM[Yf] eller ADAM[Yf<i>]";
vBVT.L[s_,t] = 0;
VARIABLE vIO[d_,s_,t] "Imputeret branchefordelte leverancer fra både import og indenlandsk produktion fordelt på efterspørgselskomponenter.";
vIO.L[d_,s_,t]$(d1IO[d_,s_,t]) = 0;
VARIABLE vIOy[d_,s_,t] "Imputeret branchefordelte leverancer fra indenlandsk produktion fordelt på efterspørgselskomponenter.";
vIOy.L[d_,s_,t]$(d1IOy[d_,s_,t]) = 0;
VARIABLE vIOm[d_,s_,t] "Imputeret branchefordelte leverancer fra import fordelt på efterspørgselskomponenter.";
vIOm.L[d_,s_,t]$(d1IOm[d_,s_,t]) = 0;
VARIABLE vX[x_,t] "Eksport fordelt på eksportgrupper, Kilde: ADAM[E] eller ADAM[E<i>]";
vX.L[x_,t] = 0;
VARIABLE vXy[x,t] "Direkte export fordelt på eksportgrupper.";
vXy.L[x,t] = 0;
VARIABLE vR[r_,t] "Materialeinput fordelt på brancherne som modtager materialeinputtet, Kilde: ADAM[V] eller ADAM[V<i>]";
vR.L[r_,t] = 0;
VARIABLE vC[c_,t] "Det private forbrug fordelt på forbrugsgrupper, Kilde: ADAM[Cp] eller ADAM[C<i>]";
vC.L[c_,t]$(cTot[c_] or c[c_]) = 0;
VARIABLE vCTurist[c,t] "Turisters forbrug i Danmark fordelt på forbrugsgrupper.";
vCTurist.L[c,t]$(d1CTurist[c,t]) = 0;
VARIABLE vG[g_,t] "Offentligt forbrug, Kilde: ADAM[Co]";
vG.L[g_,t] = 0;
VARIABLE vI[i_,t] "Investeringer fordelt på investeringstype, Kilde: ADAM[I] eller ADAM[Im] eller ADAM[iB]";
vI.L[i_,t] = 0;
VARIABLE vI_s[i_,s_,t] "Investeringer fordelt på brancher, Kilde: ADAM[I<i>] eller ADAM[Im<i>] eller ADAM[iB<i>]";
vI_s.L[i_,s_,t]$(d1I_s[i_,s_,t] and not (k[i_] and sOff[s_])) = 0;
$onlisting

  
# ---------------------------------------G_IO_exogenous_forecast--------------------------------------
#  Initialize G_IO_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# -----------------------------------------G_IO_ARIMA_forecast----------------------------------------
#  Initialize G_IO_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE uIO0[dux,s_,t] "Skalaparameter for efterspørgselskomponents vægt på diverse input før endelig skalering.";
uIO0.L[dux,s_,t] = 0;
VARIABLE uIOm0[dux,s,t] "Importandel i efterspørgselskomponent.";
uIOm0.L[dux,s,t] = 0;
VARIABLE uIOXy0[x,s,t] "Skalaparameter for eksportkomponents vægt på diverse indenlandske input før endelig skalering.";
uIOXy0.L[x,s,t] = 0;
VARIABLE uIOXm0[x,s,t] "Skalaparameter for eksportkomponents vægt på diverse importerede input før endelig skalering.";
uIOXm0.L[x,s,t] = 0;
VARIABLE fuIO[dux,t] "Korrektionsfaktor for skalaparametrene for efterspørgselskomponents vægt på diverse input.";
fuIO.L[dux,t] = 0;
VARIABLE fuIOym[dux,s,t] "Korrektionsfaktor for skalaparametrene for efterspørgselskomponents vægt på diverse hhv. indenlandske og importerede input.";
fuIOym.L[dux,s,t] = 0;
VARIABLE fuXm[x,t] "Korrektionsfaktor for skalaparametrene for efterspørgselskomponents vægt på diverse input.";
fuXm.L[x,t] = 0;
VARIABLE fuXy[x,t] "Korrektionsfaktor for skalaparametrene for efterspørgselskomponents vægt på diverse input.";
fuXy.L[x,t] = 0;
VARIABLE upI_s[i,s,t] "Skalaparameter som fanger forskelle i branchernes investerings-deflatorer for samme investeringstype.";
upI_s.L[i,s,t] = 0;
VARIABLE fpCTurist[c,t] "Korrektion som fanger at turisters forbrug har anden deflator end indenlandske husholdninger.";
fpCTurist.L[c,t] = 0;
$onlisting
  
# ---------------------------------------------G_IO_other---------------------------------------------
#  Initialize G_IO_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE eIO[d_,s] "Substitutionselasticitet mellem import og indenlandsk produktion for diverse input for efterspørgselskomponenterne.";
eIO.L[d_,s] = 0;
VARIABLE rMerPris[d_,t] "Pristillæg fra mermarkup på leverancer til eksport - eD 0 historisk.";
rMerPris.L[d_,t] = 0;
VARIABLE rvIO2vOffNyInv[i,t] "Andel af offentlige direkte investeringer, der går til investeringsgruppe i.";
rvIO2vOffNyInv.L[i,t] = 0;
VARIABLE eG[g_] "Substitutionselasticitet mellem diverse input for efterspørgselskomponenterne.";
eG.L[g_] = 0;
VARIABLE rvIO2vPublicSales[c,t] "Andel af offentligt salg fordelt på efterspørgselskomponenter der modtager leverancer.";
rvIO2vPublicSales.L[c,t] = 0;
VARIABLE rpMTraeghed[d_,s] "Parameter til at styre kortsigtet priselasticitet.";
rpMTraeghed.L[d_,s] = 0;
VARIABLE rMKortsigt[d_,s] "Parameter til at styre kortsigtet importgennemslag.";
rMKortsigt.L[d_,s] = 0;
$onlisting

  
# ----------------------------------------------G_IO_endo---------------------------------------------
#  Initialize G_IO_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE juIOm[s,t] "J-led.";
juIOm.L[s,t]$(sameas[s,'udv']) = 0;
VARIABLE juIOXy[s,t] "J-led.";
juIOXy.L[s,t]$(sameas[s,'udv']) = 0;
VARIABLE uIO[d_,s,t] "Skalaparameter for efterspørgselskomponents vægt på diverse input.";
uIO.L[d_,s,t] = 0;
VARIABLE uIOy[dux,s,t] "Skalaparameter for efterspørgselskomponents vægt på diverse indenlandske input.";
uIOy.L[dux,s,t] = 0;
VARIABLE uIOm[dux,s,t] "Skalaparameter for efterspørgselskomponents vægt på diverse importerede input.";
uIOm.L[dux,s,t] = 0;
VARIABLE uIOXy[x,s,t] "Skalaparameter for eksportkomponents vægt på diverse indenlandske input.";
uIOXy.L[x,s,t] = 0;
VARIABLE uIOXm[x,s,t] "Skalaparameter for eksportkomponents vægt på diverse importerede input.";
uIOXm.L[x,s,t] = 0;
VARIABLE fpI_s[i,t] "Korrektionsfaktor som sørger for at vI_s summerer til vI.";
fpI_s.L[i,t]$(tForecast[t]) = 0;
VARIABLE rpIOm2pIOy[d_,s,t] "Relativ pris mellem import og egenproduktion.";
rpIOm2pIOy.L[d_,s,t] = 0;
VARIABLE pXUdl[x_,t] "Eksportkonkurrende udenlandsk pris, Kilde: ADAM[pee<i>]";
pXUdl.L[x_,t]$(xTot[x_]) = 0;
VARIABLE fqMKortsigt[dux,s,t] "Konjunkturbidrag til importandel.";
fqMKortsigt.L[dux,s,t] = 0;
$onlisting
  
# ----------------------------------------------G_IO_endo---------------------------------------------
#  Initialize G_IO_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting # Restrict endo group to tx0[t]

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations  
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\taxes.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Taxes
# - Tax rates and revenue
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# -------------------------------------------G_taxes_values-------------------------------------------
#  Initialize G_taxes_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vtMoms[d_,s_,t] "Generelle afgiftsprovenu (oms/moms) fordelt på efterspørgselskomponenter og brancher, Kilde: ADAM[Spg_<d>]";
vtMoms.L[d_,s_,t]$(t.val > 2015) = 0;
VARIABLE vtNetAfg[d_,s_,t] "Provenu af punktafgifter fordelt på efterspørgselskomponenter og brancher inkl. subsidier og registreringsafgift, Kilde: ADAM[Spp_<d>]";
vtNetAfg.L[d_,s_,t]$(t.val > 2015) = 0;
VARIABLE vtAfg[d_,s_,t] "Provenu af punktafgifter fordelt på efterspørgselskomponenter og brancher ekskl. registreringsafgift.";
vtAfg.L[d_,s_,t]$(t.val > 2015) = 0;
VARIABLE vtReg[d_,t] "Registreringsafgiftsprovenu, Kilde: ADAM[Spr_<d_>]";
vtReg.L[d_,t]$(t.val > 2015) = 0;
VARIABLE vPunktSub[t] "Produktsubsidier, Kilde: ADAM[Sppu]";
vPunktSub.L[t]$(t.val > 2015) = 0;
VARIABLE vtTold[d_,s_,t] "Toldprovenu fordelt på efterspørgselskomponenter og brancher, Kilde: ADAM[Spm_<i>]";
vtTold.L[d_,s_,t]$(t.val > 2015) = 0;
VARIABLE vtGrund[s_,t] "Ejendomsskatter fordelt på brancher, Kilde: ADAM[Spzej], ADAM[Spzejh] og ADAM[bspzej_x<i>]*ADAM[Spzejxh]";
vtGrund.L[s_,t]$(d1K['iB',s_,t]) = 0;
VARIABLE vtVirkVaegt[s_,t] "Vægtafgifter fra erhvervene fordelt på brancher, Kilde: ADAM[Spzv] og ADAM[bspzv_x<i>]";
vtVirkVaegt.L[s_,t]$(d1K['iM',s_,t]) = 0;
VARIABLE vtVirkAM[s_,t] "Provenu af arbejdsmarkedsbidrag (AMBI) vedr. værditilvækst eller lønsum, Kilde: ADAM[Spzam] og ADAM[bspzam_x<i>]";
vtVirkAM.L[s_,t] = 0;
VARIABLE vtAUB[s_,t] "Provenu fra AUB - arbejdsgivernes uddannelsesbidrag mv. fra erhvervene, Kilde: ADAM[Spzaud] og ADAM[bspzaud_x<i>]";
vtAUB.L[s_,t] = 0;
VARIABLE vtSubLoen[s_,t] "Provenu fra løntilskud fordelt på brancher, Kilde: ADAM[Spzul] og ADAM[bspzul_x<i>]";
vtSubLoen.L[s_,t] = 0;
VARIABLE vtNetLoenAfg[s_,t] "Ikke-varefordelte indirekte afgifter vedrørende lønsum, Kilde: ADAM[Spzl] og ADAM[Spzl_x<i>]";
vtNetLoenAfg.L[s_,t] = 0;
VARIABLE vtNetYAfg[s_,t] "Andre produktionsskatter (ikke-varefordelte indirekte skatter), netto, Kilde: ADAM[Spz]";
vtNetYAfg.L[s_,t] = 0;
VARIABLE vtNetYAfgRest[s_,t] "Andre produktionsskatter, Restdel, Kilde: ADAM[SpzCo2]+ADAM[Spzr]";
vtNetYAfgRest.L[s_,t]$(t.val > 2015 or sTot[s_]) = 0;
$onlisting

  
# --------------------------------------------G_taxes_endo--------------------------------------------
#  Initialize G_taxes_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE tNetAfg_y[d_,s,t] "Punktafgiftssats inkl. subsidier og registreringsafgift fordelt på efterspørgsels og input fra indenlandske brancher.";
tNetAfg_y.L[d_,s,t]$(d1IOy[d_,s,t] and t.val > 2015) = 0;
VARIABLE tNetAfg_m[d_,s,t] "Punktafgiftssats inkl. subsidier og registreringsafgift fordelt på efterspørgsels og input fra import-grupper.";
tNetAfg_m.L[d_,s,t]$(d1IOm[d_,s,t] and t.val > 2015) = 0;
VARIABLE tL[s_,t] "Samlet afgiftssats på arbejdskraft (betalt af arbejdsgiver)";
tL.L[s_,t]$(t.val > 2015 or s[s_]) = 0;
VARIABLE tIOy[d_,s,t] "Samlet afgiftssats for moms og punktafgifter inkl. subsidier og registreringsafgift fordelt på efterspørgselskomponenter og input fra indenlandske brancher.";
tIOy.L[d_,s,t]$(d1IOy[d_,s,t]) = 0;
VARIABLE tIOm[d_,s,t] "Samlet afgiftssats for moms og punktafgifter inkl. subsidier og registreringsafgift fordelt på efterspørgselskomponenter og input fra import-grupper.";
tIOm.L[d_,s,t]$(d1IOm[d_,s,t]) = 0;
$onlisting
  
# --------------------------------------------G_taxes_endo--------------------------------------------
#  Initialize G_taxes_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting # Restrict endo group to tx0[t]

  
# ---------------------------------------G_taxes_ARIMA_forecast---------------------------------------
#  Initialize G_taxes_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE tAfg_y[d_,s,t] "Punktafgiftssats ekskl. subsidier og registreringsafgift fordelt på efterspørgsels og input fra indenlandske brancher.";
tAfg_y.L[d_,s,t] = 0;
VARIABLE tAfg_m[d_,s,t] "Punktafgiftssats ekskl. subsidier og registreringsafgift fordelt på efterspørgsels og input fra import-grupper.";
tAfg_m.L[d_,s,t] = 0;
VARIABLE tYsub_y[d_,s,t] "Sats for produktsubsidier fordelt på efterspørgselskomponenter og indenlandske brancher.";
tYsub_y.L[d_,s,t] = 0;
VARIABLE tYsub_m[d_,s,t] "Sats for produktsubsidier fordelt på efterspørgselskomponenter og import-grupper.";
tYsub_m.L[d_,s,t] = 0;
$onlisting
  
# --------------------------------------------G_taxes_other-------------------------------------------
#  Initialize G_taxes_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE tYsub_y0[d_,s,t] "Hjælpevariabel til at opdele netto punktafgifter på hhv. afgifter og subsidier.";
tYsub_y0.L[d_,s,t] = 0;
VARIABLE tYsub_m0[d_,s,t] "Hjælpevariabel til at opdele netto punktafgifter på hhv. afgifter og subsidier.";
tYsub_m0.L[d_,s,t] = 0;
VARIABLE tTold[d_,s,t] "Toldsats fordelt på efterspørgselskomponenter og input fra import-grupper.";
tTold.L[d_,s,t] = 0;
VARIABLE tMoms_y[d_,s,t] "Momssats fordelt på efterspørgselskomponenter og input fra indenlandske brancher.";
tMoms_y.L[d_,s,t] = 0;
VARIABLE tMoms_m[d_,s,t] "Momssats fordelt på efterspørgselskomponenter og input fra indenlandske brancher.";
tMoms_m.L[d_,s,t] = 0;
VARIABLE tK[k,s_,t] "Kapitalafgiftssats (hhv. ejendomsskatter og vægtafgift)";
tK.L[k,s_,t]$(d1K[k,s_,t]) = 0;
VARIABLE tLoensum[s,t] "Afgiftssats for AM-bidrag betalt af virksomheder ";
tLoensum.L[s,t] = 0;
VARIABLE tVirkAM[s,t] "Afgiftssats for AUB-bidrag betalt af virksomheder.";
tVirkAM.L[s,t] = 0;
VARIABLE tLoenSub[s,t] "Sats for løntilskud.";
tLoenSub.L[s,t] = 0;
VARIABLE tYsub0[t] "Hjælpevariabel til at kalibrere de samlede produktsubsidier.";
tYsub0.L[t] = 0;
VARIABLE tReg[d_,t] "Registreringsafgiftssats for biler.";
tReg.L[d_,t] = 0;
VARIABLE tNetYRest[s,t] "Andre produktionsskatter ift. BVT";
tNetYRest.L[s,t] = 0;
$onlisting
  ;

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\exports.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Exports
# - Armington demand for exports of both domestically produced and imported goods
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# ------------------------------------------G_exports_prices------------------------------------------
#  Initialize G_exports_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE empty_group_dummy[t] "";
empty_group_dummy.L[t] = 0;
$onlisting
  
# ----------------------------------------G_exports_quantities----------------------------------------
#  Initialize G_exports_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE qXy[x,t] "Direkte eksport.";
qXy.L[x,t]$(not sameas['xEne',x]) = 0;
VARIABLE qXm[x,t] "Import til reeksport.";
qXm.L[x,t]$(d1Xm[x,t]) = 0;
VARIABLE qCTurist[c,t] "Turisters forbrug i Danmark (imputeret)";
qCTurist.L[c,t]$(d1CTurist[c,t]) = 0;
VARIABLE qXMarked[x,t] "Eksportmarkedsstørrelse, Kilde: ADAM[fEe<i>]";
qXMarked.L[x,t] = 0;
VARIABLE qXSkala[x,t] "Endogen udbudseffekt på eksport.";
qXSkala.L[x,t] = 0;
VARIABLE qXTraek[x,t] "Eksporttræk fra eksportmarkederne.";
qXTraek.L[x,t] = 0;
$onlisting
  
# ------------------------------------------G_exports_values------------------------------------------
#  Initialize G_exports_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# -------------------------------------------G_exports_endo-------------------------------------------
#  Initialize G_exports_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rpXUdl2pXy[x,t] "Relative eksportpriser - dvs. eksportkonkurrerende priser over eksportpriser.";
rpXUdl2pXy.L[x,t] = 0;
VARIABLE rpXy2pXUdl[x,t] "Relative eksportpriser - dvs. eksportpriser over eksportkonkurrerende priser.";
rpXy2pXUdl.L[x,t] = 0;
VARIABLE uXy[x,t] "Skalaparameter for direkte eksport.";
uXy.L[x,t]$(sameas['xEne',x]) = 0;
VARIABLE uCturisme[c,t] "Skalaparameter til fordeling af udenlandske turisters forbrug i Danmark på forbrugsgrupper.";
uCturisme.L[c,t] = 0;
VARIABLE rpM2pXm[x,t] "Relativ pris på import vs. export fordelt på eksportgrupper.";
rpM2pXm.L[x,t] = 0;
$onlisting
  
# -------------------------------------------G_exports_endo-------------------------------------------
#  Initialize G_exports_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting # Restrict endo group to tx0[t]

  
# ------------------------------------G_exports_exogenous_forecast------------------------------------
#  Initialize G_exports_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# -------------------------------------------G_exports_other------------------------------------------
#  Initialize G_exports_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rXTraeghed "Træghed i på gennemslag fra eksportmarkedsvækst.";
rXTraeghed.L = 0;
VARIABLE upXyTraeghed "Træghed i pris-effekt på eksportefterspørgsel.";
upXyTraeghed.L = 0;
VARIABLE rXSkalaTraeghed "Træghed i skalaeffekt på eksportefterspørgsel.";
rXSkalaTraeghed.L = 0;
VARIABLE eXUdl[x] "Eksportpriselasticitet.";
eXUdl.L[x] = 0;
VARIABLE cpXyTraeghed[x,t] "Parameter som kalibreres for at fjerne træghed i pris-effekt på eksportefterspørgsel i grundforløb.";
cpXyTraeghed.L[x,t] = 0;
$onlisting
  
# --------------------------------------G_exports_ARIMA_forecast--------------------------------------
#  Initialize G_exports_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE uXTur[t] "Skalaparameter for eksport af turisme.";
uXTur.L[t] = 0;
VARIABLE uXm[x,t] "Skalaparameter for import til reeksport.";
uXm.L[x,t] = 0;
VARIABLE fuCturisme[t] "Korrektionsfaktor for skalaparametrene til fordeling af udenlandske turisters forbrug i Danmark på forbrugsgrupper.";
fuCturisme.L[t] = 0;
VARIABLE uCturisme0[c,t] "Skalaparameter til fordeling af udenlandske turisters forbrug i Danmark på forbrugsgrupper før endelig skalering.";
uCturisme0.L[c,t] = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\production_public.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Public sector production
# - Public sector demand for factors of production
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

	
# -------------------------------------G_production_public_prices-------------------------------------
#  Initialize G_production_public_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE pKLBR[s_,t] "CES pris af qKLBR-aggregat = marginal enhedsomkostning.";
pKLBR.L[s_,t]$(sOff[s_]) = 0;
VARIABLE pOffAfskr[i_,t] "Deflator for offentlige afskrivninger, Kilde: ADAM[pinvo1], ADAM[pinvmo1] eller ADAM[pinvbo1]";
pOffAfskr.L[i_,t] = 0;
VARIABLE pOffNyInv[t] "Deflator for offentlige nyinvesteringer, Kilde: ADAM[pifro1ny]";
pOffNyInv.L[t] = 0;
$onlisting    
	
# -----------------------------------G_production_public_quantities-----------------------------------
#  Initialize G_production_public_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE qOffAfskr[i_,t] "Offentlige afskrivninger, Kilde: ADAM[fInvo1], ADAM[fInvmo1] eller ADAM[fInvbo1]";
qOffAfskr.L[i_,t] = 0;
VARIABLE qOffNyInv[t] "Offentlige nyinvesteringer, Kilde: ADAM[fIfro1ny]";
qOffNyInv.L[t] = 0;
VARIABLE qK[k,s_,t] "Ultimokapital fordelt efter kapitaltype og branche, Kilde: ADAM[fKnm<i>] eller ADAM[fKnb<i>]";
qK.L[k,s_,t]$(d1K[k,s_,t] and sOff[s_]) = 0;
$onlisting
	
# -------------------------------------G_production_public_values-------------------------------------
#  Initialize G_production_public_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vOffAfskr[i_,t] "Offentlige afskrivninger, Kilde: ADAM[Invo1], ADAM[Invmo1] eller ADAM[Invbo1]";
vOffAfskr.L[i_,t] = 0;
VARIABLE vOffLR[t] "Samlede udgifter til materialer og arbejdskraft i den offentlige produktion, Kilde: ADAM[Ywo1]+ADAM[Vo1]";
vOffLR.L[t] = 0;
VARIABLE vOffDirInv[t] "Direkte offentlige investeringer i forskning og udvikling, Kilde: ADAM[Xo1i]";
vOffDirInv.L[t]$(t.val > 1990) = 0;
VARIABLE vOffIndirInv[t] "Den offentlige sektor nettokøb af bygninger o.a. eksisterende investeringsgoder, Kilde: ADAM[Io1a]";
vOffIndirInv.L[t] = 0;
VARIABLE vOffNyInv[t] "Faste nyinvesteringer i off. sektor, ekskl. investeringer i forskning og udvikling, Kilde: ADAM[Ifro1ny]";
vOffNyInv.L[t]$(t.val > 1990) = 0;
$onlisting

	
# --------------------------------------G_production_public_endo--------------------------------------
#  Initialize G_production_public_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE srvOffL2LR[t] "Arbejdskrafts strukturelle andel af udgifterne til materialer og arbejdskraft i offentlig produktion.";
srvOffL2LR.L[t] = 0;
VARIABLE rOffK2Y[k,t] "Offentlig kapital relativt til vægtet gennemsnit af offentlig og privat produktion.";
rOffK2Y.L[k,t] = 0;
VARIABLE rvOffDirInv2BNP[t] "Direkte offentlige investeringer relativt til BNP.";
rvOffDirInv2BNP.L[t] = 0;
$onlisting
	
# --------------------------------------G_production_public_endo--------------------------------------
#  Initialize G_production_public_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

  
# -------------------------------G_production_public_exogenous_forecast-------------------------------
#  Initialize G_production_public_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE fProd[s_,t] "Branchespecifik produktivitetsindeks for arbejdskraft.";
fProd.L[s_,t]$(sOff[s_]) = 0;
VARIABLE jrpOffAfskr[k,t] "J-led, som afspejler forskel mellem deflatoren for offentlige afskrivninger og investeringer.";
jrpOffAfskr.L[k,t] = 0;
VARIABLE jrqOffAfskr[k,t] "J-led, som afspejler forskel mellem deflatoren for offentlige afskrivninger og investeringer.";
jrqOffAfskr.L[k,t] = 0;
VARIABLE jrpOffNyInv[t] "J-led, som afspejler forskel mellem deflatoren for offentlige investeringer og nyinvesteringer.";
jrpOffNyInv.L[t] = 0;
VARIABLE nL[s_,t] "Beskæftigelse fordelt på brancher, Kilde: ADAM[Q] eller ADAM[Q<i>]";
nL.L[s_,t]$(sOff[s_]) = 0;
$onlisting
  
# ---------------------------------G_production_public_ARIMA_forecast---------------------------------
#  Initialize G_production_public_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rIL2y[s_,t] "Andel af samlet produktion som går til lagerinvesteringer.";
rIL2y.L[s_,t]$(sOff[s_]) = 0;
VARIABLE rAfskr[k,s_,t] "Afskrivningsrate for kapital.";
rAfskr.L[k,s_,t]$(sOff[s_]) = 0;
VARIABLE rvOffIndirInv2vBVT[t] "Offentligt opkøb af eksisterende kapital relativt til BVT.";
rvOffIndirInv2vBVT.L[t] = 0;
$onlisting
  
# --------------------------------------G_production_public_other-------------------------------------
#  Initialize G_production_public_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rOffIB2NyInv[t] "Andel af offentlige nyinvesteringer, som er bygninger.";
rOffIB2NyInv.L[t] = 0;
VARIABLE rOffLTraeghed "Træghed i offentlig beskæftigelse.";
rOffLTraeghed.L = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\production_private.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Private sector production
# - Private sector demand for factors of production
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

	
# -------------------------------------G_production_private_prices------------------------------------
#  Initialize G_production_private_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE pKL[sp,t] "CES pris af qKL-aggregat.";
pKL.L[sp,t] = 0;
VARIABLE pKLB[sp,t] "CES pris af qKLB-aggregat.";
pKLB.L[sp,t] = 0;
VARIABLE pK[k,sp,t] "User cost af kapital.";
pK.L[k,sp,t]$(d1K[k,sp,t]) = 0;
VARIABLE pTobinsQ[k,sp,t] "Skyggepris af kapital eller Tobin's Q.";
pTobinsQ.L[k,sp,t] = 0;
$onlisting    
	
# -----------------------------------G_production_private_quantities----------------------------------
#  Initialize G_production_private_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE qKInstOmk[i_,sp,t] "Installationsomkostninger for kapital fordelt på private brancher.";
qKInstOmk.L[i_,sp,t]$(d1K[i_,sp,t]) = 0;
VARIABLE qKLBR[sp,t] "CES-aggregat mellem KLB-aggregat og materialer.";
qKLBR.L[sp,t] = 0;
VARIABLE qKLB[sp,t] "CES-aggregat mellem KL-aggregat and bygningskapital.";
qKLB.L[sp,t] = 0;
VARIABLE qKL[sp,t] "CES-aggregat mellem maskinkapital og arbejdskraft.";
qKL.L[sp,t] = 0;
VARIABLE qProd[t] "Produktivitetsindeks for Harrod-neutral vækst på tværs af brancher.";
qProd.L[t] = 0;
$onlisting

	
# -------------------------------------G_production_private_values------------------------------------
#  Initialize G_production_private_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

	
# --------------------------------------G_production_private_endo-------------------------------------
#  Initialize G_production_private_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rLUdn[s_,t] "Kapacitetsudnyttelse af arbejdskraft.";
rLUdn.L[s_,t]$(not sameas[s_,'off']) = 0;
VARIABLE rKUdn[k,s_,t] "Kapacitetsudnyttelse af sidste periodes qK.";
rKUdn.L[k,s_,t]$(d1K[k,s_,t-1] and not (sameas[s_,'bol'] or sameas[s_,'udv'] or sameas[s_,'off'])) = 0;
VARIABLE rKUdnSpBy[t] "Kapacitetsudnyttelse af sidste periodes qK, aggregat over bygnings- og maskinkapital for private byerhverv";
rKUdnSpBy.L[t] = 0;
VARIABLE ErSkatAfskr[k,sp,t] "Skyggepris for skatteværdien af bogført kapitalapparat.";
ErSkatAfskr.L[k,sp,t] = 0;
VARIABLE qL[s_,t] "Arbejdskraft i effektive enheder.";
qL.L[s_,t]$(s[s_]) = 0;
VARIABLE dKInstOmk2dK[k,sp,t] "qKInstOmk differentieret ift. qK[t-1]";
dKInstOmk2dK.L[k,sp,t]$(d1K[k,sp,t]) = 0;
VARIABLE dKInstOmk2dI[k,sp,t] "qKInstOmk differentieret ift. qI_s.";
dKInstOmk2dI.L[k,sp,t]$(d1K[k,sp,t]) = 0;
VARIABLE dKInstOmkLead2dI[k,sp,t] "qKInstOmk[t+1] differentieret ift. qI_s.";
dKInstOmkLead2dI.L[k,sp,t]$(d1K[k,sp,t]) = 0;
$onlisting
	
# --------------------------------------G_production_private_endo-------------------------------------
#  Initialize G_production_private_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

  
# -------------------------------G_production_private_exogenous_forecast------------------------------
#  Initialize G_production_private_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE jrLUdn[sp,t] "J-led.";
jrLUdn.L[sp,t] = 0;
VARIABLE jrKUdn[k,sp,t] "J-led.";
jrKUdn.L[k,sp,t] = 0;
VARIABLE jfqI_s_iL[t] "J-led.";
jfqI_s_iL.L[t] = 0;
VARIABLE jpK[k,sp,t] "J-led.";
jpK.L[k,sp,t] = 0;
$onlisting
  
# ---------------------------------G_production_private_ARIMA_forecast--------------------------------
#  Initialize G_production_private_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE uR[sp,t] "Skalaparameter for qR i produktionsfunktionen.";
uR.L[sp,t] = 0;
VARIABLE uKLB[sp,t] "Skalaparameter for qKLB i produktionsfunktionen.";
uKLB.L[sp,t] = 0;
VARIABLE uKL[sp,t] "Skalaparameter for qKL i produktionsfunktionen.";
uKL.L[sp,t] = 0;
VARIABLE uL[sp,t] "Skalaparameter for qL i produktionsfunktionen.";
uL.L[sp,t] = 0;
VARIABLE uK[k,sp,t] "Skalaparameter for qK i produktionsfunktionen.";
uK.L[k,sp,t] = 0;
$onlisting
  
# -------------------------------------G_production_private_other-------------------------------------
#  Initialize G_production_private_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE uKInstOmk[k,sp] "Parameter for installationsomkostninger.";
uKInstOmk.L[k,sp] = 0;
VARIABLE fKInstOmk[k,sp,t] "Vækstfaktor i investeringer som giver nul installationsomkostningerne.";
fKInstOmk.L[k,sp,t] = 0;
VARIABLE eKUdn[k] "Eksponent som styrer anvendelsen af kapacitetsudnyttelse af kapital.";
eKUdn.L[k] = 0;
VARIABLE eKUdnPersistens[k] "Eksponent som styrer træghed i kapacitetsudnyttelse af kapital.";
eKUdnPersistens.L[k] = 0;
VARIABLE eLUdn "Eksponent som styrer anvendelsen af kapacitetsudnyttelse af arbejdskraft.";
eLUdn.L = 0;
VARIABLE eLUdnPersistens "Eksponent som styrer træghed i kapacitetsudnyttelse af arbejdskraft.";
eLUdnPersistens.L = 0;
VARIABLE eKLBR[sp] "Substitutionselasticitet mellem qKLB og qR.";
eKLBR.L[sp] = 0;
VARIABLE eKLB[sp] "Substitutionselasticitet mellem qKL[sp] og qK[iB,sp]";
eKLB.L[sp] = 0;
VARIABLE eKL[sp] "Substitutionselasticitet mellem qK[im,sp] og qL.";
eKL.L[sp] = 0;
VARIABLE rAfskr_static[k,sp,t] "Udglattet afskrivningsrate til statisk kalibrering.";
rAfskr_static.L[k,sp,t] = 0;
VARIABLE gpI_s_static[k,sp,t] "Udglattet prisstigningsrate for investeringer til statisk kalibrering.";
gpI_s_static.L[k,sp,t] = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\finance.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Finance
# - Firm financing and valuation
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# ------------------------------------------G_finance_prices------------------------------------------
#  Initialize G_finance_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ----------------------------------------G_finance_quantities----------------------------------------
#  Initialize G_finance_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

  
# ------------------------------------------G_finance_values------------------------------------------
#  Initialize G_finance_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vAktie[t] "Aktier og andre ejerandelsbeviser, kursværdi, Kilde: ADAM[Ws_cr_z]+ADAM[Ws_cf_z]";
vAktie.L[t] = 0;
VARIABLE vAktiex[s_,t] "Værdien af virksomheden ekskl. dens finansielle aktiver (vAktie-vVirkx)";
vAktiex.L[s_,t] = 0;
VARIABLE vAktieRes[t] "Diskrepans mellem observeret og beregnet værdi for virksomheden.";
vAktieRes.L[t] = 0;
VARIABLE vEBT[s_,t] "Earnings before taxes - fortjeneste før beskatning.";
vEBT.L[s_,t] = 0;
VARIABLE vEBTx[s_,t] "Earnings before taxes - fortjeneste før beskatning - alene den del der hører til driften uden afkast.";
vEBTx.L[s_,t] = 0;
VARIABLE vEBITDA[s_,t] "Earnings before interests, taxes, depreciation, and amortization - fortjeneste før renter, skatter og afskrivninger.";
vEBITDA.L[s_,t] = 0;
VARIABLE vFCF[s_,t] "Frie pengestrømme (Free cash flow) ekskl. fra finansiel portefølje.";
vFCF.L[s_,t] = 0;
VARIABLE vVirkRenter[t] "Samlede nettoformueindkomst for finansielle og ikke-finansielle selskaber, Kilde: ADAM[Tin_cr]+ADAM[Tin_cf]";
vVirkRenter.L[t] = 0;
VARIABLE vVirkOmv[t] "Samlede omvurderinger af finansielle og ikke-finansielle selskabers nettoformue, Kilde: ADAM[Wn_cr]+ADAM[Wn_cf]-ADAM[Wn_cr][-1]-ADAM[Wn_cf][-1]-ADAM[Tfn_cr]-ADAM[Tfn_cf]";
vVirkOmv.L[t] = 0;
VARIABLE vVirkNFE[t] "Samlet nettofordringserhvervelse for finansielle og ikke-finansielle selskaber, Kilde: ADAM[Tfn_cr]+ADAM[Tfn-Cf]";
vVirkNFE.L[t] = 0;
VARIABLE vKskat[i_,s_,t] "Bogført værdi af samlet kapitalapparat fordelt på brancher.";
vKskat.L[i_,s_,t]$(t.val > 1994 and d1k[i_,s_,t]) = 0;
VARIABLE vAfskrFradrag[s_,t] "Skatte-fradrag for kapitalafskrivninger.";
vAfskrFradrag.L[s_,t] = 0;
VARIABLE vDividender[t] "Samlede udbytter af aktier og ejerandelsbeviser udbetalt af indenlandske selskaber, Kilde: ADAM[Tiu_cr_z]+ADAM[Tiu_cf_z]";
vDividender.L[t]$(t.val > 1994) = 0;
VARIABLE vUdstedelser[t] "Nettoudstedelser af aktier fra indenlandske selskaber, Kilde: ADAM[Tfs_cr_z]+ADAM[Tfs_cf_z]";
vUdstedelser.L[t] = 0;
VARIABLE vVirkK[s_,t] "Værdi af kapitalbeholdningen til investeringspris ekskl. husholdningernes boligkapital.";
vVirkK.L[s_,t] = 0;
VARIABLE vVirk[portf_,t] "Virksomhedernes (indenlandske selskabers) finansielle portefølje.";
vVirk.L[portf_,t]$(not (t.val < 1994 and sameas['NetFin',portf_])) = 0;
VARIABLE vVirkLaan[s_,t] "Lån til gældsfinansierede investeringer.";
vVirkLaan.L[s_,t] = 0;
VARIABLE vVirkx[t] "Samlet værdi af virksomhedernes finansielle aktiver - del af finansiel portefølje som opgøres til face-value.";
vVirkx.L[t] = 0;
VARIABLE vPension[akt,t] "Porteføljen af pensionsformuen.";
vPension.L[akt,t]$(t.val > 2015) = 0;
VARIABLE vtSelskabx[s_,t] "Den del af selskabsskatten der hører til driften.";
vtSelskabx.L[s_,t] = 0;
VARIABLE vVirkFinInd[t] "Samlet afkast (omvurderinger + renter) på virksomhedens portefølje.";
vVirkFinInd.L[t] = 0;
VARIABLE vVirkIndRest[t] "Rest-led i virksomheden indtjening.";
vVirkIndRest.L[t] = 0;
$onlisting

  
# -------------------------------------------G_finance_endo-------------------------------------------
#  Initialize G_finance_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rVirkDisk[sp,t] "Selskabernes diskonteringsrate.";
rVirkDisk.L[sp,t] = 0;
VARIABLE rAfkastKrav[s_,t] "Investorernes forventede afkast på vAktiex. I fravær af stød er den lig afkastet på vAktiex.";
rAfkastKrav.L[s_,t] = 0;
VARIABLE rVirkxAfk[t] "Afkastrate på virksomhedernes finansielle aktiver.";
rVirkxAfk.L[t]$(t.val > 2015) = 0;
VARIABLE rRente[portf,t] "Renter og dividender på finansiel portefølje.";
rRente.L[portf,t]$(sameas[portf,'Pens'] or sameas[portf,'RealKred'] or sameas[portf,'Bank'] or sameas[portf,'BankGaeld']) = 0;
VARIABLE rOmv[portf,t] "Omvurderinger på finansiel portefølje.";
rOmv.L[portf,t]$((sameas[portf,'IndlAktier'] and t.val > 1995) or sameas[portf,'UdlAktier'] or sameas[portf,'Pens']) = 0;
VARIABLE rLaan2K[t] "Andel af investeringer som er gældsfinansierede.";
rLaan2K.L[t] = 0;
VARIABLE rIndlAktiePrem[s_,t] "Risikopræmie på indenlandske aktier.";
rIndlAktiePrem.L[s_,t]$(sTot[s_]) = 0;
VARIABLE rFinAccelPrem[sp,t] "";
rFinAccelPrem.L[sp,t] = 0;
VARIABLE vFCFxRef[sp,t] "";
vFCFxRef.L[sp,t] = 0;
$onlisting
  
# -------------------------------------------G_finance_endo-------------------------------------------
#  Initialize G_finance_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting  # Restrict endo group to tx0[t]

  
# ------------------------------------G_finance_exogenous_forecast------------------------------------
#  Initialize G_finance_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rUdlAktiePrem[t] "Risikopræmie på udenlandske aktier.";
rUdlAktiePrem.L[t] = 0;
VARIABLE rVirkDiskPrem[sp,t] "Risikopræmie i diskonteringsraten for virksomhedens beslutningstagere.";
rVirkDiskPrem.L[sp,t] = 0;
VARIABLE jvVirkRenter[t] "J-led.";
jvVirkRenter.L[t] = 0;
VARIABLE jvVirkOmv[t] "J-led.";
jvVirkOmv.L[t] = 0;
VARIABLE jrRente_pension[t] "J-led.";
jrRente_pension.L[t] = 0;
VARIABLE jrOmv_pension[t] "J-led.";
jrOmv_pension.L[t] = 0;
VARIABLE jrOmv_UdlAktier[t] "J-led.";
jrOmv_UdlAktier.L[t] = 0;
VARIABLE jvVirkx[t] "J-led.";
jvVirkx.L[t] = 0;
$onlisting
  
# --------------------------------------G_finance_ARIMA_forecast--------------------------------------
#  Initialize G_finance_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rvRealKred2K[t] "Værdien af realkreditgæld i forhold til værdien af kapitalapparatet.";
rvRealKred2K.L[t] = 0;
VARIABLE crRenteBank[t] "Forskel på gns. obligationsrente indlånsrente for bankerne.";
crRenteBank.L[t] = 0;
$onlisting
  
# -------------------------------------------G_finance_other------------------------------------------
#  Initialize G_finance_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rSkatAfskr[k,t] "Skattemæssig afskrivningsrate.";
rSkatAfskr.L[k,t] = 0;
VARIABLE rAktieRes2BVT[t] "Uforklaret del af virksomhedens værdi ift. glidende gennemsnit af BVT.";
rAktieRes2BVT.L[t] = 0;
VARIABLE rvOblLaan2K[t] "Andel af investeringer som er gældsfinansierede via virksomhedsobligationer.";
rvOblLaan2K.L[t] = 0;
VARIABLE rvVirkx[akt,t] "Andel af virksomhedens finansielle aktiver, som står i denne aktivtype.";
rvVirkx.L[akt,t] = 0;
VARIABLE rPensAkt[akt,t] "Andel af aktiver ud af samlede aktiver.";
rPensAkt.L[akt,t] = 0;
VARIABLE rFinAccel[sp] "Straf-rente fra finansielle friktioner på overskydende (manglende) fri pengestrømme.";
rFinAccel.L[sp] = 0;
VARIABLE cFinAccel[sp,t] "";
cFinAccel.L[sp,t] = 0;
VARIABLE uFinAccel[sp,t] "Hældning af den approksimerede afledte af omkostnings-funktionen fra finansielle friktioner i steady state.";
uFinAccel.L[sp,t] = 0;
VARIABLE rFinAccelTraeghed "Træghed i opdatering af reference-profit for finansiel friktion. Styrer persistens i finansiel friktion.";
rFinAccelTraeghed.L = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\pricing.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Pricing
# - Price rigidities, markups, and foreign prices
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# ------------------------------------------G_pricing_prices------------------------------------------
#  Initialize G_pricing_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE pUdl[t] "Indeks for udenlandsk prisniveau som andre udenlandske priser følger.";
pUdl.L[t] = 0;
VARIABLE pOlie[t] "Oliepris.";
pOlie.L[t] = 0;
$onlisting
  
# ----------------------------------------G_pricing_quantities----------------------------------------
#  Initialize G_pricing_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting 
  
# ------------------------------------------G_pricing_values------------------------------------------
#  Initialize G_pricing_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting 

  
# -------------------------------------------G_pricing_endo-------------------------------------------
#  Initialize G_pricing_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE jrMarkup[s_,t] "Mark-up udover den fra mikrofundamentet, som kommer fra rMerPris - 0 i historiske år.";
jrMarkup.L[s_,t] = 0;
VARIABLE rMarkup[s_,t] "Markup.";
rMarkup.L[s_,t] = 0;
VARIABLE srMarkup[s_,t] "Strukturel mark-up.";
srMarkup.L[s_,t]$(sameas[s_,'udv'] or sameas[s_,'soe']) = 0;
$onlisting
  
# -------------------------------------------G_pricing_endo-------------------------------------------
#  Initialize G_pricing_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting # Restrict endo group to tx0[t]

  
# ------------------------------------G_pricing_exogenous_forecast------------------------------------
#  Initialize G_pricing_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE jpY_bol[t] "j-led.";
jpY_bol.L[t] = 0;
$onlisting
  
# --------------------------------------G_pricing_ARIMA_forecast--------------------------------------
#  Initialize G_pricing_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE upYUdv[t] "Skalaparameter for eksogen pris på udvinding.";
upYUdv.L[t] = 0;
$onlisting
  
# -------------------------------------------G_pricing_other------------------------------------------
#  Initialize G_pricing_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE upYTraeghed[sp] "Parameter for Rotemberg omkostning.";
upYTraeghed.L[sp] = 0;
VARIABLE eY[sp,t] "Substitutionselasticitet mellem intermediate goods og final goods i produktionen.";
eY.L[sp,t] = 0;
VARIABLE epM2pOlie[s] "Oliepris-elasticitet for importpriser.";
epM2pOlie.L[s] = 0;
VARIABLE epXUdl2pOlie[x] "Oliepris-elasticitet for udenlandske eksportkonkurrerende priser.";
epXUdl2pOlie.L[x] = 0;
VARIABLE upXSoe[t] "";
upXSoe.L[t] = 0;
VARIABLE upXUdl[x,t] "Skalaparameter for udenlandske eksportkonkurrerende priser.";
upXUdl.L[x,t] = 0;
VARIABLE upM[s,t] "Skalaparameter for import-priser.";
upM.L[s,t] = 0;
$onlisting

  set sMarkup[sp] "Brancher som fremskrives med en eksogen strukturel markup forskellig fra 0" /tje, fre/;
  set sZeroMarkup[sp] "Brancher som fremskrives med 0 strukturel markup" /lan, byg, ene, soe/;

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\labor_market.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Labor market
# - labor force participation, job searching and matching, and wage bargaining
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# ----------------------------------------G_labor_market_prices---------------------------------------
#  Initialize G_labor_market_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE pL[sp,t] "User cost for effektiv arbejdskraft i produktionsfunktion.";
pL.L[sp,t] = 0;
$onlisting

  
# --------------------------------------G_labor_market_quantities-------------------------------------
#  Initialize G_labor_market_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE dqLdnL[s_,t] "qL differentieret ift. nL.";
dqLdnL.L[s_,t] = 0;
VARIABLE dqLLeaddnL[sp,t] "qL[t+1] differentieret ift. nL[t]";
dqLLeaddnL.L[sp,t] = 0;
$onlisting

  
# ----------------------------------------G_labor_market_values---------------------------------------
#  Initialize G_labor_market_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vWHh[a_,t] "Årsløn pr. beskæftiget.";
vWHh.L[a_,t]$((aTot[a_] or a15t100[a_]) and t.val > 2015) = 0;
VARIABLE vhW[t] "Løn pr. produktiv enhed arbejdskraft (dvs. pr. time korrigeret for uddannelse og andre sammensætningseffekter), Kilde: ADAM[lna]";
vhW.L[t] = 0;
VARIABLE vhWNy[t] "Løn for opdaterede kontrakter (enten genforhandlet eller indekseret).";
vhWNy.L[t] = 0;
VARIABLE vWUdl[t] "Lønsum til grænsearbejdere.";
vWUdl.L[t]$(t.val > 1999) = 0;
VARIABLE vhWForhandlet[t] "Løn for ny-forhandlede Calvo-kontrakter.";
vhWForhandlet.L[t] = 0;
VARIABLE vVirkLoenPos[t] "Hjælpevariabel til lønforhandling. Positiv del af virksomhedernes værdifunktion i lønforhandling.";
vVirkLoenPos.L[t]$(t.val > 2015) = 0;
VARIABLE vVirkLoenPos0[t] "Hjælpevariabel til lønforhandling. Bidrag til vVirkLoenPos fra indeværende periode.";
vVirkLoenPos0.L[t] = 0;
VARIABLE vVirkLoenNeg[t] "Hjælpevariabel til lønforhandling. Negativ del af virksomhedernes værdifunktion i lønforhandling.";
vVirkLoenNeg.L[t]$(t.val > 2015) = 0;
VARIABLE vVirkLoenNeg0[t] "Hjælpevariabel til lønforhandling. Bidrag til vVirkLoenNeg fra indeværende periode.";
vVirkLoenNeg0.L[t] = 0;
VARIABLE vFFLoenPos[t] "Hjælpevariabel til lønforhandling. Positiv del af fagforeningens værdifunktion i lønforhandling.";
vFFLoenPos.L[t]$(t.val > 2015) = 0;
VARIABLE vFFLoenPos0[t] "Hjælpevariabel til lønforhandling. Bidrag til vFFLoenPos fra indeværende periode.";
vFFLoenPos0.L[t]$(t.val > 2015) = 0;
VARIABLE vFFLoenNeg[t] "Hjælpevariabel til lønforhandling. Negativ del af fagforeningens værdifunktion i lønforhandling.";
vFFLoenNeg.L[t]$(t.val > 2015) = 0;
VARIABLE vFFLoenNeg0[t] "Hjælpevariabel til lønforhandling. Bidrag til vFFLoenNeg fra indeværende periode.";
vFFLoenNeg0.L[t]$(t.val > 2015) = 0;
VARIABLE vW[s_,t] "Branche-specifik løn inklusiv lønsumsafgift.";
vW.L[s_,t] = 0;
VARIABLE vSelvstLoen[s_,t] "Lønudbetaling til selvstændige.";
vSelvstLoen.L[s_,t] = 0;
VARIABLE vLoensum[s_,t] "Lønsum, Kilde: ADAM[Yw]";
vLoensum.L[s_,t] = 0;
$onlisting

  
# -----------------------------------------G_labor_market_endo----------------------------------------
#  Initialize G_labor_market_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rL2nL[t] "Effektive timer pr. beskæftiget.";
rL2nL.L[t]$(t.val > 2015) = 0;
VARIABLE dOpslagOmk2dnL[sp,t] "rOpslagOmk * nL differentieret ift. nL.";
dOpslagOmk2dnL.L[sp,t] = 0;
VARIABLE dOpslagOmk2dnLLag[sp,t] "rOpslagOmk * nL differentieret ift. nL[t-1]";
dOpslagOmk2dnLLag.L[sp,t] = 0;
VARIABLE nSoegBaseHh[a_,t] "Sum af jobsøgende og beskæftigede.";
nSoegBaseHh.L[a_,t]$((aTot[a_] or a15t100[a_]) and t.val > 2015) = 0;
VARIABLE nLHh[a_,t] "Beskæftigelse.";
nLHh.L[a_,t]$(aTot[a_] or (a15t100[a_] and t.val > 2015)) = 0;
VARIABLE nSoegHh[a_,t] "Jobsøgende.";
nSoegHh.L[a_,t]$(aTot[a_] or (a15t100[a_] and t.val > 2015)) = 0;
VARIABLE fDeltag[a,t] "Deltagelse.";
fDeltag.L[a,t]$(a15t100[a] and t.val > 2015) = 0;
VARIABLE nLUdl[t] "Udenlandsk arbejdskraft - inkluderer pt. sort arbejde.";
nLUdl.L[t] = 0;
VARIABLE nSoegUdl[t] "Udenlandske jobsøgende.";
nSoegUdl.L[t] = 0;
VARIABLE hLHh[a_,t] "Aldersfordelt arbejdstid, Kilde: FMs Befolkningsregnskab.";
hLHh.L[a_,t]$((aTot[a_] or a15t100[a_]) and t.val > 2015) = 0;
VARIABLE hL[t] "Erlagte arbejdstimer i alt, Kilde: ADAM[hq]";
hL.L[t]$(t.val > 1999) = 0;
VARIABLE hLUdl[t] "Samlede erlagte arbejdstimer for grænsearbejdere.";
hLUdl.L[t]$(t.val > 1999) = 0;
VARIABLE rJobFinding[t] "Andel af jobsøgende som får et job.";
rJobFinding.L[t] = 0;
VARIABLE rMatch[t] "Andel af jobopslag, som resulterer i et match.";
rMatch.L[t] = 0;
VARIABLE rOpslag2soeg[t] "Labor market tightness.";
rOpslag2soeg.L[t] = 0;
VARIABLE nOpslag[s_,t] "Samlet antal jobopslag.";
nOpslag.L[s_,t] = 0;
VARIABLE rOpslagOmk[s_,t] "Andel af arbejdskraft som anvendes til hyrings-omkostninger.";
rOpslagOmk.L[s_,t] = 0;
VARIABLE rSeparation[a_,t] "Job-separations-rate.";
rSeparation.L[a_,t]$(aTot[a_] and t.val > 2015) = 0;
VARIABLE fZh[a,t] "Z-led.";
fZh.L[a,t]$((tx0[t] and a15t100[a]) and t.val > 2015) = 0;
VARIABLE cZh[a,t] "Reallønsobjekt der benyttes i Z-led.";
cZh.L[a,t]$((a15t100[a]) and t.val > 2015) = 0;
VARIABLE nPop[a_,t] "Befolkningen.";
nPop.L[a_,t]$(not a[a_] and t.val > 1991) = 0;
VARIABLE nSoc[soc_,t] "Socio-grupper og aggregater, antal 1.000 personer, Kilde: BFR.";
nSoc.L[soc_,t] = 0;
VARIABLE rLedig[t] "Ledighedsrate.";
rLedig.L[t]$(t.val > 1999) = 0;
VARIABLE rLedigGab[t] "Strukturelt ledighedsgab.";
rLedigGab.L[t]$(t.val > 1999) = 0;
VARIABLE fProdHh[a_,t] "Aldersfordelt produktivitet vedrørende uddannelse og sammensætningseffekter.";
fProdHh.L[a_,t]$(t.val > 2015) = 0;
VARIABLE fW[s_,t] "Branchespecifikt produktivitetsindeks for arbejdskraft. Vægtet gennemsnit er altid 1.";
fW.L[s_,t] = 0;
VARIABLE mtInd[a_,t] "Marginal (ekstensiv margin) gennemsnitlig skattesats på lønindkomst.";
mtInd.L[a_,t] = 0;
$onlisting
  
# -----------------------------------------G_labor_market_endo----------------------------------------
#  Initialize G_labor_market_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting # Restrict endo group to tx0[t]

  
# ----------------------------------G_labor_market_exogenous_forecast---------------------------------
#  Initialize G_labor_market_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE jnSoc[soc_,t] "J-led.";
jnSoc.L[soc_,t] = 0;
$onlisting
  
# ------------------------------------G_labor_market_ARIMA_forecast-----------------------------------
#  Initialize G_labor_market_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rLoenNash[t] "Nash-forhandlingsvægt.";
rLoenNash.L[t] = 0;
VARIABLE rSelvst[s_,t] "Andel af beskæftigede, som er selvstændige.";
rSelvst.L[s_,t] = 0;
$onlisting

  
# ----------------------------------------G_labor_market_other----------------------------------------
#  Initialize G_labor_market_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE fProdHh_a[a,t] "Alders-specifikt led i fProdHh.";
fProdHh_a.L[a,t] = 0;
VARIABLE fProdHh_t[t] "Tids-afhængigt led i fProdHh.";
fProdHh_t.L[t] = 0;
VARIABLE fDiskpL[sp,t] "Eksogent diskonteringsfaktor i efterspørgsel efter arbejdskraft.";
fDiskpL.L[sp,t] = 0;
VARIABLE fDiskDeltag[a,t] "Eksogent diskonteringsfaktor i deltagelsesbeslutning.";
fDiskDeltag.L[a,t] = 0;
VARIABLE mrKomp[a_,t] "Marginal netto-kompensationsgrad.";
mrKomp.L[a_,t] = 0;
VARIABLE eDeltag "Kort-sigts (invers) elasticitet på arbejdsstyrke-deltagelse.";
eDeltag.L = 0;
VARIABLE emrKomp "(invers) Elasticitet på arbejdsstyrke-deltagelse fra ændringer i kompensationsgrad.";
emrKomp.L = 0;
VARIABLE eMatching "Eksponent i matching funktion.";
eMatching.L = 0;
VARIABLE nSoegBaseUdl[t] "Sum af udenlandske jobsøgende og beskæftigede.";
nSoegBaseUdl.L[t] = 0;
VARIABLE uDeltag[a,t] "Præferenceparameter for arbejdsstyrke-deltagelse.";
uDeltag.L[a,t] = 0;
VARIABLE uh[a,t] "Præferenceparameter for timer.";
uh.L[a,t] = 0;
VARIABLE eh "Invers arbejdsudbudselasticitet - intensiv margin.";
eh.L = 0;
VARIABLE fhLUdl[t] "Faktor som korrigerer for forskel i gennemsnitlig arbejdstid/produktivitet mellem grænsearbejdere og danskboende beskæftigede.";
fhLUdl.L[t] = 0;
VARIABLE fProdUdl[t] "Faktor som korrigerer for forskel i gennemsnitlig løn mellem grænsearbejdere og danskboende beskæftigede.";
fProdUdl.L[t] = 0;
VARIABLE fW0[s_,t] "Branchespecifik produktivitetsindeks for arbejdskraft.";
fW0.L[s_,t] = 0;
VARIABLE uOpslagOmk "Lineær omkostning pr. jobopslag.";
uOpslagOmk.L = 0;
VARIABLE uMatchOmk "Lineær omkostning pr. jobmatch.";
uMatchOmk.L = 0;
VARIABLE uMatchOmkSqr "Kvadratisk omkostning ved jobopslag.";
uMatchOmkSqr.L = 0;
VARIABLE rLoenTraeghed "Parameter for træghed i Calvo-lønnen.";
rLoenTraeghed.L = 0;
VARIABLE rLoenIndeksering "Parameter for graden af løn indeksering.";
rLoenIndeksering.L = 0;
VARIABLE cmtInd[a,t] "Residual-led i marginal gennemsnitlig skattesats på lønindkomst.";
cmtInd.L[a,t] = 0;
VARIABLE rfZhTraeghed "Træghed i indkomsteffekt på intensiv margin.";
rfZhTraeghed.L = 0;
VARIABLE rAMDisk[t] "Eksogen diskonterings-rate for parter i lønforhandling.";
rAMDisk.L[t] = 0;
VARIABLE rFFLoenAlternativ "Forhandlingsalternativ (outside option) for fagforening i lønforhandling.";
rFFLoenAlternativ.L = 0;
VARIABLE cMatchOmkSqr[s_,t] "Parameter som kalibreres for at fjerne kvadratiske matching-omkostnigner i grundforløb.";
cMatchOmkSqr.L[s_,t] = 0;
VARIABLE jvhW[t] "J-led i løn.";
jvhW.L[t] = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\struk.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Structural levels
# - Potential output (Gross Value Added) and employment
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# -------------------------------------------G_struk_prices-------------------------------------------
#  Initialize G_struk_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE pKspBy[t] "(Investerings)Pris på aggregeret kapital-apparat i brancher med konjunkturgab.";
pKspBy.L[t] = 0;
$onlisting
  
# -----------------------------------------G_struk_quantities-----------------------------------------
#  Initialize G_struk_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE sqBVT[t] "Strukturel BVT.";
sqBVT.L[t] = 0;
VARIABLE sdqLdnL[s_,t] "sqL differentieret ift. snL.";
sdqLdnL.L[s_,t] = 0;
VARIABLE sdOpslagOmk2dnLLag[t] "sqL[t+1] differentieret ift. snL[t]";
sdOpslagOmk2dnLLag.L[t] = 0;
VARIABLE sqL[s_,t] "Strukturel arbejdskraft i effektive enheder.";
sqL.L[s_,t]$(spBy[s_] or spTot[s_]) = 0;
VARIABLE qKspBy[t] "Kapital i én-sektor Cobb-Douglas produktionsfunktion.";
qKspBy.L[t] = 0;
VARIABLE qLspBy[t] "L i én-sektor Cobb-Douglas produktionsfunktion.";
qLspBy.L[t] = 0;
VARIABLE sqLspBy[t] "Strukturelt L i én-sektor Cobb-Douglas produktionsfunktion.";
sqLspBy.L[t] = 0;
$onlisting
  
# -------------------------------------------G_struk_values-------------------------------------------
#  Initialize G_struk_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# --------------------------------------------G_struk_endo--------------------------------------------
#  Initialize G_struk_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE uY[t] "Produktivitetsparameter i én-sektor Cobb-Douglas produktionsfunktion (ikke TFP pga. kapacitetsudnyttelse mv.).";
uY.L[t] = 0;
VARIABLE shL[t] "Strukturelle arbejdstimer i alt, Kilde: ADAM[hq]";
shL.L[t] = 0;
VARIABLE srL2nL[t] "Strukturelle effektive timer pr. beskæftiget.";
srL2nL.L[t]$(t.val > 2015) = 0;
VARIABLE sfW[s_,t] "Strukturelt branchespecifikt produktivitetsindeks for arbejdskraft. Vægtet gennemsnit er altid 1.";
sfW.L[s_,t] = 0;
VARIABLE sdOpslagOmk2dnL[t] "srOpslagOmk * snL differentieret ift. snL.";
sdOpslagOmk2dnL.L[t] = 0;
VARIABLE sfProdHh[t] "Strukturelt gennemsnit af aldersgruppers produktivitet.";
sfProdHh.L[t] = 0;
VARIABLE snSoegBaseHh[a_,t] "Strukturel arbejdsstyrke.";
snSoegBaseHh.L[a_,t]$((aTot[a_] or a15t100[a_]) and t.val > 2015) = 0;
VARIABLE snLHh[a_,t] "Strukturel beskæftigelse.";
snLHh.L[a_,t]$(aTot[a_] or (a15t100[a_] and t.val > 2015)) = 0;
VARIABLE snSoegHh[a_,t] "Strukturel jobsøgende.";
snSoegHh.L[a_,t]$(aTot[a_] or (a15t100[a_] and t.val > 2015)) = 0;
VARIABLE sfDeltag[a,t] "Strukturel deltagelse.";
sfDeltag.L[a,t]$(a15t100[a] and t.val > 2015) = 0;
VARIABLE srJobFinding[t] "Strukturel andel af jobsøgende som får et job.";
srJobFinding.L[t] = 0;
VARIABLE srMatch[t] "Strukturel andel af jobopslag, som resulterer i et match.";
srMatch.L[t] = 0;
VARIABLE srOpslag2soeg[t] "Strukturel labor market tightness.";
srOpslag2soeg.L[t] = 0;
VARIABLE shLHh[a_,t] "Strukturel aldersfordelt arbejdstid.";
shLHh.L[a_,t]$((aTot[a_] or a15t100[a_]) and t.val > 2015) = 0;
VARIABLE srOpslagOmk[t] "Andel af arbejdskraft som går til hyrings-omkostninger strukturelt.";
srOpslagOmk.L[t] = 0;
VARIABLE snOpslag[t] "Strukturelt antal jobopslag.";
snOpslag.L[t] = 0;
VARIABLE srSeparation[t] "Strukturel aggregeret separationsrate.";
srSeparation.L[t]$(t.val > 2015) = 0;
VARIABLE snLUdl[t] "Strukturel udenlandsk arbejdskraft i antal hoveder - inkluderer pt. sort arbejde.";
snLUdl.L[t] = 0;
VARIABLE shLUdl[t] "Strukturelle arbejdstimer for grænsearbejdere.";
shLUdl.L[t] = 0;
VARIABLE snL[s_,t] "Strukturel beskæftigede inklusiv udenlandsk arbejdskraft.";
snL.L[s_,t] = 0;
VARIABLE snSoegUdl[t] "Strukturel beskæftigede inklusiv udenlandsk arbejdskraft.";
snSoegUdl.L[t] = 0;
VARIABLE snSoc[soc_,t] "Strukturelle værdier for socio-grupper og aggregater, antal 1.000 personer, Kilde: BFR.";
snSoc.L[soc_,t]$(t.val > 2015) = 0;
VARIABLE dSoc2dPop[soc_,t] "Befolkningssnøgle fordelt på socio-grupper";
dSoc2dPop.L[soc_,t]$(sameas['boern',soc_] and t.val > 2015) = 0;
VARIABLE srLedig[t] "Strukturel ledighedsrate.";
srLedig.L[t]$(t.val > 2015) = 0;
$onlisting 

  
# -------------------------------------G_struk_exogenous_forecast-------------------------------------
#  Initialize G_struk_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE dSoc2dBesk[soc_,t] "Beskæftigelsesnøgle fordelt på socio-grupper.";
dSoc2dBesk.L[soc_,t] = 0;
$onlisting
  
# --------------------------------------------G_struk_other-------------------------------------------
#  Initialize G_struk_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE srLUdn[s_,t] "Strukturel kapacitetsudnyttelse på arbejdskraft.";
srLUdn.L[s_,t] = 0;
VARIABLE jshLHh[a,t] "J-led i strukturel timebeslutning.";
jshLHh.L[a,t] = 0;
VARIABLE jsfDeltag[a,t] "J-led i strukturel deltagelsesbeslutning.";
jsfDeltag.L[a,t] = 0;
VARIABLE juY[t] "J-led til residual i BVT-gab.";
juY.L[t] = 0;
$onlisting
  
# --------------------------------------------G_struk_endo--------------------------------------------
#  Initialize G_struk_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\consumers.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Consumers
# - Consumption decisions and budget constraint
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# -----------------------------------------G_consumers_prices-----------------------------------------
#  Initialize G_consumers_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE EpC[t] "Forventet prisindeks for næste periodes forbrug ekskl. bolig.";
EpC.L[t]$(t.val > 2015) = 0;
VARIABLE pBolig[t] "Kontantprisen på enfamiliehuse, Kilde: ADAM[phk]";
pBolig.L[t] = 0;
VARIABLE pLand[t] "Imputeret pris på grundværdien af land til boligbenyttelse.";
pLand.L[t] = 0;
VARIABLE EpBolig[t] "Forventning til boligpris i næste periode.";
EpBolig.L[t]$(t.val > 2015) = 0;
VARIABLE EpLand[t] "Forventning til pris på grundværdien af land til boligbenyttelse i næste periode.";
EpLand.L[t]$(t.val>2015) = 0;
VARIABLE pBoligUC[a,t] "User cost for ejerbolig.";
pBoligUC.L[a,t]$(t.val > 2015) = 0;
$onlisting
  
# ---------------------------------------G_consumers_quantities---------------------------------------
#  Initialize G_consumers_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE qC_a[a,t] "Individuelt forbrug ekskl. bolig.";
qC_a.L[a,t]$(a18t100[a] and t.val > 2015) = 0;
VARIABLE qCR[a_,t] "Individuel forbrug ekskl. bolig for fremadskuende agenter.";
qCR.L[a_,t]$((a18t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE qCHtM[a_,t] "Individuel forbrug ekskl. bolig for hand-to-mouth agenter.";
qCHtM.L[a_,t]$((a18t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE qCRxRef[a,t] "Forbrug ekskl. bolig og referenceforbrug for fremadskuende agenter.";
qCRxRef.L[a,t]$(a18t100[a] and t.val > 2015) = 0;
VARIABLE qCHtMxRef[a_,t] "Individuel forbrug ekskl. bolig og referenceforbrug for hand-to-mouth agenter .";
qCHtMxRef.L[a_,t]$(a18t100[a_] and t.val > 2015) = 0;
VARIABLE qBiler[t] "Kapitalmængde for køretøjer i husholdningerne, Kilde: ADAM[fKncb]";
qBiler.L[t] = 0;
VARIABLE qBoligHtM[a_,t] "Ejerboliger ejet af hand-to-mouth husholdningerne.";
qBoligHtM.L[a_,t]$((a18t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE qBoligHtMxRef[a_,t] "Ejerboliger ejet af hand-to-mouth husholdningerne eksl. referenceforbrug.";
qBoligHtMxRef.L[a_,t]$(a18t100[a_] and t.val > 2015) = 0;
VARIABLE qBoligR[a_,t] "Ejerboliger ejet af rationelle fremadskuende husholdningerne.";
qBoligR.L[a_,t]$((a18t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE qBolig[a_,t] "Ejerboliger ejet af husholdningerne (aggregat af kapital og land)";
qBolig.L[a_,t]$((a18t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE qBoligRxRef[a_,t] "Ejerboliger ejet af husholdningerne ekskl. referenceforbrug.";
qBoligRxRef.L[a_,t]$(a18t100[a_] and t.val > 2015) = 0;
VARIABLE qYBolig[t] "Bruttoproduktion af ejerboliger inkl. installationsomkostninger (aggregat af kapital og land)";
qYBolig.L[t] = 0;
VARIABLE qIBoligInstOmk[t] "Installationsomkostninger for boliginvesteringer i nybyggeri.";
qIBoligInstOmk.L[t] = 0;
VARIABLE qLand[t] "Land benyttet som grunde til ejerboliger.";
qLand.L[t] = 0;
VARIABLE qLandSalg[t] "Land solgt fra husholdningerne til at bygge grunde til ejerboliger på.";
qLandSalg.L[t] = 0;
VARIABLE qKBolig[t] "Kapitalmængde af ejerboliger, Kilde: ADAM[fKnbhe]";
qKBolig.L[t] = 0;
VARIABLE qIBolig[t] "Investeringer i ejerboligkapital.";
qIBolig.L[t] = 0;
VARIABLE qKLejeBolig[t] "Kapitalmængde af lejeboliger, Kilde: ADAM[fKnbhl]";
qKLejeBolig.L[t] = 0;
VARIABLE qNytte[a,t] "CES nest af bolig og andet privat forbrug.";
qNytte.L[a,t]$(t.val > 2015) = 0;
VARIABLE qArvBase[a,t] "Hjælpevariabel til førsteordensbetingelse for arve-nytte.";
qArvBase.L[a,t]$(a18t100[a] and t.val > 2015) = 0;
VARIABLE qFormueBase[a,t] "Hjælpevariabel til førsteordensbetingelse for nytte af formue.";
qFormueBase.L[a,t]$(a18t100[a] and t.val > 2015) = 0;
$onlisting
  
# -----------------------------------------G_consumers_values-----------------------------------------
#  Initialize G_consumers_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vC_a[a,t] "Individuelt forbrug ekskl. bolig.";
vC_a.L[a,t]$(a18t100[a] and t.val > 2015) = 0;
VARIABLE vHhx[a_,t] "Husholdningernes formue ekskl. pension, bolig og realkreditgæld (vægtet gns. af Hand-to-Mouth og rationelle forbrugere)";
vHhx.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vCLejeBolig[a_,t] "Forbrug af lejeboliger.";
vCLejeBolig.L[a_,t]$(a18t100[a_] or aTot[a_]) = 0;
VARIABLE vArvGivet[a,t] "Arv givet af hele kohorten med alder a.";
vArvGivet.L[a,t]$(t.val > 2015) = 0;
VARIABLE vArv[a_,t] "Arv modtaget af en person med alderen a.";
vArv.L[a_,t]$(t.val > 2015) = 0;
VARIABLE vtArv[a_,t] "Kapitalskatter (Arveafgift), Kilde: ADAM[sK_h_o] for total.";
vtArv.L[a_,t]$(t.val > 2015) = 0;
VARIABLE vtHhx[a_,t] "Skatter knyttet til husholdningerne i MAKRO ekskl. pensionsafkastskat, ejendomsværdiskat og dødsboskat.";
vtHhx.L[a_,t]$((a0t100[a_] and t.val > 2015) or aTot[a_]) = 0;
VARIABLE vBoligUdgift[a_,t] "Cash-flow-udgift til bolig - dvs. inkl. afbetaling på gæld og inkl. øvrige omkostninger fx renter og bidragssats på realkreditlån.";
vBoligUdgift.L[a_,t]$(t.val > 2015) = 0;
VARIABLE vBoligUdgiftHtM[a_,t] "Netto udgifter til køb/salg/forbrug af bolig for hand-to-mouth husholdninger.";
vBoligUdgiftHtM.L[a_,t]$(t.val > 2015) = 0;
VARIABLE vBoligUdgiftArv[t] "Netto udgifter til køb/salg/forbrug af bolig gående til arv.";
vBoligUdgiftArv.L[t]$(t.val > 2015) = 0;
VARIABLE vHhNFErest[a_,t] "Kapitaloverførsler, direkte investeringer mv., som bliver residualt aldersfordelt.";
vHhNFErest.L[a_,t]$(a0t100[a_] or (aTot[a_] and t.val > 2015)) = 0;
VARIABLE jvHhNFErest[a_,t] "Justeringsled til at få kalibreret til aldersfordelte formueændringer historisk.";
jvHhNFErest.L[a_,t]$(aTot[a_] and t.val > 2015) = 0;
VARIABLE vBoernFraHh[a,t] "Finansielle nettooverførsler fra forældre modtaget af børn i alder a.";
vBoernFraHh.L[a,t]$(a0t17[a] and t.val > 2015) = 0;
VARIABLE vHhTilBoern[a_,t] "Finansielle nettooverførsler til børn givet af forældre i alder a.";
vHhTilBoern.L[a_,t]$((aTot[a_] or a18t100[a_]) and t.val > 2015) = 0;
VARIABLE vBolig[a_,t] "Husholdningernes boligformue.";
vBolig.L[a_,t]$((a18t100[a_] or atot[a_]) and t.val > 2015) = 0;
VARIABLE vBoligHtM[a_,t] "Hånd-til-mund husholdningernes boligformue.";
vBoligHtM.L[a_,t]$(a18t100[a_] or atot[a_]) = 0;
VARIABLE vKBolig[t] "Værdi af kapitalmængde af ejerboliger.";
vKBolig.L[t] = 0;
VARIABLE vIBolig[t] "Værdi af ejerbolig-investeringer.";
vIBolig.L[t] = 0;
VARIABLE vHhInvestx[a_,t] "Husholdningernes direkte investeringer ekskl. bolig - imputeret.";
vHhInvestx.L[a_,t]$(atot[a_]) = 0;
VARIABLE vSelvstKapInd[a_,t] "Selvstændiges kapitalindkomst - imputeret.";
vSelvstKapInd.L[a_,t]$(atot[a_]) = 0;
VARIABLE vArvKorrektion[a_,t] "Arv som tildeles afdødes kohorte for at korregerer for selektionseffekt (formue og døds-sandsynlighed er mod-korreleret).";
vArvKorrektion.L[a_,t]$((tx0[t] and t.val > 2015) and (a0t100[a_] or aTot[a_])) = 0;
$onlisting

  
# ------------------------------------------G_consumers_endo------------------------------------------
#  Initialize G_consumers_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rDisk[a,t] "De rationelle forbrugeres aldersafhængige diskonterings-rate.";
rDisk.L[a,t]$(t.val > 2015) = 0;
VARIABLE rKLeje2Bolig[t] "Forholdet mellem qKbolig og qKlejebolig.";
rKLeje2Bolig.L[t] = 0;
VARIABLE rvCLejeBolig[a_,t] "Andel af samlet lejeboligmasse i basisåret.";
rvCLejeBolig.L[a_,t]$(aTot[a_] and t.val > 2015) = 0;
VARIABLE fHh[a,t] "Husholdningens størrelse (1 + antal børn pr. voksen med alderen a) som forbrug korrigeres med.";
fHh.L[a,t]$(t.val > 2015) = 0;
VARIABLE uBolig[a,t] "Nytteparameter som styrer de fremadskuende forbrugernes bolig-efterspørgsel.";
uBolig.L[a,t]$(t.val > 2015) = 0;
VARIABLE uBoligHtM[a,t] "Nytteparameter som styrer hand-to-mouth forbrugernes bolig-efterspørgsel.";
uBoligHtM.L[a,t]$(t.val > 2015) = 0;
VARIABLE fBoligUdgift[a,t] "Hjælpevariabel til beregning af udgifter til ejerbolig.";
fBoligUdgift.L[a,t]$(a.val >= 18 and t.val > 2015) = 0;
VARIABLE mUBolig[a,t] "Marginal nytte af boligkapital.";
mUBolig.L[a,t]$(a18t100[a] and t.val > 2015) = 0;
VARIABLE dqIBoligInstOmk[t] "Installationsomkostninger for boligkapital i nybyggeri differentieret mht. investeringer.";
dqIBoligInstOmk.L[t] = 0;
VARIABLE mUC[a,t] "Marginal utility of consumption.";
mUC.L[a,t]$(t.val > 2015) = 0;
VARIABLE EmUC[a,t] "Expected marginal utility of consumption.";
EmUC.L[a,t]$(t.val > 2015) = 0;
VARIABLE uC[c_,t] "CES skalaparametre i det private forbrugs-nest.";
uC.L[c_,t] = 0;
VARIABLE fMigration[a_,t] "Korrektion for migrationer (= 1/(1+migrationsrate) eftersom formue deles med ind- og udvandrere).";
fMigration.L[a_,t]$(t.val > 2015 or (atot[a_] and t.val > 1991)) = 0;
VARIABLE uBoernFraHh[a,t] "Parameter for børns formue relativ til en gennemsnitsperson. Bestemmer vBoernFraHh.";
uBoernFraHh.L[a,t]$(a0t17[a] and t.val > 2015) = 0;
VARIABLE dArv[a_,t] "Arvefunktion differentieret med hensyn til bolig.";
dArv.L[a_,t]$(t.val > 2015) = 0;
VARIABLE dFormue[a_,t] "Formue-nytte differentieret med hensyn til bolig.";
dFormue.L[a_,t]$(t.val > 2015) = 0;
VARIABLE jvHhx[a_,t] "Fejl-led.";
jvHhx.L[a_,t]$(aTot[a_] and t.val > 2015) = 0;
$onlisting
  
# ------------------------------------------G_consumers_endo------------------------------------------
#  Initialize G_consumers_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting # Restrict endo group to tx0[t]

  
# -----------------------------------G_consumers_exogenous_forecast-----------------------------------
#  Initialize G_consumers_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE nArvinger[a,t] "Sum af antal arvinger sammenvejet efter rArv.";
nArvinger.L[a,t] = 0;
VARIABLE rBoern[a,t] "Andel af det samlede antal under 18-årige som en voksen med alderen a har ansvar for.";
rBoern.L[a,t] = 0;
VARIABLE rOverlev[a_,t] "Overlevelsesrate.";
rOverlev.L[a_,t] = 0;
VARIABLE ErOverlev[a,t] "Forventet overlevelsesrate - afviger fra den faktiske overlevelsesrate for 100 årige.";
ErOverlev.L[a,t] = 0;
VARIABLE rBoligPrem[t] "Risikopræmie for boliger.";
rBoligPrem.L[t] = 0;
VARIABLE jfEpC[t] "J-led.";
jfEpC.L[t] = 0;
$onlisting
  
# -------------------------------------G_consumers_ARIMA_forecast-------------------------------------
#  Initialize G_consumers_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE uC0[c_,t] "Justeringsled til CES-skalaparameter i private forbrugs-nests.";
uC0.L[c_,t] = 0;
VARIABLE fuCnest[cNest,t] "Total faktor CES-skalaparametre i privat forbrugs-nests.";
fuCnest.L[cNest,t] = 0;
VARIABLE rBilAfskr[t] "Afskrivningsrate for køretøjer i husholdningerne.";
rBilAfskr.L[t] = 0;
VARIABLE rHhInvestx[t] "Husholdningernes direkte investeringer ekskl. bolig ift. direkte og indirekte beholdning af indl. aktier - imputeret.";
rHhInvestx.L[t] = 0;
$onlisting
  
# ------------------------------------------G_consumers_other-----------------------------------------
#  Initialize G_consumers_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rDisk_t[t] "Tids-afhængigt led i rDisk.";
rDisk_t.L[t] = 0;
VARIABLE rDisk_a[a,t] "Alders-specifikt led i rDisk.";
rDisk_a.L[a,t] = 0;
VARIABLE uBolig_a[a,t] "Alders-specifikt led i uBolig.";
uBolig_a.L[a,t] = 0;
VARIABLE uBolig_t[t] "Tids-afhængigt led i uBolig.";
uBolig_t.L[t] = 0;
VARIABLE uBoligHtM_a[a,t] "Alders-specifikt led i uBoligHtM.";
uBoligHtM_a.L[a,t] = 0;
VARIABLE uBoligHtM_t[t] "Tids-afhængigt led i uBoligHtM.";
uBoligHtM_t.L[t] = 0;
VARIABLE uBoligHtM_match "led i uBoligHtM.";
uBoligHtM_match.L = 0;
VARIABLE uBoernFraHh_t[t] "Tids-afhængigt led i uBoernFraHh.";
uBoernFraHh_t.L[t] = 0;
VARIABLE uBoernFraHh_a[a,t] "Alders-specifikt led i uBoernFraHh.";
uBoernFraHh_a.L[a,t] = 0;
VARIABLE eHh "Invers af intertemporal substitutionselasticitet.";
eHh.L = 0;
VARIABLE rRef "Grad af reference forbrug.";
rRef.L = 0;
VARIABLE rRef_2016 "Grad af reference forbrug i 2016 (midlertidig løsning)";
rRef_2016.L = 0;
VARIABLE rRefHtM "Grad af reference forbrug hos HtM forbrugere.";
rRefHtM.L = 0;
VARIABLE rRefBolig "Grad af reference forbrug for boliger.";
rRefBolig.L = 0;
VARIABLE rHtM "Andel af Hand-to-Mouth forbrugere.";
rHtM.L = 0;
VARIABLE eBolig "Substitutionselasticitet mellem boligkapital og land.";
eBolig.L = 0;
VARIABLE uIBoligInstOmk "Parameter for installationsomkostninger for boligkapital i nybyggeri.";
uIBoligInstOmk.L = 0;
VARIABLE fIBoligInstOmk[t] "Vækstfaktor i boliginvesteringer som giver nul installationsomkostningerne.";
fIBoligInstOmk.L[t] = 0;
VARIABLE fBoligGevinst "Faktor som boliggevinster skaleres med.";
fBoligGevinst.L = 0;
VARIABLE EpLandInfl[t] "Forventning til landprisinflation i baseline - bibeholdes af ikke fremadskuende agenter.";
EpLandInfl.L[t] = 0;
VARIABLE EpBoligInfl[t] "Forventning til boligprisinflation i baseline - bibeholdes af ikke fremadskuende agenter.";
EpBoligInfl.L[t] = 0;
VARIABLE eC[c_] "Substitutionselasticitet i privat forbrugs-nests.";
eC.L[c_] = 0;
VARIABLE uLand[t] "Skalaparameter i CES efterspørgsel efter land.";
uLand.L[t] = 0;
VARIABLE uIBolig[t] "Skalaparameter i CES efterspørgsel efter boligkapital.";
uIBolig.L[t] = 0;
VARIABLE rArv[a,t] "Andel af den samlede arv som tilfalder hver arving med alderen a.";
rArv.L[a,t] = 0;
VARIABLE rArv_a[a,aa] "Andel af arven fra aldersgruppe a der tilfalder hver arving med alderen aa i basisåret.";
rArv_a.L[a,aa] = 0;
VARIABLE uFormue[a,t] "Nytte af formue parameter 0.";
uFormue.L[a,t] = 0;
VARIABLE cFormue[a,t] "Nytte af formue parameter 1.";
cFormue.L[a,t] = 0;
VARIABLE rMaxRealkred[t] "Andel af bolig som anses for likvid ift. nytte af likvid formue.";
rMaxRealkred.L[t] = 0;
VARIABLE uArv[a,t] "Arve-nytteparameter 0.";
uArv.L[a,t] = 0;
VARIABLE cArv[a,t] "Arve-nytteparameter 1.";
cArv.L[a,t] = 0;
VARIABLE tArv[t] "Arveafgift (implicit, gennemsnit)";
tArv.L[t] = 0;
VARIABLE rSelvstKapInd[t] "Selvstændiges kapitalindkomst ift. direkte og indirekte beholdning af indl. aktier - imputeret.";
rSelvstKapInd.L[t] = 0;
VARIABLE eNytte "Substitutionselasticitet mellem bolig- og andet forbrug.";
eNytte.L = 0;
VARIABLE rArvKorrektion[a] "Gennemsnitlig formue personer, som dør, relativt til en gennemsnitsperson i samme alder.";
rArvKorrektion.L[a] = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\government.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Government aggregation module
# - revenues and expenses are in GovRevenues and GovExpenses respectively
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# -----------------------------------------G_government_prices----------------------------------------
#  Initialize G_government_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ---------------------------------------G_government_quantities--------------------------------------
#  Initialize G_government_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

  
# --------------------------------------G_government_values_endo--------------------------------------
#  Initialize G_government_values_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vPrimSaldo[t] "Den offentlige sektors primære saldo, Kilde: ADAM[Tfn_o]-ADAM[Tion2]";
vPrimSaldo.L[t] = 0;
VARIABLE vSaldo[t] "Den offentlige sektors faktiske saldo, Kilde: ADAM[Tfn_o]";
vSaldo.L[t] = 0;
VARIABLE vOff[portf_,t] "Det offentlige sektors finansielle portefølje.";
vOff.L[portf_,t]$(t.val > 1994 or (sameas['netfin', portf_] and tx0[t])) = 0;
VARIABLE vOffOmv[t] "Omvurderinger af offentlige aktiver og passiver, Kilde: ADAM[Wn_o]-ADAM[Wn_o][-1]-ADAM[Tfn_o]";
vOffOmv.L[t] = 0;
VARIABLE vOffNetRenter[t] "Den offentlige sektors nettoformueindkomst ekskl. jordrente og overskud af off. virksomhed, Kilde: ADAM[Tion2]";
vOffNetRenter.L[t] = 0;
VARIABLE vNROffNetRenter[t] "Den offentlige sektors nettoformueindkomst inkl. jordrente og overskud af off. virksomhed, ADAM[Tin_o]";
vNROffNetRenter.L[t] = 0;
VARIABLE vOffRenteInd[t] "Den offentlige sektors indtægter af formueindkomst på aktivsiden, Kilde: ADAM[Tioii]";
vOffRenteInd.L[t]$(t.val > 1995) = 0;
VARIABLE vOffRenteUd[t] "Den offentlige sektors udgifter til formueindkomst på passivsiden, Kilde: ADAM[Ti_o_z]";
vOffRenteUd.L[t]$(t.val > 1995) = 0;
VARIABLE vOffNetFormue[t] "Den offentlige sektors nettoformue ekskl. offenlige fonde, Kilde: ADAM[Wosk]";
vOffNetFormue.L[t] = 0;
VARIABLE vOffPas[t] "Den offentlige sektors passiver ekskl. offentlige fonde, Kilde: ADAM[Wosku]";
vOffPas.L[t] = 0;
VARIABLE vOffAkt[t] "Den offentlige sektors aktiver ekskl. offentlige fonde, Kilde: ADAM[Woski]";
vOffAkt.L[t] = 0;
VARIABLE vOffY2C[t] "Offentlig sektors salg af varer og tjenester, Kilde: ADAM[Xo1_p]";
vOffY2C.L[t] = 0;
VARIABLE vSatsIndeks[t] "Satsregulering.";
vSatsIndeks.L[t] = 0;
$onlisting

  
# ------------------------------------------G_government_endo-----------------------------------------
#  Initialize G_government_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rOffRenteUd[t] "Gennemsnitlig rente på offentlig sektors passiver.";
rOffRenteUd.L[t]$(t.val > 1995) = 0;
VARIABLE nvBNP[t] "Tilbagediskonteret nutidsværdi af BNP.";
nvBNP.L[t] = 0;
VARIABLE nvPrimSaldo[t] "Tilbagediskonteret nutidsværdi af offentlige finanser.";
nvPrimSaldo.L[t] = 0;
VARIABLE nvtLukning[t] "Tilbagediskonteret nutidsværdi af beregningsteknisk skat til lukning af offentlig budgetrestriktion.";
nvtLukning.L[t] = 0;
VARIABLE nvGLukning[t] "Tilbagediskonteret nutidsværdi af beregningsteknisk stigning i offentligt forbrug til lukning af offentlig budgetrestriktion.";
nvGLukning.L[t] = 0;
VARIABLE rHBI[t] "Holdbarhedsindikator før korrektion ved beregningsmæssig skat til lukning, korrigeret HBI.";
rHBI.L[t] = 0;
VARIABLE fHBIDisk[t] "Diskonteringsfaktor i rHBI-beregning.";
fHBIDisk.L[t] = 0;
VARIABLE rOffRenteInd[t] "Gennemsnitlig rente på offentlig sektors aktiver.";
rOffRenteInd.L[t]$(t.val > 1995) = 0;
VARIABLE rOffAkt2BNP[t] "Offentlig sektors aktiver ift. BNP.";
rOffAkt2BNP.L[t] = 0;
$onlisting
 
  
# ------------------------------------------G_government_endo-----------------------------------------
#  Initialize G_government_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

  
# ---------------------------------------G_government_values_exo--------------------------------------
#  Initialize G_government_values_exo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vOffFonde[t] "Offentlige fondes finansielle nettoformue.";
vOffFonde.L[t] = 0;
VARIABLE vtPALGab[t] "Korrektion for PAL-skat til konjunkturgab.";
vtPALGab.L[t] = 0;
VARIABLE vtSelskabNordGab[t] "Korrektion for Nordsø-provenu til konjunkturgab.";
vtSelskabNordGab.L[t] = 0;
VARIABLE vtSelskabRestGab[t] "Korrektion for anden selskabsskat til konjunkturgab.";
vtSelskabRestGab.L[t] = 0;
VARIABLE vtRegGab[t] "Korrektion for registreringsafgift  til konjunkturgab.";
vtRegGab.L[t] = 0;
VARIABLE vOffNetRenterGab[t] "Korrektion for offentlige rentebetalinger til konjunkturgab.";
vOffNetRenterGab.L[t] = 0;
VARIABLE vtRestGab[t] "Korrektion for øvrige specielle budgetposter til konjunkturgab.";
vtRestGab.L[t] = 0;
VARIABLE vEngangsForholdGab[t] "Korrektion for engangsforhold til konjunkturgab.";
vEngangsForholdGab.L[t] = 0;
$onlisting
  
# -------------------------------------G_government_ARIMA_forecast------------------------------------
#  Initialize G_government_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rOffY2C[t] "Offentlig sektors salg af varer og tjenester ift. offentlige forbrug.";
rOffY2C.L[t] = 0;
$onlisting
  
# -----------------------------------------G_government_values----------------------------------------
#  Initialize G_government_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# -----------------------------------G_government_exogenous_forecast----------------------------------
#  Initialize G_government_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE jvOffOmv[t] "J-led.";
jvOffOmv.L[t] = 0;
VARIABLE jrOffRenteInd[t] "J-led.";
jrOffRenteInd.L[t] = 0;
VARIABLE jrOffRenteUd[t] "J-led.";
jrOffRenteUd.L[t] = 0;
VARIABLE jfSatsIndeks[t] "J-led.";
jfSatsIndeks.L[t] = 0;
$onlisting
  
# -----------------------------------------G_government_other-----------------------------------------
#  Initialize G_government_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rOffRealKred2Pas[t] "Andel af offentlig gæld som er realkreditlån.";
rOffRealKred2Pas.L[t] = 0;
VARIABLE rOffAkt[akt,t] "Andel af offentlige aktiver fordelt på aktiv type.";
rOffAkt.L[akt,t] = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------


# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\GovRevenues.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Government revenues
# - See also taxes module
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# ----------------------------------------G_GovRevenues_prices----------------------------------------
#  Initialize G_GovRevenues_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# --------------------------------------G_GovRevenues_quantities--------------------------------------
#  Initialize G_GovRevenues_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

  
# --------------------------------------G_GovRevenues_values_endo-------------------------------------
#  Initialize G_GovRevenues_values_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vOffPrimInd[t] "Primære offentlige indtægter, Kilde: ADAM[Tf_z_o]-ADAM[Tioii]";
vOffPrimInd.L[t] = 0;
VARIABLE vtY[t] "Produktionsskatter, brutto, Kilde: ADAM[Spz]-ADAM[Spzu]";
vtY.L[t] = 0;
VARIABLE vtYRest[t] "Øvrige produktionsskatter.";
vtYRest.L[t] = 0;
VARIABLE vtDirekte[t] "Direkte skatter, Kilde: ADAM[Sy_o]";
vtDirekte.L[t]$(t.val > 2015) = 0;
VARIABLE vtKilde[t] "Kildeskatter, Kilde: ADAM[Syk]";
vtKilde.L[t]$(t.val > 2015) = 0;
VARIABLE vtBund[a_,t] "Bundskatter, Kilde: ADAM[Ssysp1]";
vtBund.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vtTop[a_,t] "Topskatter, Kilde: ADAM[Ssysp2]+ADAM[Ssysp3]";
vtTop.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vtKommune[a_,t] "Kommunal indkomstskatter, Kilde: ADAM[Ssys1]+ADAM[Ssys2]";
vtKommune.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vtEjd[a_,t] "Ejendomsværdibeskatning, Kilde: ADAM[Spzej]";
vtEjd.L[a_,t]$((aVal[a_] >= 18 or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vtAktie[a_,t] "Aktieskat, Kilde: ADAM[Ssya]";
vtAktie.L[a_,t]$((a0t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vtVirksomhed[a_,t] "Virksomhedsskat, Kilde: ADAM[Ssyv]";
vtVirksomhed.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vtDoedsbo[a_,t] "Dødsboskat, Kilde: ADAM[Ssyd]";
vtDoedsbo.L[a_,t]$(t.val > 2015) = 0;
VARIABLE vtHhAM[a_,t] "Arbejdsmarkedsbidrag betalt af husholdningerne, Kilde: ADAM[Sya]";
vtHhAM.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vtPersRest[a_,t] "Andre personlige indkomstskatter, Kilde: ADAM[Syp]";
vtPersRest.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vtKapPens[a_,t] "Andre personlige indkomstskatter fratrukket andre personlige indkomstskatter resterende, ADAM[Syp]-ADAM[Sypr]";
vtKapPens.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vtKapPensArv[a_,t] "Kapitalskatter betalt i forbindelse med dødsfald og arv - ikke-datadækket hjælpevariabel.";
vtKapPensArv.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vtSelskab[s_,t] "Selskabsskat, Kilde: ADAM[Syc]";
vtSelskab.L[s_,t] = 0;
VARIABLE vtSelskabRest[s_,t] "Selskabsskat øvrige selskaber, Kilde: ADAM[Syc]-ADAM[Syc_e]";
vtSelskabRest.L[s_,t] = 0;
VARIABLE vtSelskabNord[t] "Selskabsskat fra Nordsøen, Kilde: ADAM[Syc_e]";
vtSelskabNord.L[t] = 0;
VARIABLE vtPAL[t] "PAL skat, Kilde: ADAM[Sywp]";
vtPAL.L[t] = 0;
VARIABLE vtMedie[t] "Medielicens, Kilde: ADAM[Sym]";
vtMedie.L[t]$(t.val > 2015) = 0;
VARIABLE vtHhVaegt[a_,t] "Vægtafgifter fra husholdningerne, Kilde: ADAM[Syv]";
vtHhVaegt.L[a_,t]$((a18t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vtAfgEU[t] "Produktafgifter til EU, Kilde: ADAM[Sppteu]";
vtAfgEU.L[t] = 0;
VARIABLE vtLukning[a_,t] "Beregningsteknisk skat til lukning af offentlig budgetrestriktion på lang sigt (HBI=0).";
vtLukning.L[a_,t]$(a0t100[a_] and t.val > 2015) = 0;
VARIABLE vtIndirekte[t] "Indirekte skatter, Kilde: ADAM[Spt_o]";
vtIndirekte.L[t] = 0;
VARIABLE vtEU[t] "Indirekte skatter til EU, Kilde: ADAM[Spteu]";
vtEU.L[t] = 0;
VARIABLE vBidrag[a_,t] "Bidrag til sociale ordninger, Kilde: ADAM[Tp_h_o]";
vBidrag.L[a_,t]$((a15t100[a_] and t.val > 2015) or aTot[a_]) = 0;
VARIABLE vBidragAK[t] "A-kassebidrag, Kilde: ADAM[Tpaf]";
vBidragAK.L[t]$(t.val > 2015) = 0;
VARIABLE vBidragEL[t] "Efterlønsbidrag, Kilde: ADAM[Tpef]";
vBidragEL.L[t]$(t.val > 2015) = 0;
VARIABLE vBidragFri[t] "Øvrige frivillige bidrag, Kilde: ADAM[Tpr]";
vBidragFri.L[t]$(t.val > 2015) = 0;
VARIABLE vBidragObl[t] "Obligatoriske bidrag, Kilde: ADAM[Stp_o]";
vBidragObl.L[t]$(t.val > 2015) = 0;
VARIABLE vBidragOblTjm[t] "Obligatoriske sociale bidrag vedr. tjenestemænd, Kilde: ADAM[Stpt]";
vBidragOblTjm.L[t]$(t.val > 2015) = 0;
VARIABLE vBidragATP[t] "Sociale bidrag til ATP, særlig ATP ordning og lønmodtagernes garantifond, Kilde: ADAM[Saqw]";
vBidragATP.L[t]$(t.val > 2015) = 0;
VARIABLE vBidragOblRest[t] "Øvrige obligatoriske bidrag til sociale ordninger, Kilde: ADAM[Sasr]";
vBidragOblRest.L[t]$(t.val > 2000) = 0;
VARIABLE vBidragTjmp[t] "Bidrag til Tjenestemandspension, Kilde: ADAM[Tpt_o]";
vBidragTjmp.L[t]$(t.val > 2015) = 0;
VARIABLE vOffIndRest[t] "Andre offentlige indtægter.";
vOffIndRest.L[t] = 0;
VARIABLE vtKirke[a_,t] "Kirkeskat, Kilde: ADAM[Trks]";
vtKirke.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vJordrente[t] "Off. indtægter af jord og rettigheder, Kilde: ADAM[Tirn_o]";
vJordrente.L[t] = 0;
VARIABLE vPersInd[a_,t] "Personlig indkomst, Kilde: ADAM[Ysp]";
vPersInd.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vPersIndRest[a_,t] "Aggregeret restled til personindkomst.";
vPersIndRest.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vSkatteplInd[a_,t] "Skattepligtig indkomst, Kilde: ADAM[Ys]";
vSkatteplInd.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vNetKapIndPos[a_,t] "Positiv nettokapitalindkomst.";
vNetKapIndPos.L[a_,t]$((a15t100[a_] and t.val > 2015 ) or aTot[a_]) = 0;
VARIABLE vNetKapInd[a_,t] "Nettokapitalindkomst, Kilde: ADAM[Tippps]";
vNetKapInd.L[a_,t]$((a15t100[a_] and t.val > 2015 ) or aTot[a_]) = 0;
VARIABLE vKapIndPos[a_,t] "Imputeret positiv kapitalindkomst.";
vKapIndPos.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vKapIndNeg[a_,t] "Imputeret negativ kapitalinkomst.";
vKapIndNeg.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vPersFradrag[a_,t] "Imputeret personfradrag.";
vPersFradrag.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vAKFradrag[a_,t] "Imputeret fradrag for A-kassebidrag.";
vAKFradrag.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vELFradrag[a_,t] "Imputeret fradrag for efterlønsbidrag.";
vELFradrag.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vRestFradrag[a_,t] "Imputerede øvrige ligningsmæssige fradrag (befordringsfradrag m.m.)";
vRestFradrag.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vBeskFradrag[a_,t] "Imputeret beskæftigelsesfradrag.";
vBeskFradrag.L[a_,t]$((a15t100[a_] or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vRealiseretAktieOmv[a_,t] "Skøn over realiserede gevinst ved salg af aktier.";
vRealiseretAktieOmv.L[a_,t]$((a0t100[a_] and t.val > 2015) or atot[a_]) = 0;
VARIABLE vUrealiseretAktieOmv[t] "Skøn over endnu ikke realiserede kapitalgevinster på aktier.";
vUrealiseretAktieOmv.L[t] = 0;
$onlisting

  
# --------------------------------------G_GovRevenues_values_exo--------------------------------------
#  Initialize G_GovRevenues_values_exo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE jvOffPrimInd[t] "J-led.";
jvOffPrimInd.L[t] = 0;
VARIABLE jvKapIndPos[a_,t] "J-led.";
jvKapIndPos.L[a_,t]$(a[a_]) = 0;
VARIABLE jvKapIndneg[a_,t] "J-led.";
jvKapIndneg.L[a_,t]$(a[a_]) = 0;
VARIABLE vtKildeRest[t] "Restled.";
vtKildeRest.L[t] = 0;
VARIABLE vtDirekteRest[t] "Restled.";
vtDirekteRest.L[t] = 0;
VARIABLE vOffFraUdl[t] "Residuale overførsler fra udlandet, Kilde: ADAM[Tr_e_o]+ADAM[tK_e_o]";
vOffFraUdl.L[t] = 0;
VARIABLE vOffFraHh[t] "Residuale overførsler fra den private sektor, Kilde: ADAM[Trr_hc_o]";
vOffFraHh.L[t] = 0;
VARIABLE vOffFraVirk[t] "Kapitaloverførsler fra den private sektor, Kilde: ADAM[tK_hc_o]";
vOffFraVirk.L[t] = 0;
VARIABLE vOffVirk[t] "Overskud af offentlig virksomhed, Kilde: ADAM[Tiuo_z_o]";
vOffVirk.L[t] = 0;
VARIABLE vPersIndRest_a[a_,t] "Aldersfordelt restled til personindkomst.";
vPersIndRest_a.L[a_,t] = 0;
VARIABLE vPersIndRest_t[t] "Restled til personindkomst, uafhængigt af alder.";
vPersIndRest_t.L[t] = 0;
$onlisting

  
# ----------------------------------------G_GovRevenues_values----------------------------------------
#  Initialize G_GovRevenues_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

  
# -----------------------------------------G_GovRevenues_endo-----------------------------------------
#  Initialize G_GovRevenues_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE ftBund[a_,t] "Korrektionsfaktor fra faktisk til implicit skattesats.";
ftBund.L[a_,t]$(aTot[a_] and t.val > 2015) = 0;
VARIABLE rTopSkatInd[a_,t] "Imputeret gennemsnitlig del af indkomsten over topskattegrænsen.";
rTopSkatInd.L[a_,t]$(aTot[a_] and t.val > 2015) = 0;
VARIABLE ftKommune[a_,t] "Korrektionsfaktor fra faktisk til implicit skattesats.";
ftKommune.L[a_,t]$(aTot[a_] and t.val > 2015) = 0;
VARIABLE fvtEjd[t] "parameter til at fange sammensætningseffekt.";
fvtEjd.L[t]$(t.val > 2015) = 0;
VARIABLE fvtAktie[t] "parameter til at fange sammensætningseffekt.";
fvtAktie.L[t]$(t.val > 2015) = 0;
VARIABLE fvtDoedsbo[t] "parameter til at fange sammensætningseffekt.";
fvtDoedsbo.L[t]$(t.val > 2015) = 0;
VARIABLE uvPersFradrag[a_,t] "J-led.";
uvPersFradrag.L[a_,t]$(aTot[a_]) = 0;
VARIABLE rOffFraUdl2BNP[t] "Overførsler fra udlandet til den offentlige sektor relativt til BNP.";
rOffFraUdl2BNP.L[t] = 0;
VARIABLE rOffFraHh2BNP[t] "Overførsler fra husholdningerne til den offentlige sektor relativt til BNP.";
rOffFraHh2BNP.L[t] = 0;
VARIABLE rOffFraVirk2BNP[t] "Overførsler fra virksomhederne til den offentlige sektor relativt til BNP.";
rOffFraVirk2BNP.L[t] = 0;
VARIABLE rOffVirk2BNP[t] "Overskud fra offentlige virksomheder relativt til BNP.";
rOffVirk2BNP.L[t] = 0;
VARIABLE rPersIndRest_a2PersInd[a,t] "Aldersfordelt restled i personlig indkomst ift. samlet personlig indkomst.";
rPersIndRest_a2PersInd.L[a,t] = 0;
VARIABLE rPersIndRest_t2PersInd[t] "Ikke-aldersfordelt restled i personlig indkomst ift. samlet personlig indkomst.";
rPersIndRest_t2PersInd.L[t] = 0;
VARIABLE rRestFradragSats2SatsIndeks[t] "Restfradragssats relativ til sats-reguleringen.";
rRestFradragSats2SatsIndeks.L[t] = 0;
VARIABLE mtVirk[s_,t] "Branchefordelt marginal indkomstskat hos virksomheder.";
mtVirk.L[s_,t]$(sp[s_]) = 0;
VARIABLE tLukning[t] "Beregningsteknisk skatteskat til lukning af offentlig budgetrestriktion på lang sigt (HBI=0).";
tLukning.L[t] = 0;
$onlisting
  
# -----------------------------------------G_GovRevenues_endo-----------------------------------------
#  Initialize G_GovRevenues_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting  # Restrict endo group to tx0[t]

  
# ---------------------------------------G_GovRevenues_taxrates---------------------------------------
#  Initialize G_GovRevenues_taxrates group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE tBund[t] "Bundskattesats, Kilde: ADAM[tsysp1]";
tBund.L[t] = 0;
VARIABLE tTop[t] "Topskattesats, Kilde: ADAM[tsysp2]+ADAM[tsysp3]";
tTop.L[t] = 0;
VARIABLE tKommune[t] "Gennemsnitlig kommunal skattesats, Kilde: ADAM[tsys1]+ADAM[tsys2]";
tKommune.L[t] = 0;
VARIABLE tAMbidrag[t] "Procentsats for arbejdsmarkedsbidrag.";
tAMbidrag.L[t] = 0;
VARIABLE tKapPens[t] "Skatterate hvormed kapitalpensioner bliver beskattet ved udbetaling, Kilde: ADAM[tsyp]";
tKapPens.L[t] = 0;
VARIABLE tSelskab[t] "Selskabsskattesats, Kilde: ADAM[tsyc]";
tSelskab.L[t] = 0;
VARIABLE tPAL[t] "PAL-skattesats, Kilde: ADAM[tsywp]";
tPAL.L[t] = 0;
VARIABLE tKirke[t] "Kirkeskattesats, Kilde: ADAM[tks]";
tKirke.L[t] = 0;
$onlisting

  
# ----------------------------------G_GovRevenues_exogenous_forecast----------------------------------
#  Initialize G_GovRevenues_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ------------------------------------G_GovRevenues_ARIMA_forecast------------------------------------
#  Initialize G_GovRevenues_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rvtAfgEU2vtAfg[t] "Andel af produktskatter som går til EU.";
rvtAfgEU2vtAfg.L[t] = 0;
$onlisting

  
# -----------------------------------------G_GovRevenues_other----------------------------------------
#  Initialize G_GovRevenues_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE tEjd[t] "Implicit skattesats.";
tEjd.L[t] = 0;
VARIABLE tPersRestxKapPens[t] "Implicit skattesats.";
tPersRestxKapPens.L[t] = 0;
VARIABLE tSelskabNord[t] "Implicit skattesats.";
tSelskabNord.L[t] = 0;
VARIABLE tVirksomhed[t] "Implicit skattesats.";
tVirksomhed.L[t] = 0;
VARIABLE tDoedsbo[t] "Implicit skattesats.";
tDoedsbo.L[t] = 0;
VARIABLE tAktie[t] "Implicit gennemsnitlig skat på aktieafkast.";
tAktie.L[t] = 0;
VARIABLE tJordRente[t] "Implicit skattesats.";
tJordRente.L[t] = 0;
VARIABLE tHhVaegt[t] "Implicit skattesats.";
tHhVaegt.L[t] = 0;
VARIABLE tbeskfradrag[t] "Imputeret gennemsnitlig beskæftigelsesfradrag ift. lønindkomst.";
tbeskfradrag.L[t] = 0;
VARIABLE ftAMBidrag[t] "Korrektionsfaktor fra faktisk til implicit skattesats.";
ftAMBidrag.L[t] = 0;
VARIABLE ftKapPens[t] "Korrektionsfaktor fra faktisk til implicit skattesats.";
ftKapPens.L[t] = 0;
VARIABLE ftSelskab[t] "Korrektionsfaktor fra faktisk til implicit skattesats.";
ftSelskab.L[t] = 0;
VARIABLE ftPAL[t] "Korrektionsfaktor fra faktisk til implicit skattesats.";
ftPAL.L[t] = 0;
VARIABLE ftKirke[t] "Korrektionsfaktor fra faktisk til implicit skattesats.";
ftKirke.L[t] = 0;
VARIABLE jfvSkatteplInd[t] "J-led.";
jfvSkatteplInd.L[t] = 0;
VARIABLE rNet2KapIndPos[a_,t] "Positiv nettokapitalindkomst ift. positiv kapitalindkomst.";
rNet2KapIndPos.L[a_,t] = 0;
VARIABLE rtKirke[t] "Andel af skatteydere som betaler kirkeskat, ADAM[bks]";
rtKirke.L[t] = 0;
VARIABLE vRestFradragSats[t] "Eksogen del af andre fradrag kalibreret til at ramme makrodata.";
vRestFradragSats.L[t] = 0;
VARIABLE rAKFradrag2Bidrag[t] "Fradrag for A-kassebidrag som andel af A-kassebidrag.";
rAKFradrag2Bidrag.L[t] = 0;
VARIABLE rELFradrag2Bidrag[t] "Fradrag for efterlønsbidrag som andel af efterlønsbidrag.";
rELFradrag2Bidrag.L[t] = 0;
VARIABLE uBidragOblTjm[t] "Sats-parameter for obligatoriske sociale bidrag til tjenestemandspension pr. person i arbejdsstyrken.";
uBidragOblTjm.L[t] = 0;
VARIABLE uBidragATP[t] "Sats-parameter for sociale bidrag til ATP, særlig ATP ordning og lønmodtagernes garantifond pr. person i arbejdsstyrken.";
uBidragATP.L[t] = 0;
VARIABLE uBidragOblRest[t] "Sats-parameter for øvrige bidrag til sociale ordninger pr. person i arbejdsstyrken.";
uBidragOblRest.L[t] = 0;
VARIABLE uBidragEL[t] "Sats-parameter for efterlønsbidrag pr. person i arbejdsstyrken.";
uBidragEL.L[t] = 0;
VARIABLE uBidragFri[t] "Sats-parameter for øvrige frivillige bidrag pr. person i arbejdsstyrken.";
uBidragFri.L[t] = 0;
VARIABLE uBidragAK[t] "Sats-parameter for A-kassebidrag.";
uBidragAK.L[t] = 0;
VARIABLE uBidragTjmp[t] "Sats-parameter for bidrag til Tjenestemandspension.";
uBidragTjmp.L[t] = 0;
VARIABLE utMedie[t] "Sats-parameter for medielicens pr. person.";
utMedie.L[t] = 0;
VARIABLE rRealiseringAktieOmv[t] "Andel af omvurderinger på aktier som realiseres hvert år.";
rRealiseringAktieOmv.L[t] = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\GovExpenses.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Government expenses
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# ----------------------------------------G_GovExpenses_prices----------------------------------------
#  Initialize G_GovExpenses_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE pGxAfskr[t] "Deflator for offentligt forbrug fratrukket offentlige afskrivninger, Kilde: ADAM[pCov]";
pGxAfskr.L[t]$(tx0[t]) = 0;
$onlisting
  
# --------------------------------------G_GovExpenses_quantities--------------------------------------
#  Initialize G_GovExpenses_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE qGxAfskr[t] "Offentligt forbrug fratrukket offentlige afskrivninger, Kilde: ADAM[fCov]";
qGxAfskr.L[t] = 0;
VARIABLE qG[g_,t] "Offentligt forbrug, Kilde: ADAM[fCo]";
qG.L[g_,t]$(g[g_]) = 0;
$onlisting

  
# --------------------------------------G_GovExpenses_values_endo-------------------------------------
#  Initialize G_GovExpenses_values_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vGxAfskr[t] "Offentligt forbrug fratrukket offentlige afskrivninger, Kilde: ADAM[Cov]";
vGxAfskr.L[t] = 0;
VARIABLE vOffPrimUd[t] "Primære offentlige udgifter, Kilde: ADAM[Tf_o_z]-ADAM[Ti_o_z]";
vOffPrimUd.L[t] = 0;
VARIABLE vOffInv[t] "Offentlige investeringer, Kilde: ADAM[Io1]";
vOffInv.L[t] = 0;
VARIABLE vOffSub[t] "Dansk finansieret subsidier ialt, Kilde: ADAM[Spu_o]";
vOffSub.L[t] = 0;
VARIABLE vSubY[t] "Produktionssubsidier, Kilde: ADAM[Spzu]";
vSubY.L[t]$(t.val > 2015) = 0;
VARIABLE vSubYRes[t] "Produktionssubsidier ekskl. løntilskud, Kilde: ADAM[Spzu]-ADAM[Spzul]";
vSubYRes.L[t]$(tx0[t]) = 0;
VARIABLE vOffUdRest[t] "Øvrige offentlige udgifter.";
vOffUdRest.L[t] = 0;
VARIABLE vOffTilHh[t] "Residuale overførsler fra offentlig sektor til husholdningerne, Kilde: ADAM[tK_o_h]+ADAM[Tr_o_h])";
vOffTilHh.L[t] = 0;
VARIABLE vOvf[ovf_,t] "Sociale overførsler fra offentlig forvaltning og service til husholdninger, Kilde: ADAM[Ty_o] for underkomponenter jf. o-set.";
vOvf.L[ovf_,t]$(t.val > 2015) = 0;
VARIABLE vHhOvf[a,t] "Indkomstoverførsler til indl. hush. pr. person (i befolkningen) fordelt på alder.";
vHhOvf.L[a,t]$(a15t100[a] and t.val > 2015) = 0;
VARIABLE vOvfSkatPl[a_,t] "Skattepligtige indkomstoverførsler pr. person (i befolkningen) fordelt på alder.";
vOvfSkatPl.L[a_,t]$(t.val > 2015) = 0;
VARIABLE vOvfSats[ovf,t] "Sociale overførsler fra offentlig forvaltning og service til husholdninger pr. person i basen (mio. kr.)";
vOvfSats.L[ovf,t]$(t.val > 2015) = 0;
VARIABLE vOvfUbeskat[a_,t] "Ubeskattede indkomstoverførsler pr. person (i befolkningen) fordelt på alder.";
vOvfUbeskat.L[a_,t]$((a0t100[a_] and t.val > 2015) or (sameas['tot',a_] and t.val > 2000)) = 0;
VARIABLE vGLukning[t] "Udgift til beregningsteknisk stigning i offentligt forbrug til lukning af offentlig budgetrestriktion.";
vGLukning.L[t] = 0;
$onlisting

  
# -----------------------------------------G_GovExpenses_endo-----------------------------------------
#  Initialize G_GovExpenses_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE uvGxAfskr[t] "Skala-parameter som bestemmer niveau for offentligt service før korrektion for demografisk træk og løn-niveau.";
uvGxAfskr.L[t] = 0;
VARIABLE nOvf[ovf,t] "Basen til sociale overførsler i antal 1000 personer fordelt på ordninger.";
nOvf.L[ovf,t] = 0;
VARIABLE fHhOvf[t] "Korrektionsfaktor som sikre afbalancering af overførsler-indkomster fordelt på henholdsvis alder og overførselstype.";
fHhOvf.L[t]$(t.val > 2015) = 0;
VARIABLE dnOvf2dBesk[ovf,t] "Beskæftigelsesnøgle fordelt på modtagere af overførsels-indkomster.";
dnOvf2dBesk.L[ovf,t] = 0;
VARIABLE dnOvf2dPop[ovf,t] "Befolkningssnøgle fordelt på modtagere af overførsels-indkomster.";
dnOvf2dPop.L[ovf,t]$(t.val > 1990) = 0;
VARIABLE dvOvf2dBesk[ovf_,t] "Beskæftigelsesnøgle fordelt på overførsels-indkomster.";
dvOvf2dBesk.L[ovf_,t]$(ovf[ovf_] or sameas['hh',ovf_]) = 0;
VARIABLE dvOvf2dPop[ovf_,t] "Befolkningssnøgle fordelt på overførsels-indkomster.";
dvOvf2dPop.L[ovf_,t]$(ovf[ovf_] or sameas['hh',ovf_]) = 0;
VARIABLE rOffLandKoeb2BNP[t] "Nettoopkob af jord og rettigheder relativt til BNP.";
rOffLandKoeb2BNP.L[t] = 0;
VARIABLE rOffTilUdl2BNP[t] "Offentlige overførsler til udlandet relativt til BNP.";
rOffTilUdl2BNP.L[t] = 0;
VARIABLE rOffTilVirk2BNP[t] "Offentlige overførsler til selskaber relativt til BNP.";
rOffTilVirk2BNP.L[t] = 0;
VARIABLE rOffTilHhKap2BNP[t] "Offentlige kapitaloverførsler til husholdninger relativt til BNP.";
rOffTilHhKap2BNP.L[t] = 0;
VARIABLE rOffTilHhOev2BNP[t] "Offentlige øvrige overførsler til husholdninger relativt til BNP.";
rOffTilHhOev2BNP.L[t] = 0;
VARIABLE rSubEU2BNP[t] "Subsidier finansieret af EU relativt til BNP.";
rSubEU2BNP.L[t] = 0;
$onlisting
  
# -----------------------------------------G_GovExpenses_endo-----------------------------------------
#  Initialize G_GovExpenses_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting # Restrict endo group to tx0[t]

  
# --------------------------------------G_GovExpenses_values_exo--------------------------------------
#  Initialize G_GovExpenses_values_exo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vHhOvfRest[a,t] "Residual som sikrer at samlede overførselsindkomster til en aldersgruppe passer til aldersprofil.";
vHhOvfRest.L[a,t] = 0;
VARIABLE vOffLandKoeb[t] "Den offentlige sektors nettoopkøb af jord og rettigheder, Kilde: ADAM[Izn_o]";
vOffLandKoeb.L[t] = 0;
VARIABLE vOffTilUdl[t] "Residuale overførsler fra offentlig sektor til udlandet, Kilde: ADAM[Tr_o_e]+ADAM[tK_o_e]";
vOffTilUdl.L[t] = 0;
VARIABLE vOffTilVirk[t] "Residuale overførsler fra offentlig sektor til indenlandske selskaber, Kilde: ADAM[tK_o_c]";
vOffTilVirk.L[t] = 0;
VARIABLE vOffTilHhKap[t] "Residuale kapitaloverførsler fra offentlig sektor til husholdningerne, Kilde: ADAM[tK_o_h])";
vOffTilHhKap.L[t] = 0;
VARIABLE vOffTilHhOev[t] "Residuale øvrige overførsler fra offentlig sektor til husholdningerne, Kilde: ADAM[Tr_o_h])";
vOffTilHhOev.L[t] = 0;
VARIABLE vSubEU[t] "Subsider finansieret af EU, Kilde: ADAM[Spueu]";
vSubEU.L[t] = 0;
$onlisting
  
# ----------------------------------------G_GovExpenses_values----------------------------------------
#  Initialize G_GovExpenses_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ------------------------------------G_GovExpenses_ARIMA_forecast------------------------------------
#  Initialize G_GovExpenses_ARIMA_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE uG[g_,t] "Skalaparameter i det offentlige forbrugsnest.";
uG.L[g_,t] = 0;
VARIABLE rvYsubRest2BVT[t] "Produktionssubsidier ekskl. løntilskud relativt til BVT.";
rvYsubRest2BVT.L[t] = 0;
$onlisting
  
# -----------------------------------------G_GovExpenses_other----------------------------------------
#  Initialize G_GovExpenses_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rGLukning[t] "Beregningsteknisk stigning i offentligt forbrug til lukning af offentlig budgetrestriktion.";
rGLukning.L[t] = 0;
$onlisting
  
# ----------------------------------G_GovExpenses_exogenous_forecast----------------------------------
#  Initialize G_GovExpenses_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE fDemoTraek[t] "Demografisk træk.";
fDemoTraek.L[t] = 0;
VARIABLE uHhOvfPop[a,t] "Aldersmæssig fordelingsnøgle knyttet til dvOvf2dPop.";
uHhOvfPop.L[a,t] = 0;
VARIABLE uOvfUbeskat[a,t] "Aldersmæssig fordelingsnøgle knyttet til vOvfUbeskat.";
uOvfUbeskat.L[a,t] = 0;
VARIABLE jvOvf[ovf,t] "J-led som fanger at nogle grupper har en overførsel, men ingen modtagere. Fordeles til husholdningerne gennem fHhOvf.";
jvOvf.L[ovf,t] = 0;
VARIABLE uvOvfSats[ovf,t] "Skalaparameter for overførselssatser.";
uvOvfSats.L[ovf,t]$(sameas['groen',ovf]) = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\aggregates.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Aggregates
# - This module calculates objects with ties to many other modules
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# -----------------------------------------G_aggregates_prices----------------------------------------
#  Initialize G_aggregates_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ---------------------------------------G_aggregates_quantities--------------------------------------
#  Initialize G_aggregates_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# -----------------------------------------G_aggregates_values----------------------------------------
#  Initialize G_aggregates_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vVirkBVT5aarSnit[t] "Centreret 5-års glidende gennemsnit af privat BVT.";
vVirkBVT5aarSnit.L[t] = 0;
VARIABLE vBVT2hL[t] "BVT pr. arbejdstime i værdi.";
vBVT2hL.L[t] = 0;
VARIABLE vBVT2hLsnit[t] "Glidende gennemsnit af BVT pr. arbejdstime i værdi.";
vBVT2hLsnit.L[t] = 0;
VARIABLE qBVT2hL[t] "BVT pr. arbejdstime i mængde.";
qBVT2hL.L[t] = 0;
VARIABLE qBVT2hLsnit[t] "Glidende gennemsnit af BVT pr. arbejdstime i mængde.";
qBVT2hLsnit.L[t] = 0;
VARIABLE vBFI[t] "Bruttonationalindkomst, Kilde: ADAM[Yi]";
vBFI.L[t] = 0;
VARIABLE vUdl[portf_,t] "Udlandets finansielle portefølje, Kilde: jf. portfolio set.";
vUdl.L[portf_,t]$(t.val > 1992) = 0;
VARIABLE vUdlRenter[t] "Udlandets nettoformueindkomst, Kilde: ADAM[Tin_e]";
vUdlRenter.L[t]$(t.val > 1992) = 0;
VARIABLE vUdlOmv[t] "Omvurderinger af udenlandsk nettoformue, Kilde: ADAM[Wn_e]-ADAM[Wn_e][-1]-ADAM[Tfn_e]";
vUdlOmv.L[t]$(t.val > 1992) = 0;
VARIABLE vUdlNFE[t] "Udlandets nettofordringserhvervelse, Kilde: ADAM[Tfn_e]";
vUdlNFE.L[t]$(t.val > 1992) = 0;
$onlisting
  
# ------------------------------------------G_aggregates_endo-----------------------------------------
#  Initialize G_aggregates_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rArbProd[t] "Timeproduktivitet.";
rArbProd.L[t] = 0;
VARIABLE rBVTGab[t] "Outputgab.";
rBVTGab.L[t] = 0;
VARIABLE rBeskGab[t] "Strukturelt beskæftigelsesgab";
rBeskGab.L[t] = 0;
VARIABLE pCInflSnit[t] "Glidende gennemsnit af forbrugerprisstigninger ekskl. bolig.";
pCInflSnit.L[t] = 0;
$onlisting
  
# ------------------------------------------G_aggregates_endo-----------------------------------------
#  Initialize G_aggregates_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting # Restrict endo group to tx0[t]

  
# -----------------------------------G_aggregates_exogenous_forecast----------------------------------
#  Initialize G_aggregates_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE jvBFI[t] "J-led.";
jvBFI.L[t] = 0;
$onlisting
  
# -----------------------------------------G_aggregates_other-----------------------------------------
#  Initialize G_aggregates_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rUdlRealkred[t] "Andel af udlandets realkredit i forhold til husholdnings samlet realkredit.";
rUdlRealkred.L[t] = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\HHincome.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Household income and portfolio accounting
# - See consumers.gms for consumption decisions and budget constraint
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# ----------------------------------------G_HHincome_quantities---------------------------------------
#  Initialize G_HHincome_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
  
# ------------------------------------------G_HHincome_prices-----------------------------------------
#  Initialize G_HHincome_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE pBoligRigid[a,t] "Rigid boligpris til brug i rRealKred2Bolig.";
pBoligRigid.L[a,t]$(t.val > 2015) = 0;
$onlisting

  
# ------------------------------------------G_HHincome_values-----------------------------------------
#  Initialize G_HHincome_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vtHh[a_,t] "Skatter knyttet til husholdningerne i MAKRO.";
vtHh.L[a_,t]$(atot[a_]) = 0;
VARIABLE vDispInd[t] "Disponibel bruttoindkomst i husholdninger og organisationer, Kilde: ADAM[Yd_h]";
vDispInd.L[t]$(t.val > 1994) = 0;
VARIABLE vHhInd[a_,t] "Husholdningernes indkomst.";
vHhInd.L[a_,t]$((a0t100[a_] and t.val > 2015) or atot[a_]) = 0;
VARIABLE vHhxAfk[a_,t] "Imputeret afkast på husholdningernes formue ekskl. bolig og pension.";
vHhxAfk.L[a_,t]$((aVal[a_] > 0 and t.val > 2015) or (atot[a_] and t.val > 1994)) = 0;
VARIABLE vHhFinAkt[a_,t] "Finansielle aktiver ejer af husholdningerne ekskl. pension.";
vHhFinAkt.L[a_,t]$(t.val > 2015 or atot[a_]) = 0;
VARIABLE vHh[portf_,a_,t] "Husholdningernes finansielle portefølje, Kilde: jf. se for portefølje.";
vHh.L[portf_,a_,t]$((fin_akt[portf_] and t.val > 2015) or ((sameas[portf_, "BankGaeld"] and t.val > 2015 or (sameas[portf_,'BankGaeld'] and atot[a_]) ) or ((sameas[portf_, "pens"] and (a15t100[a_] or aTot[a_]) and t.val > 2015) or ((pens[portf_] and (a15t100[a_] or aTot[a_]) and t.val > 2015) or ((sameas[portf_, "RealKred"] and (a18t100[a_] or aTot[a_]) and t.val > 2015) or ((sameas[portf_, "NetFin"] and t.val > 2015) or (0))))))) = 0;
VARIABLE vHhRenter[portf_,t] "Husholdningernes formueindkomst, Kilde: ADAM[Tin_h]";
vHhRenter.L[portf_,t]$(t.val > 2015) = 0;
VARIABLE vHhOmv[portf_,t] "Omvurderinger på husholdningernes finansielle nettoformue, Kilde: ADAM[Wn_h]-ADAM[Wn_h][-1]-ADAM[Tfn_h]";
vHhOmv.L[portf_,t]$(t.val > 2015) = 0;
VARIABLE vHhPensAfk[portf_,a_,t] "Afkast fra pensionsformue EFTER SKAT.";
vHhPensAfk.L[portf_,a_,t]$((pens[portf_] or sameas['Pens',portf_]) and (aVal[a_] >= 15 or atot[a_]) and t.val > 2015) = 0;
VARIABLE vHhNFE[t] "Nettofordringserhvervelse for husholdningerne, Kilde: ADAM[Tfn_h]";
vHhNFE.L[t] = 0;
VARIABLE vPensIndb[portf_,a_,t] "Pensionsindbetalinger.";
vPensIndb.L[portf_,a_,t]$(pens_[portf_] and (a15t100[a_] or atot[a_]) and t.val > 2015) = 0;
VARIABLE vPensUdb[portf_,a_,t] "Pensionsudbetalinger.";
vPensUdb.L[portf_,a_,t]$(pens_[portf_] and (a15t100[a_] or atot[a_]) and t.val > 2015) = 0;
VARIABLE vPensArv[portf_,a_,t] "Pension udbetalt til arvinger i tilfælde af død.";
vPensArv.L[portf_,a_,t]$(pens_[portf_] and (aVal[a_] >= 15 or aTot[a_]) and t.val > 2015) = 0;
VARIABLE vNetIndPensUdb[t] "Nettopensionsudbetalinger til individuelle pensionsordninger.";
vNetIndPensUdb.L[t] = 0;
VARIABLE vNetKolPensUdb[t] "Nettopensionsudbetalinger til kollektive pensionsordninger.";
vNetKolPensUdb.L[t] = 0;
VARIABLE vKolPensRenter[t] "Afkast ekskl. omvurderinger fra kollektive pensionsordninger.";
vKolPensRenter.L[t] = 0;
VARIABLE vLejeAfEjerBolig[t] "Imputeret værdi af lejeværdi af egen bolig, Kilde: ADAM[byrhh] * ADAM[Yrh]";
vLejeAfEjerBolig.L[t] = 0;
VARIABLE vHhFraVirkKap[t] "Nettokapitaloverførsler fra virksomhederne til husholdningerne, Kilde: ADAM[Tknr_h]";
vHhFraVirkKap.L[t] = 0;
VARIABLE vHhFraVirkOev[t] "Øvrige nettooverførsler fra virksomhederne til husholdningerne, Kilde: ADAM[Trn_h] - ADAM[Tr_o_h] + ADAM[Trks] + ADAM[Trr_hc_o]";
vHhFraVirkOev.L[t] = 0;
VARIABLE vHhFraVirk[t] "Andre nettooverførsler fra virksomhederne til husholdningerne, Kilde: ADAM[Tknr_h] + ADAM[Trn_h] - ADAM[Tr_o_h] + ADAM[Trks] + ADAM[Trr_hc_o]";
vHhFraVirk.L[t] = 0;
VARIABLE vHhTilUdl[t] "Skat til udlandet og nettopensionsbetalinger til udlandet, Kilde: ADAM[Syn_e] + (ADAM[Typc_cf_e] - ADAM[Tpc_e_z]) - ADAM[Typc_e_h] - ADAM[Tpc_h_e]";
vHhTilUdl.L[t] = 0;
$onlisting
  
# -------------------------------------------G_HHincome_endo------------------------------------------
#  Initialize G_HHincome_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE mrHhxAfk[t] "Marginalt afkast efter skat på vHhx (husholdningernes formue ekskl. pension, bolig og realkreditgæld).";
mrHhxAfk.L[t]$(t.val > 2015) = 0;
VARIABLE mrRealKredAfk[t] "Husholdningernes effektive marginalrente efter skat på realkredit.";
mrRealKredAfk.L[t]$(t.val > 2015) = 0;
VARIABLE rRealKred2Bolig[a_,t] "Husholdningernes realkreditgæld relativt til deres boligformue.";
rRealKred2Bolig.L[a_,t]$((atot[a_] or a18t100[a_]) and t.val > 2015) = 0;
VARIABLE rPensIndb[pens,a_,t] "Pensionsindbetalingsrate.";
rPensIndb.L[pens,a_,t]$(atot[a_] and t.val > 2015) = 0;
VARIABLE rPensUdb[pens,a_,t] "Pensionsudbetalingsrate";
rPensUdb.L[pens,a_,t]$(atot[a_] and not (sameas['Alder',pens] and t.val < 2014) and t.val > 2015) = 0;
VARIABLE rBoligOmkRest[t] "Øvrige ejerboligomkostninger ift. boligens værdi.";
rBoligOmkRest.L[t] = 0;
VARIABLE rHhAfk[portf,t] "Husholdningens samlede afkast for aktive/passiv typen.";
rHhAfk.L[portf,t] = 0;
VARIABLE jvHhxAfk[a_,t] "J-led.";
jvHhxAfk.L[a_,t]$(aTot[a_] and t.val > 2015) = 0;
VARIABLE jvHhPensAfk[portf_,a_,t] "j-led.";
jvHhPensAfk.L[portf_,a_,t]$(((pens[portf_] and atot[a_]) or sameas['Pens',portf_]) and t.val > 2015) = 0;
VARIABLE jvHh[t] "Fejl-led som bør være nul fra inkonsistens mellem top-down og buttom-up formue.";
jvHh.L[t]$(t.val > 2015) = 0;
VARIABLE mtAktie[t] "Marginal skat på aktieafkast.";
mtAktie.L[t]$(t.val > 2015) = 0;
$onlisting
  
# -------------------------------------------G_HHincome_endo------------------------------------------
#  Initialize G_HHincome_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting # Restrict endo group to tx0[t]

  
# ------------------------------------G_HHincome_exogenous_forecast-----------------------------------
#  Initialize G_HHincome_exogenous_forecast group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE ErAktieAfk_static[t] "Husholdningernes forventede aktieafkast i historisk periode.";
ErAktieAfk_static.L[t] = 0;
VARIABLE rPensArv[pens,a_,t] "Andel af pensionsformue, som udbetales i tilfælde af død.";
rPensArv.L[pens,a_,t] = 0;
VARIABLE jvHhOmv[t] "J-led.";
jvHhOmv.L[t] = 0;
VARIABLE jvHhRenter[t] "J-led.";
jvHhRenter.L[t] = 0;
VARIABLE jvNetKolPensUdb[t] "J-led.";
jvNetKolPensUdb.L[t] = 0;
VARIABLE jvKolPensRenter[t] "J-led.";
jvKolPensRenter.L[t] = 0;
VARIABLE jmrHhAfk[t] "J-led.";
jmrHhAfk.L[t] = 0;
VARIABLE jrHhRente[portf,t] "J-led som dækker forskel mellem husholdningens rente og den gennemsnitlige rente på aktivet/passivet.";
jrHhRente.L[portf,t] = 0;
VARIABLE jrHhOmv[portf,t] "J-led som dækker forskel mellem husholdningens rente og den gennemsnitlige omvurdering på aktivet/passivet.";
jrHhOmv.L[portf,t] = 0;
$onlisting

  
# ------------------------------------------G_HHincome_other------------------------------------------
#  Initialize G_HHincome_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE rtTopRenter[t] "Andel af renteindtægter, der betales topskat af.";
rtTopRenter.L[t] = 0;
VARIABLE mrNet2KapIndPos[t] "Marginal stigning i positiv nettokapitalindkomst ved stigning i kapitalindkomst";
mrNet2KapIndPos.L[t] = 0;
VARIABLE rKolPens[pens,t] "Andel af pensionsformue i kollektive ordninger.";
rKolPens.L[pens,t] = 0;
VARIABLE rHhFraVirkKap[t] "Nettokapitaloverførsler fra virksomhederne til husholdningerne ift. BNP.";
rHhFraVirkKap.L[t] = 0;
VARIABLE rHhFraVirkOev[t] "Andre nettooverførsler fra virksomhederne til husholdningerne ift. BNP.";
rHhFraVirkOev.L[t] = 0;
VARIABLE rHhTilUdl[t] "Andre nettooverførsler fra virksomhederne til udlandet ift. BNP.";
rHhTilUdl.L[t] = 0;
VARIABLE cHh_a[akt,a,t] "Aldersafhængigt additivt led i husholdningens aktiv-beholdninger, vHh[akt].";
cHh_a.L[akt,a,t] = 0;
VARIABLE cHh_t[akt,t] "Tidsvariant additivt led i husholdningens aktiv-beholdninger, vHh[akt].";
cHh_t.L[akt,t] = 0;
VARIABLE dvHh2dvHhx[portf_,t] "Ændring i husholdningens aktiv-beholdninger, vHh[akt], for en ændring i formuen vHhx (eksklusiv pension og bolig).";
dvHh2dvHhx.L[portf_,t] = 0;
VARIABLE dvHh2dvBolig[portf_,t] "Ændring i husholdningens aktiv-beholdninger, vHh[akt], for en ændring i bolig-formuen vBolig.";
dvHh2dvBolig.L[portf_,t] = 0;
VARIABLE dvHh2dvPensIndb[portf_,t] "Ændring i husholdningens aktiv-beholdninger, vHh[akt], for en ændring i pensions-formuen vHh['Pens'].";
dvHh2dvPensIndb.L[portf_,t] = 0;
VARIABLE rBoligOmkRestRes[t] "Øvrige ejerboligomkostninger ift. boligens værdi - residual efter materialer, løn og ejendomsskat.";
rBoligOmkRestRes.L[t] = 0;
VARIABLE rRealKredTraeg "Træghed i pBoligRigid.";
rRealKredTraeg.L = 0;
VARIABLE rRealKred2Bolig_a[a,t] "Aldersspecifikt led i husholdningernes langsigtede realkreditgæld relativt til deres boligformue.";
rRealKred2Bolig_a.L[a,t] = 0;
VARIABLE rRealKred2Bolig_t[t] "Tidsvariant led i husholdningernes langsigtede realkreditgæld relativt til deres boligformue.";
rRealKred2Bolig_t.L[t] = 0;
VARIABLE cmtAktie[t] "Forskel mellem gennemsnitlig og marginal skat på aktieafkast.";
cmtAktie.L[t] = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------


# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;  
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\post_model.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Module for calculating pure output variables not present in the model
# - This model is run after the main model only
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "variables":
# ----------------------------------------------------------------------------------------------------

  
# --------------------------------------------G_post_prices-------------------------------------------
#  Initialize G_post_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE pLxUdn[sp,t] "User cost for effektiv arbejdskraft før kapacitetsudnyttelse i produktionsfunktion.";
pLxUdn.L[sp,t] = 0;
$onlisting
  
# ------------------------------------------G_post_quantities-----------------------------------------
#  Initialize G_post_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE qLxUdn[s,t] "Arbejdskraft i effektive enheder før kapacitetsudnyttelse.";
qLxUdn.L[s,t] = 0;
VARIABLE qCR_NR[a_,t] "Fremadskuende husholdningers forbrug som defineret i Nationalregnskabet - dvs. ud fra qC[cTot,t]";
qCR_NR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE qCHtM_NR[a_,t] "HtM-husholdningers forbrug som defineret i Nationalregnskabet - dvs. ud fra qC[cTot,t]";
qCHtM_NR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE qC_NR[a_,t] "Gns. husholdningers forbrug som defineret i Nationalregnskabet - dvs. ud fra qC[cTot,t]";
qC_NR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
$onlisting
  
# --------------------------------------------G_post_values-------------------------------------------
#  Initialize G_post_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE vhWVirk[t] "Gennemsnitlig timeløn i den private sektor ekskl. produktionsskatter.";
vhWVirk.L[t] = 0;
VARIABLE vOffLoen[t] "Gennemsnitlig timeløn i den offentlige sektor inkl. produktionsskatter.";
vOffLoen.L[t] = 0;
VARIABLE vHhFormueR[a_,t] "Samlet formue inklusiv bolig for fremadskuende husholdninger.";
vHhFormueR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhFormueHtM[a_,t] "Samlet formue inklusiv bolig for HtM-husholdninger.";
vHhFormueHtM.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhxR[a_,t] "Fremadskuende husholdningers formue ekskl. pension og realkreditgæld.";
vHhxR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhPensR[a_,t] "Pensionsformue for fremadskuende husholdninger EFTER SKAT.";
vHhPensR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhPensHtM[a_,t] "Pensionsformue for HtM-husholdninger EFTER SKAT.";
vHhPensHtM.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhPens[a_,t] "Pensionsformue EFTER SKAT";
vHhPens.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vFrivaerdiR[a_,t] "Friværdi (boligværdi fratrukket realkreditgæld) for fremadskuende husholdninger.";
vFrivaerdiR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vFrivaerdiHtM[a_,t] "Friværdi (boligværdi fratrukket realkreditgæld) for HtM-husholdninger.";
vFrivaerdiHtM.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhIndHtM[a_,t] "HtM-husholdningers indkomst.";
vHhIndHtM.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhIndR[a_,t] "Fremadskuende husholdningers indkomst.";
vHhIndR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhNetFinR[a_,t] "Finansiel nettoformue for fremadskuende husholdninger.";
vHhNetFinR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhNetFinHtM[a_,t] "Finansiel nettoformue for HtM-husholdninger.";
vHhNetFinHtM.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhNetFin[a_,t] "Finansiel nettoformue.";
vHhNetFin.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhIndMvHtM[a_,t] "HtM-husholdningers indkomst og lån i friværdi.";
vHhIndMvHtM.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhIndMvR[a_,t] "Fremadskuende husholdningers indkomst og lån i friværdi.";
vHhIndMvR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhIndMv[a_,t] "Husholdningers indkomst og lån i friværdi.";
vHhIndMv.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vCR_NR[a_,t] "Fremadskuende husholdningers forbrug som defineret i Nationalregnskabet - dvs. ud fra qC[cTot,t]";
vCR_NR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vCHtM_NR[a_,t] "HtM-husholdningers forbrug som defineret i Nationalregnskabet - dvs. ud fra qC[cTot,t]";
vCHtM_NR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vC_NR[a_,t] "Gns. husholdningers forbrug som defineret i Nationalregnskabet - dvs. ud fra qC[cTot,t]";
vC_NR.L[a_,t]$(a0t100[a_] or aTot[a_]) = 0;
VARIABLE vHhFormue[a_,t] "Samlet formue inklusiv bolig.";
vHhFormue.L[a_,t]$((a0t100[a_] and t.val > 2015) or aTot[a_]) = 0;
VARIABLE vBoligUdgiftR[a_,t] "Netto udgifter til køb/salg/forbrug af bolig for fremadskuende husholdninger.";
vBoligUdgiftR.L[a_,t]$(t.val > 2015) = 0;
VARIABLE vBoligR[a_,t] "Fremadskuende husholdningernes boligformue.";
vBoligR.L[a_,t]$((a18t100[a_] or atot[a_]) and t.val > 2015) = 0;
$onlisting
  
# ---------------------------------------------G_post_endo--------------------------------------------
#  Initialize G_post_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE nSoegBase[t] "Sum af jobsøgende og beskæftigede fra udenlandske og danske husholdninger.";
nSoegBase.L[t]$(t.val > 2015) = 0;
$onlisting
  
# ---------------------------------------------G_post_endo--------------------------------------------
#  Initialize G_post_endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting # Restrict endo group to tx0[t]

  
# --------------------------------------------G_post_other--------------------------------------------
#  Initialize G_post_other group
# ----------------------------------------------------------------------------------------------------
$offlisting
VARIABLE hVirk[t] "Gennemsnitlig arbejdstid i privat sektor.";
hVirk.L[t] = 0;
VARIABLE hOff[t] "Gennemsnitlig arbejdstid i offentlig sektor.";
hOff.L[t] = 0;
VARIABLE tPensKor[t] "Skattesats på ubeskattet pensionsformue til beregning af vHhFormue.";
tPensKor.L[t] = 0;
$onlisting

# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "variables" == "equations":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;  


# ----------------------------------------------------------------------------------------------------------------------
# Group compilation
# ----------------------------------------------------------------------------------------------------------------------
# Endogenous variables
# We combine the endo groups from each module into a group of all endogenous variables.

# -----------------------------------------------G_Endo-----------------------------------------------
#  Initialize G_Endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

# To make growth and inflation adjustment easier, we create groups for all prices, quantities, and values respectively.

# ----------------------------------------------G_prices----------------------------------------------
#  Initialize G_prices group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting


# --------------------------------------------G_quantities--------------------------------------------
#  Initialize G_quantities group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

# ----------------------------------------------G_values----------------------------------------------
#  Initialize G_values group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

# Group of variables that we force the solver to keep strictly positive.

# --------------------------------------------G_lower_bound-------------------------------------------
#  Initialize G_lower_bound group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

# --------------------------------------------G_zero_bound--------------------------------------------
#  Initialize G_zero_bound group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting

# -----------------------------------------G_lower_upper_bound----------------------------------------
#  Initialize G_lower_upper_bound group
# ----------------------------------------------------------------------------------------------------
$offlisting
# qKLB is not in group and could therefor not be removed
# qY is not in group and could therefor not be removed
# qR is not in group and could therefor not be removed
# qX is not in group and could therefor not be removed
# qBNP is not in group and could therefor not be removed
# qBVT is not in group and could therefor not be removed
# srMatch is not in group and could therefor not be removed
# fDeltag is not in group and could therefor not be removed
# sfDeltag is not in group and could therefor not be removed
# rOpslag2soeg is not in group and could therefor not be removed
# srOpslag2soeg is not in group and could therefor not be removed
# uh is not in group and could therefor not be removed
# hLHh is not in group and could therefor not be removed
# nSoegBaseHh is not in group and could therefor not be removed
# srJobFinding is not in group and could therefor not be removed
# snSoegBaseHh is not in group and could therefor not be removed
# qCRxRef is not in group and could therefor not be removed
# qNytte is not in group and could therefor not be removed
# qFormueBase is not in group and could therefor not be removed
# qArvBase is not in group and could therefor not be removed
# qCR is not in group and could therefor not be removed
# mUC is not in group and could therefor not be removed
# EmUC is not in group and could therefor not be removed
# qBolig is not in group and could therefor not be removed
# qBoligRxRef is not in group and could therefor not be removed
# qBoligR is not in group and could therefor not be removed
# mUBolig is not in group and could therefor not be removed
# uR is not in group and could therefor not be removed
# uKLB is not in group and could therefor not be removed
# uL is not in group and could therefor not be removed
# uK is not in group and could therefor not be removed
# uKL is not in group and could therefor not be removed
$onlisting

# ----------------------------------------G_unit_interval_bound---------------------------------------
#  Initialize G_unit_interval_bound group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting


# ======================================================================================================================
# Equations
# ======================================================================================================================
# Equations are defined in each module and organized in "blocks". They are imported here.
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\IO.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Input Output system
# - This module handles the details of the IO system.
#   The different demand components are satisfied with domestic production competing with imports.
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations  
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# ------------------------------------------------B_IO------------------------------------------------
#  Initialize B_IO equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_qY[s,t];
E_qY[s,t]$(tx0[t])..  qY[s,t]  =E=  sum(d$d1IOy[d,s,t], qIOy[d,s,t]);
EQUATION E_qM[s,t];
E_qM[s,t]$(tx0[t])..  qM[s,t]  =E=  sum(d$d1IOm[d,s,t], qIOm[d,s,t]);
EQUATION E_vY[s,t];
E_vY[s,t]$(tx0[t])..  vY[s,t]  =E=  pY[s,t] * qY[s,t];
EQUATION E_vM[s,t];
E_vM[s,t]$(tx0[t])..  vM[s,t]  =E=  pM[s,t] * qM[s,t];
EQUATION E_pBNP[t];
E_pBNP[t]$(tx0[t])..  pBNP[t] * qBNP[t]  =E=  vBNP[t];
EQUATION E_qBNP[t];
E_qBNP[t]$(tx0[t]).. 
      qBNP[t] * pBNP[t-1]/fp  =E=  ( pC[cTot,t-1]/fp * qC[cTot,t]
                                 + pG[gTot,t-1]/fp * qG[gTot,t] 
                                 + pI[iTot,t-1]/fp * qI[iTot,t]
                                 + pX[xTot,t-1]/fp * qX[xTot,t] 
                                 - pM[sTot,t-1]/fp * qM[sTot,t] );
EQUATION E_vBNP[t];
E_vBNP[t]$(tx0[t])..  vBNP[t]  =E=  vC[cTot,t] + vI[iTot,t] + vG[gTot,t] + vX[xTot,t] - vM[sTot,t];
EQUATION E_qBVT[s,t];
E_qBVT[s,t]$(tx0[t])..  qBVT[s,t] * pBVT[s,t-1]/fp  =E=  (pY[s,t-1]/fp * qY[s,t] - pR[s,t-1]/fp * qR[s,t]);
EQUATION E_pBVT[s,t];
E_pBVT[s,t]$(tx0[t])..  pBVT[s,t] * qBVT[s,t]  =E=  vBVT[s,t];
EQUATION E_vBVT[s,t];
E_vBVT[s,t]$(tx0[t])..  vBVT[s,t]  =E=  vY[s,t] - vR[s,t];
EQUATION E_qBVT_tot[t];
E_qBVT_tot[t]$(tx0[t])..  qBVT[sTot,t] * pBVT[sTot,t-1]/fp  =E=  (pY[sTot,t-1]/fp * qY[sTot,t] - pR[rTot,t-1]/fp * qR[rTot,t]);
EQUATION E_pBVT_tot[t];
E_pBVT_tot[t]$(tx0[t])..  pBVT[sTot,t] * qBVT[sTot,t]  =E=  vBVT[sTot,t];
EQUATION E_vBVT_tot[t];
E_vBVT_tot[t]$(tx0[t])..  vBVT[sTot,t]  =E=  vY[sTot,t] - vR[rTot,t];
EQUATION E_qBVT_spTot[t];
E_qBVT_spTot[t]$(tx0[t])..  qBVT[spTot,t] * pBVT[spTot,t-1]/fp  =E=  (pY[spTot,t-1]/fp * qY[spTot,t] - pR[spTot,t-1]/fp * qR[spTot,t]);
EQUATION E_pBVT_spTot[t];
E_pBVT_spTot[t]$(tx0[t])..  pBVT[spTot,t] * qBVT[spTot,t]  =E=  vBVT[spTot,t];
EQUATION E_vBVT_spTot[t];
E_vBVT_spTot[t]$(tx0[t])..  vBVT[spTot,t]  =E=  vY[spTot,t] - vR[spTot,t];
EQUATION E_qCDK[c,t];
E_qCDK[c,t]$(tx0[t]).. 
      qCDK[c,t] * pCDK[c,t-1]/fp  =E=  pC[c,t-1]/fp * qC[c,t] + pCTurist[c,t-1]/fp * qCTurist[c,t];
EQUATION E_pCDK[c,t];
E_pCDK[c,t]$(tx0[t])..  vC[c,t] + vCTurist[c,t]  =E=  pCDK[c,t] * qCDK[c,t];
EQUATION E_uIO0_c_pub[c,t];
E_uIO0_c_pub[c,t]$(tx0[t] and d1io[c,'off',t]).. 
      vIO[c,'off',t]  =E=  rvIO2vPublicSales[c,t] * vOffY2C[t];
EQUATION E_pI[i,t];
E_pI[i,t]$(tx0[t] and t.val)..  pI[i,t] * qI[i,t]  =E=  vI[i,t];
EQUATION E_qI[i,t];
E_qI[i,t]$(tx0[t] and t.val)..  pI[i,t-1]/fp * qI[i,t]  =E=  sum(s, pI_s[i,s,t-1]/fp * qI_s[i,s,t]);
EQUATION E_vI_iTot_s[s,t];
E_vI_iTot_s[s,t]$(tx0[t])..  vI_s[iTot,s,t]  =E=  sum(i, vI_s[i,s,t]);
EQUATION E_vI_s_iTot_spTot[t];
E_vI_s_iTot_spTot[t]$(tx0[t])..  vI_s[iTot,spTot,t]  =E=  sum(sp, vI_s[iTot,sp,t]) - vIBolig[t];
EQUATION E_pR[r,t];
E_pR[r,t]$(tx0[t])..  pR[r,t] * qR[r,t]  =E=  vR[r,t];
EQUATION E_pCTurist[c,t];
E_pCTurist[c,t]$(tx0[t] and d1cturist[c,t])..  pCTurist[c,t]  =E=  fpCTurist[c,t] * pC[c,t];
EQUATION E_vCTurist[c,t];
E_vCTurist[c,t]$(tx0[t] and d1cturist[c,t])..  vCTurist[c,t]  =E=  pCTurist[c,t] * qCTurist[c,t];
EQUATION E_pC[c,t];
E_pC[c,t]$(tx0[t])..  pC[c,t] * qC[c,t]  =E=  vC[c,t];
EQUATION E_vI_sp[i,sp,t];
E_vI_sp[i,sp,t]$(tx0[t] and d1i_s[i,sp,t])..  pI_s[i,sp,t] * qI_s[i,sp,t]  =E=  vI_s[i,sp,t];
EQUATION E_pI_s[i,s,t];
E_pI_s[i,s,t]$(tx0[t] and d1i_s[i,s,t] and not sameas[i,'il'])..  pI_s[i,s,t]  =E=  fpI_s[i,t] * upI_s[i,s,t] * pI[i,t];
EQUATION E_fpI[k,t];
E_fpI[k,t]$(tx0[t] and tforecast[t])..  vI[k,t]  =E=  sum(s, vI_s[k,s,t]);
EQUATION E_pI_s_inventory[s,t];
E_pI_s_inventory[s,t]$(tx0[t] and d1i_s['il',s,t])..  pI_s['iL',s,t]  =E=  pIO['iL',s,t];
EQUATION E_vR[r,t];
E_vR[r,t]$(tx0[t])..  vR[r,t]  =E=  sum(s, vIO[r,s,t]);
EQUATION E_vI[i,t];
E_vI[i,t]$(tx0[t])..  vI[i,t]  =E=  sum(s, vIO[i,s,t]);
EQUATION E_vC[c,t];
E_vC[c,t]$(tx0[t])..  vC[c,t] + vCTurist[c,t]  =E=  sum(s, vIO[c,s,t]);
EQUATION E_vG[g,t];
E_vG[g,t]$(tx0[t])..  vG[g,t]  =E=  sum(s, vIO[g,s,t]);
EQUATION E_vX[x,t];
E_vX[x,t]$(tx0[t] and not sameas[x,'xtur'])..  vX[x,t]  =E=  sum(s, vIO[x,s,t]);
EQUATION E_vX_xTur[t];
E_vX_xTur[t]$(tx0[t])..  vX['xTur',t]  =E=  sum(c, vCTurist[c,t]);
EQUATION E_qIO_r[r,s,t];
E_qIO_r[r,s,t]$(tx0[t] and d1io[r,s,t])..  qIO[r,s,t]  =E=  uIO[r,s,t] * qR[r,t];
EQUATION E_qIO_c[c,s,t];
E_qIO_c[c,s,t]$(tx0[t] and d1io[c,s,t])..  qIO[c,s,t]  =E=  uIO[c,s,t] * qCDK[c,t];
EQUATION E_qIO_i[k,s,t];
E_qIO_i[k,s,t]$(tx0[t] and d1io[k,s,t])..  qIO[k,s,t]  =E=  uIO[k,s,t] * qI[k,t];
EQUATION E_qIO_iL[s,t];
E_qIO_iL[s,t]$(tx0[t] and d1io['il',s,t])..  qIO['iL',s,t]  =E=  qI_s['iL',s,t];
EQUATION E_qIO_g[g,s,t];
E_qIO_g[g,s,t]$(tx0[t] and d1io[g,s,t]).. 
      qIO[g,s,t]  =E=  uIO[g,s,t] * (pG[g,t] / pIO[g,s,t])**eG[g] * qG[g,t];
EQUATION E_uIO0_i_pub[i,t];
E_uIO0_i_pub[i,t]$(tx0[t] and d1io[i,'off',t]).. 
      vIO[i,'off',t]  =E=  rvIO2vOffNyInv[i,t] * vOffDirInv[t];
EQUATION E_pIO[d,s,t];
E_pIO[d,s,t]$(tx0[t] and d1io[d,s,t] and dux[d])..  pIO[d,s,t] * qIO[d,s,t]  =E=  vIO[d,s,t];
EQUATION E_qIOy_x[x,s,t];
E_qIOy_x[x,s,t]$(tx0[t] and d1ioy[x,s,t]).. 
      qIOy[x,s,t]  =E=  uIOXy[x,s,t] * qXy[x,t];
EQUATION E_qIOm_x[x,s,t];
E_qIOm_x[x,s,t]$(tx0[t] and d1iom[x,s,t]).. 
      qIOm[x,s,t]  =E=  uIOXm[x,s,t] * qXm[x,t];
EQUATION E_pIOy[d,s,t];
E_pIOy[d,s,t]$(tx0[t] and d1ioy[d,s,t]).. 
      pIOy[d,s,t]  =E=  (1 + tIOy[d,s,t]) * (1 + rMerPris[d,t]) * pY[s,t];
EQUATION E_pIOm[d,s,t];
E_pIOm[d,s,t]$(tx0[t] and d1iom[d,s,t]).. 
      pIOm[d,s,t]  =E=  (1 + tIOm[d,s,t]) * pM[s,t];
EQUATION E_rpIOm2pIOy[dux,s,t];
E_rpIOm2pIOy[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and d1iom[dux,s,t] and d1ioy[dux,s,t-1] and d1iom[dux,s,t-1] and eio.l[dux,s] > 0).. 
      rpIOm2pIOy[dux,s,t]  =E=  rpIOm2pIOy[dux,s,t-1]**rpMTraeghed[dux,s] * (pIOm[dux,s,t]/pIOy[dux,s,t])**(1-rpMTraeghed[dux,s]);
EQUATION E_rpIOm2pIOy_ingen_historik[dux,s,t];
E_rpIOm2pIOy_ingen_historik[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and d1iom[dux,s,t] and not (d1ioy[dux,s,t-1] and d1iom[dux,s,t-1]) and eio.l[dux,s] > 0).. 
      rpIOm2pIOy[dux,s,t]  =E=  pIOm[dux,s,t]/pIOy[dux,s,t];
EQUATION E_fqMKortsigt[dux,s,t];
E_fqMKortsigt[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and d1iom[dux,s,t] and d1ioy[dux,s,t-1] and d1iom[dux,s,t-1] and eio.l[dux,s] > 0).. 
      fqMKortsigt[dux,s,t]  =E=  (qIO[dux,s,t] / (fv * qIO[dux,s,t-1]/fv))**rMKortsigt[dux,s]
                             * fqMKortsigt[dux,s,t-1]**(1-rMKortsigt[dux,s]);
EQUATION E_vIO[d,s,t];
E_vIO[d,s,t]$(tx0[t] and d1io[d,s,t])..  vIO[d,s,t]  =E=  vIOy[d,s,t] + vIOm[d,s,t];
EQUATION E_vIOy[d,s,t];
E_vIOy[d,s,t]$(tx0[t] and d1ioy[d,s,t])..  vIOy[d,s,t]  =E=  pIOy[d,s,t] * qIOy[d,s,t];
EQUATION E_vIOm[d,s,t];
E_vIOm[d,s,t]$(tx0[t] and d1iom[d,s,t])..  vIOm[d,s,t]  =E=  pIOm[d,s,t] * qIOm[d,s,t];
EQUATION E_qIOm[dux,s,t];
E_qIOm[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and d1iom[dux,s,t] and (d1ioy[dux,s,t-1] and d1iom[dux,s,t-1]) and eio.l[dux,s] > 0).. 
      qIOm[dux,s,t] * uIOy[dux,s,t] * (rpIOm2pIOy[dux,s,t])**(eIO[dux,s])  =E=  uIOm[dux,s,t] * qIOy[dux,s,t] * fqMKortsigt[dux,s,t];
EQUATION E_qIOm_NoLag[dux,s,t];
E_qIOm_NoLag[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and d1iom[dux,s,t]  and (not d1ioy[dux,s,t-1] or not d1iom[dux,s,t-1]) and eio.l[dux,s] > 0).. 
      qIOm[dux,s,t] * uIOy[dux,s,t] * (rpIOm2pIOy[dux,s,t])**(eIO[dux,s])  =E=  uIOm[dux,s,t] * qIOy[dux,s,t];
EQUATION E_qIOy[dux,s,t];
E_qIOy[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and d1iom[dux,s,t] and eio.l[dux,s] > 0).. 
       qIO[dux,s,t]  =E=  (
          (uIOy[dux,s,t])**(1/eIO[dux,s]) * (qIOy[dux,s,t])**((eIO[dux,s]-1)/eIO[dux,s])
        + (uIOm[dux,s,t])**(1/eIO[dux,s]) * (qIOm[dux,s,t])**((eIO[dux,s]-1)/eIO[dux,s])
      )**(eIO[dux,s]/(eIO[dux,s]-1));
EQUATION E_qIOy_il[dux,s,t];
E_qIOy_il[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and d1iom[dux,s,t] and eio.l[dux,s] = 0).. 
      qIOy[dux,s,t]  =E=  uIOy[dux,s,t] * qIO[dux,s,t]
    ;
EQUATION E_qIOy_NoM[dux,s,t];
E_qIOy_NoM[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and not d1iom[dux,s,t] and eio.l[dux,s] > 0).. 
      qIOy[dux,s,t]  =E=  uIOy[dux,s,t] * qIO[dux,s,t] * (pIOy[dux,s,t] / pIO[dux,s,t])**(-eIO[dux,s]);
EQUATION E_qIOy_e0[dux,s,t];
E_qIOy_e0[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and not d1iom[dux,s,t] and eio.l[dux,s] = 0).. 
      qIOy[dux,s,t]  =E=  uIOy[dux,s,t] * qIO[dux,s,t];
EQUATION E_qIOm_NoY[dux,s,t];
E_qIOm_NoY[dux,s,t]$(tx0[t] and d1iom[dux,s,t] and not d1ioy[dux,s,t] and eio.l[dux,s] > 0).. 
      qIOm[dux,s,t]  =E=  uIOm[dux,s,t] * qIO[dux,s,t] * (pIOm[dux,s,t] / pIO[dux,s,t])**(-eIO[dux,s]);
EQUATION E_qIOm_e0[dux,s,t];
E_qIOm_e0[dux,s,t]$(tx0[t] and d1iom[dux,s,t] and eio.l[dux,s] = 0).. 
      qIOm[dux,s,t]  =E=  uIOm[dux,s,t] * qIO[dux,s,t];
EQUATION E_uIO[dux,s,t];
E_uIO[dux,s,t]$(tx0[t] and d1io[dux,s,t] and not sameas[dux,'il']).. 
      uIO[dux,s,t]  =E=  fuIO[dux,t] * uIO0[dux,s,t] / sum(ss, uIO0[dux,ss,t]);
EQUATION E_uIOy[dux,s,t];
E_uIOy[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and d1iom[dux,s,t]).. 
      uIOy[dux,s,t]  =E=  fuIOym[dux,s,t] * (1-uIOm0[dux,s,t] * (1+juIOm[s,t]));
EQUATION E_uIOm[dux,s,t];
E_uIOm[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and d1iom[dux,s,t]).. 
      uIOm[dux,s,t]  =E=  fuIOym[dux,s,t] * uIOm0[dux,s,t] * (1+juIOm[s,t]);
EQUATION E_uIOy_NoM[dux,s,t];
E_uIOy_NoM[dux,s,t]$(tx0[t] and d1ioy[dux,s,t] and not d1iom[dux,s,t]).. 
      uIOy[dux,s,t]  =E=  fuIOym[dux,s,t];
EQUATION E_uIOm_NoY[dux,s,t];
E_uIOm_NoY[dux,s,t]$(tx0[t] and d1iom[dux,s,t] and not d1ioy[dux,s,t]).. 
      uIOm[dux,s,t]  =E=  fuIOym[dux,s,t];
EQUATION E_uIOXy[x,s,t];
E_uIOXy[x,s,t]$(tx0[t] and d1ioy[x,s,t]).. 
      uIOXy[x,s,t]  =E=  fuXy[x,t] * (1+juIOXy[s,t]) * uIOXy0[x,s,t] / sum(ss, (1+juIOXy[ss,t]) * uIOXy0[x,ss,t]);
EQUATION E_uIOXm[x,s,t];
E_uIOXm[x,s,t]$(tx0[t] and d1iom[x,s,t]).. 
      uIOXm[x,s,t]  =E=  fuXm[x,t] * uIOXm0[x,s,t] / sum(ss, uIOXm0[x,ss,t]);
EQUATION E_juIOm_udv[t];
E_juIOm_udv[t]$(tx0[t])..  juIOm['udv',t]  =E=  - juIOXy['udv',t];
EQUATION E_pY_tot[t];
E_pY_tot[t]$(tx0[t])..  pY[sTot,t] * qY[sTot,t]  =E=  vY[sTot,t];
EQUATION E_qY_tot[t];
E_qY_tot[t]$(tx0[t])..  qY[sTot,t] * pY[sTot,t-1]/fp  =E=  sum(s, pY[s,t-1]/fp * qY[s,t]);
EQUATION E_vY_tot[t];
E_vY_tot[t]$(tx0[t])..  vY[sTot,t]  =E=  sum(s, vY[s,t]);
EQUATION E_pY_spTot[t];
E_pY_spTot[t]$(tx0[t])..  pY[spTot,t] * qY[spTot,t]  =E=  vY[spTot,t];
EQUATION E_qY_spTot[t];
E_qY_spTot[t]$(tx0[t])..  qY[spTot,t] * pY[spTot,t-1]/fp  =E=  sum(sp, pY[sp,t-1]/fp * qY[sp,t]);
EQUATION E_vY_spTot[t];
E_vY_spTot[t]$(tx0[t])..  vY[spTot,t]  =E=  sum(sp, vY[sp,t]);
EQUATION E_vM_tot[t];
E_vM_tot[t]$(tx0[t])..  vM[sTot,t]  =E=  sum(s, vM[s,t]);
EQUATION E_pM_tot[t];
E_pM_tot[t]$(tx0[t])..  pM[sTot,t] * qM[sTot,t]  =E=  vM[sTot,t];
EQUATION E_qM_tot[t];
E_qM_tot[t]$(tx0[t])..  qM[sTot,t] * pM[sTot,t-1]/fp  =E=  sum(s, pM[s,t-1]/fp * qM[s,t]);
EQUATION E_pXUdl_tot[t];
E_pXUdl_tot[t]$(tx0[t])..  pXUdl[xTot,t]  =E=  sum(x, pXUdl[x,t] * qX[x,t]) / qX[xTot,t];
EQUATION E_pXy[x,t];
E_pXy[x,t]$(tx0[t] and d1xy[x,t])..  pXy[x,t]  =E=  sum(s$(d1IOy[x,s,t]), uIOXy[x,s,t] * pIOy[x,s,t]);
EQUATION E_pXm[x,t];
E_pXm[x,t]$(tx0[t] and d1xm[x,t])..  pXm[x,t]  =E=  sum(s$(d1IOm[x,s,t]), uIOXm[x,s,t] * pIOm[x,s,t]);
EQUATION E_pX[x,t];
E_pX[x,t]$(tx0[t])..  pX[x,t] * qX[x,t]  =E=  vX[x,t];
EQUATION E_vXy[x,t];
E_vXy[x,t]$(tx0[t] and d1xy[x,t])..  vXy[x,t]  =E=  sum(s$(d1IOy[x,s,t]), vIOy[x,s,t]);
EQUATION E_pX_tot[t];
E_pX_tot[t]$(tx0[t])..  pX[xTot,t] * qX[xTot,t]  =E=  vX[xTot,t];
EQUATION E_vX_tot[t];
E_vX_tot[t]$(tx0[t])..  vX[xTot,t]  =E=  sum(x, vX[x,t]) ;
EQUATION E_qX_tot[t];
E_qX_tot[t]$(tx0[t])..  qX[xTot,t] * pX[xTot,t-1]/fp  =E=  sum(x, pX[x,t-1]/fp * qX[x,t]);
EQUATION E_qI_iTot_sTot[t];
E_qI_iTot_sTot[t]$(tx0[t])..  qI[iTot,t] * pI[iTot,t-1]/fp  =E=  sum(i, pI[i,t-1]/fp * qI[i,t]);
EQUATION E_vI_iTot_sTot[t];
E_vI_iTot_sTot[t]$(tx0[t])..  vI[iTot,t]  =E=  sum(i, vI[i,t]);
EQUATION E_pI_iTot_sTot[t];
E_pI_iTot_sTot[t]$(tx0[t])..  pI[iTot,t] * qI[iTot,t]  =E=  vI[iTot,t];
EQUATION E_pR_tot[t];
E_pR_tot[t]$(tx0[t])..  pR[rTot,t] * qR[rTot,t]  =E=  vR[rTot,t];
EQUATION E_qR_tot[t];
E_qR_tot[t]$(tx0[t])..  qR[rTot,t] * pR[rTot,t-1]/fp  =E=  sum(r, pR[r,t-1]/fp * qR[r,t]);
EQUATION E_vR_tot[t];
E_vR_tot[t]$(tx0[t])..  vR[rTot,t]  =E=  sum(r, vR[r,t]);
EQUATION E_pR_spTot[t];
E_pR_spTot[t]$(tx0[t])..  pR[spTot,t] * qR[spTot,t]  =E=  vR[spTot,t];
EQUATION E_qR_spTot[t];
E_qR_spTot[t]$(tx0[t])..  qR[spTot,t] * pR[spTot,t-1]/fp  =E=  sum(sp, pR[sp,t-1]/fp * qR[sp,t]);
EQUATION E_vR_spTot[t];
E_vR_spTot[t]$(tx0[t])..  vR[spTot,t]  =E=  sum(sp, vR[sp,t]);
EQUATION E_pC_tot[t];
E_pC_tot[t]$(tx0[t])..  pC[cTot,t] * qC[cTot,t]  =E=  vC[cTot,t];
EQUATION E_qC_tot[t];
E_qC_tot[t]$(tx0[t])..  qC[cTot,t] * pC[cTot,t-1]/fp  =E=  sum(c, pC[c,t-1]/fp * qC[c,t]);
EQUATION E_vC_tot[t];
E_vC_tot[t]$(tx0[t])..  vC[cTot,t]  =E=  sum(c, vC[c,t]);
EQUATION E_pG[g_,t];
E_pG[g_,t]$(tx0[t])..  pG[g_,t]  =E=  vG[g_,t] / qG[g_,t];
EQUATION E_vG_dgu[gnest,t];
E_vG_dgu[gnest,t]$(tx0[t]).. 
      vG[gNest,t]  =E=  sum(g_$(gNest2g_(gNest,g_)), vG[g_,t]);
EQUATION E_vIOy_sTot[d,t];
E_vIOy_sTot[d,t]$(tx0[t] and d1ioy[d,stot,t]).. 
      vIOy[d,sTot,t]  =E=  sum(s, vIOy[d,s,t]);
EQUATION E_vIOm_sTot[d,t];
E_vIOm_sTot[d,t]$(tx0[t] and d1iom[d,stot,t]).. 
      vIOm[d,sTot,t]  =E=  sum(s, vIOm[d,s,t]);

# ----------------------------------------------------------------------------------------------------
#  Define B_IO model
# ----------------------------------------------------------------------------------------------------
Model B_IO /
E_qY, E_qM, E_vY, E_vM, E_pBNP, E_qBNP, E_vBNP, E_qBVT, E_pBVT, E_vBVT, E_qBVT_tot, E_pBVT_tot, E_vBVT_tot, E_qBVT_spTot, E_pBVT_spTot, E_vBVT_spTot, E_qCDK, E_pCDK, E_uIO0_c_pub, E_pI, E_qI, E_vI_iTot_s, E_vI_s_iTot_spTot, E_pR, E_pCTurist, E_vCTurist, E_pC, E_vI_sp, E_pI_s, E_fpI, E_pI_s_inventory, E_vR, E_vI, E_vC, E_vG, E_vX, E_vX_xTur, E_qIO_r, E_qIO_c, E_qIO_i, E_qIO_iL, E_qIO_g, E_uIO0_i_pub, E_pIO, E_qIOy_x, E_qIOm_x, E_pIOy, E_pIOm, E_rpIOm2pIOy, E_rpIOm2pIOy_ingen_historik, E_fqMKortsigt, E_vIO, E_vIOy, E_vIOm, E_qIOm, E_qIOm_NoLag, E_qIOy, E_qIOy_il, E_qIOy_NoM, E_qIOy_e0, E_qIOm_NoY, E_qIOm_e0, E_uIO, E_uIOy, E_uIOm, E_uIOy_NoM, E_uIOm_NoY, E_uIOXy, E_uIOXm, E_juIOm_udv, E_pY_tot, E_qY_tot, E_vY_tot, E_pY_spTot, E_qY_spTot, E_vY_spTot, E_vM_tot, E_pM_tot, E_qM_tot, E_pXUdl_tot, E_pXy, E_pXm, E_pX, E_vXy, E_pX_tot, E_vX_tot, E_qX_tot, E_qI_iTot_sTot, E_vI_iTot_sTot, E_pI_iTot_sTot, E_pR_tot, E_qR_tot, E_vR_tot, E_pR_spTot, E_qR_spTot, E_vR_spTot, E_pC_tot, E_qC_tot, E_vC_tot, E_pG, E_vG_dgu, E_vIOy_sTot, E_vIOm_sTot
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\taxes.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Taxes
# - Tax rates and revenue
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# -----------------------------------------------B_taxes----------------------------------------------
#  Initialize B_taxes equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_tIOy[d,s,t];
E_tIOy[d,s,t]$(tx0[t] and d1ioy[d,s,t]).. 
      tIOy[d,s,t]  =E=  (1+tNetAfg_y[d,s,t]) * (1+tMoms_y[d,s,t]) - 1;
EQUATION E_tIOm[d,s,t];
E_tIOm[d,s,t]$(tx0[t] and d1iom[d,s,t]).. 
      tIOm[d,s,t]  =E=  (1+tTold[d,s,t]) * (1+tNetAfg_m[d,s,t]) * (1+tMoms_m[d,s,t]) - 1;
EQUATION E_tNetAfg_y[d,s,t];
E_tNetAfg_y[d,s,t]$(tx0[t] and d1ioy[d,s,t]).. 
      tNetAfg_y[d,s,t]  =E=  (1 + tAfg_y[d,s,t] - tYsub_y[d,s,t]) * (1 + tReg[d,t]) - 1;
EQUATION E_tNetAfg_m[d,s,t];
E_tNetAfg_m[d,s,t]$(tx0[t] and d1iom[d,s,t]).. 
      tNetAfg_m[d,s,t]  =E=  (1 + tAfg_m[d,s,t] - tYsub_m[d,s,t]) * (1 + tReg[d,t]) - 1;
EQUATION E_vtMoms[d,s,t];
E_vtMoms[d,s,t]$(tx0[t] and t.val > 2015).. 
      vtMoms[d,s,t]  =E=  tMoms_y[d,s,t] * vIOy[d,s,t] / (1+tMoms_y[d,s,t])
                      + tMoms_m[d,s,t] * vIOm[d,s,t] / (1+tMoms_m[d,s,t]);
EQUATION E_vtNetAfg[d,s,t];
E_vtNetAfg[d,s,t]$(tx0[t] and t.val > 2015).. 
      vtNetAfg[d,s,t]  =E=                     tNetAfg_y[d,s,t] * vIOy[d,s,t] / (1+tIOy[d,s,t])
                        + (1+tTold[d,s,t]) * tNetAfg_m[d,s,t] * vIOm[d,s,t] / (1+tIOm[d,s,t]);
EQUATION E_vtAfg[d,s,t];
E_vtAfg[d,s,t]$(tx0[t] and t.val > 2015).. 
      vtAfg[d,s,t]  =E=                     tAfg_y[d,s,t] * vIOy[d,s,t] / (1+tIOy[d,s,t])
                     + (1+tTold[d,s,t]) * tAfg_m[d,s,t] * vIOm[d,s,t] / (1+tIOm[d,s,t]);
EQUATION E_vtReg_i[t];
E_vtReg_i[t]$(tx0[t] and t.val > 2015)..  vtReg['iM',t]  =E=  tReg['iM',t] * vI['iM',t] / (1+tReg['iM',t]);
EQUATION E_vtReg_c[t];
E_vtReg_c[t]$(tx0[t] and t.val > 2015)..  vtReg['cBil',t]  =E=  tReg['cBil',t] * vC['cBil',t] / (1+tReg['cBil',t]);
EQUATION E_vtReg_g[t];
E_vtReg_g[t]$(tx0[t] and t.val > 2015)..  vtReg['g',t]  =E=  tReg['g',t] * vG['g',t] / (1+tReg['g',t]);
EQUATION E_vPunktSub[t];
E_vPunktSub[t]$(tx0[t] and t.val > 2015)..  vPunktSub[t]  =E=  vtReg[dTot,t] + vtAfg[dTot,sTot,t] - vtNetAfg[dTot,sTot,t];
EQUATION E_vtTold[d,s,t];
E_vtTold[d,s,t]$(tx0[t] and t.val > 2015)..  vtTold[d,s,t]  =E=  tTold[d,s,t] * vIOm[d,s,t] / (1+tIOm[d,s,t]);
EQUATION E_vtGrund[s,t];
E_vtGrund[s,t]$(tx0[t] and d1k['ib',s,t]).. 
      vtGrund[s,t]  =E=  tK['iB',s,t] * pI_s['iB',s,t] * qK['iB',s,t-1]/fq;
EQUATION E_vtVirkVaegt[s,t];
E_vtVirkVaegt[s,t]$(tx0[t] and d1k['im',s,t]).. 
      vtVirkVaegt[s,t]  =E=  tK['iM',s,t] * pI_s['iM',s,t] * qK['iM',s,t-1]/fq;
EQUATION E_vtVirkAM[s,t];
E_vtVirkAM[s,t]$(tx0[t])..  vtVirkAM[s,t]  =E=  tLoensum[s,t] * vLoensum[s,t];
EQUATION E_vtAUB[s,t];
E_vtAUB[s,t]$(tx0[t])..  vtAUB[s,t]  =E=  tVirkAM[s,t] * vLoensum[s,t];
EQUATION E_vtSubLoen[s,t];
E_vtSubLoen[s,t]$(tx0[t])..  vtSubLoen[s,t]  =E=  tLoenSub[s,t] * vLoensum[s,t];
EQUATION E_vtNetLoenAfg[s,t];
E_vtNetLoenAfg[s,t]$(tx0[t])..  vtNetLoenAfg[s,t]  =E=  vtVirkAM[s,t] + vtAUB[s,t] - vtSubLoen[s,t];
EQUATION E_tL[s,t];
E_tL[s,t]$(tx0[t])..  tL[s,t] * vLoensum[s,t]  =E=  vtNetLoenAfg[s,t];
EQUATION E_vtNetYAfgRest[s,t];
E_vtNetYAfgRest[s,t]$(tx0[t])..  vtNetYAfgRest[s,t]  =E=  tNetYRest[s,t] * vBVT[s,t] ;
EQUATION E_vtNetYAfg[s,t];
E_vtNetYAfg[s,t]$(tx0[t]).. 
      vtNetYAfg[s,t]  =E=  vtGrund[s,t] + vtVirkVaegt[s,t] + vtNetLoenAfg[s,t] + vtNetYAfgRest[s,t];
EQUATION E_vtMoms_sTot[d,t];
E_vtMoms_sTot[d,t]$(tx0[t] and t.val > 2015)..    vtMoms[d,sTot,t]    =E=  sum(s, vtMoms[d,s,t]);
EQUATION E_vtNetAfg_sTot[d,t];
E_vtNetAfg_sTot[d,t]$(tx0[t] and t.val > 2015)..  vtNetAfg[d,sTot,t]  =E=  sum(s, vtNetAfg[d,s,t]);
EQUATION E_vtAfg_sTot[d,t];
E_vtAfg_sTot[d,t]$(tx0[t] and t.val > 2015)..     vtAfg[d,sTot,t]     =E=  sum(s, vtAfg[d,s,t]);
EQUATION E_vtTold_sTot[d,t];
E_vtTold_sTot[d,t]$(tx0[t] and t.val > 2015)..    vtTold[d,sTot,t]    =E=  sum(s, vtTold[d,s,t]);
EQUATION E_vtGrund_tot[t];
E_vtGrund_tot[t]$(tx0[t])..        vtGrund[sTot,t]        =E=  sum(s, vtGrund[s,t]);
EQUATION E_vtVirkVaegt_tot[t];
E_vtVirkVaegt_tot[t]$(tx0[t])..    vtVirkVaegt[sTot,t]    =E=  sum(s, vtVirkVaegt[s,t]);
EQUATION E_vtVirkAM_tot[t];
E_vtVirkAM_tot[t]$(tx0[t])..       vtVirkAM[sTot,t]       =E=  sum(s, vtVirkAM[s,t]);
EQUATION E_vtAUB_tot[t];
E_vtAUB_tot[t]$(tx0[t])..          vtAUB[sTot,t]          =E=  sum(s, vtAUB[s,t]);
EQUATION E_vtSubLoen_tot[t];
E_vtSubLoen_tot[t]$(tx0[t])..      vtSubLoen[sTot,t]      =E=  sum(s, vtSubLoen[s,t]);
EQUATION E_vtNetLoenAfg_tot[t];
E_vtNetLoenAfg_tot[t]$(tx0[t])..   vtNetLoenAfg[sTot,t]   =E=  sum(s, vtNetLoenAfg[s,t]);
EQUATION E_vtNetYAfgRest_tot[t];
E_vtNetYAfgRest_tot[t]$(tx0[t])..  vtNetYAfgRest[sTot,t]  =E=  sum(s, vtNetYAfgRest[s,t]);
EQUATION E_vtNetYAfg_tot[t];
E_vtNetYAfg_tot[t]$(tx0[t])..      vtNetYAfg[sTot,t]      =E=  sum(s, vtNetYAfg[s,t]);
EQUATION E_vtMoms_cTot[t];
E_vtMoms_cTot[t]$(tx0[t] and t.val > 2015)..  vtMoms[cTot,sTot,t]  =E=  sum(c, vtMoms[c,sTot,t]);
EQUATION E_vtMoms_gTot[t];
E_vtMoms_gTot[t]$(tx0[t] and t.val > 2015)..  vtMoms[gTot,sTot,t]  =E=  sum(g, vtMoms[g,sTot,t]);
EQUATION E_vtMoms_xTot[t];
E_vtMoms_xTot[t]$(tx0[t] and t.val > 2015)..  vtMoms[xTot,sTot,t]  =E=  sum(x, vtMoms[x,sTot,t]);
EQUATION E_vtMoms_rTot[t];
E_vtMoms_rTot[t]$(tx0[t] and t.val > 2015)..  vtMoms[rTot,sTot,t]  =E=  sum(r, vtMoms[r,sTot,t]);
EQUATION E_vtMoms_iTot[t];
E_vtMoms_iTot[t]$(tx0[t] and t.val > 2015)..  vtMoms[iTot,sTot,t]  =E=  sum(i, vtMoms[i,sTot,t]);
EQUATION E_vtMoms_dTot[t];
E_vtMoms_dTot[t]$(tx0[t] and t.val > 2015)..  vtMoms[dTot,sTot,t]  =E=  vtMoms[cTot,sTot,t]
                                                                       + vtMoms[gTot,sTot,t]
                                                                       + vtMoms[xTot,sTot,t]
                                                                       + vtMoms[iTot,sTot,t]
                                                                       + vtMoms[rTot,sTot,t];
EQUATION E_vtNetAfg_cTot[t];
E_vtNetAfg_cTot[t]$(tx0[t] and t.val > 2015)..  vtNetAfg[cTot,sTot,t]  =E=  sum(c, vtNetAfg[c,sTot,t]);
EQUATION E_vtNetAfg_gTot[t];
E_vtNetAfg_gTot[t]$(tx0[t] and t.val > 2015)..  vtNetAfg[gTot,sTot,t]  =E=  sum(g, vtNetAfg[g,sTot,t]);
EQUATION E_vtNetAfg_xTot[t];
E_vtNetAfg_xTot[t]$(tx0[t] and t.val > 2015)..  vtNetAfg[xTot,sTot,t]  =E=  sum(x, vtNetAfg[x,sTot,t]);
EQUATION E_vtNetAfg_rTot[t];
E_vtNetAfg_rTot[t]$(tx0[t] and t.val > 2015)..  vtNetAfg[rTot,sTot,t]  =E=  sum(r, vtNetAfg[r,sTot,t]);
EQUATION E_vtNetAfg_iTot[t];
E_vtNetAfg_iTot[t]$(tx0[t] and t.val > 2015)..  vtNetAfg[iTot,sTot,t]  =E=  sum(i, vtNetAfg[i,sTot,t]);
EQUATION E_vtNetAfg_dTot[t];
E_vtNetAfg_dTot[t]$(tx0[t] and t.val > 2015)..  vtNetAfg[dTot,sTot,t]  =E=  vtNetAfg[cTot,sTot,t]
                                                                           + vtNetAfg[gTot,sTot,t]
                                                                           + vtNetAfg[xTot,sTot,t]
                                                                           + vtNetAfg[iTot,sTot,t]
                                                                           + vtNetAfg[rTot,sTot,t];
EQUATION E_vtAfg_cTot[t];
E_vtAfg_cTot[t]$(tx0[t] and t.val > 2015)..  vtAfg[cTot,sTot,t]  =E=  sum(c, vtAfg[c,sTot,t]);
EQUATION E_vtAfg_gTot[t];
E_vtAfg_gTot[t]$(tx0[t] and t.val > 2015)..  vtAfg[gTot,sTot,t]  =E=  sum(g, vtAfg[g,sTot,t]);
EQUATION E_vtAfg_xTot[t];
E_vtAfg_xTot[t]$(tx0[t] and t.val > 2015)..  vtAfg[xTot,sTot,t]  =E=  sum(x, vtAfg[x,sTot,t]);
EQUATION E_vtAfg_rTot[t];
E_vtAfg_rTot[t]$(tx0[t] and t.val > 2015)..  vtAfg[rTot,sTot,t]  =E=  sum(r, vtAfg[r,sTot,t]);
EQUATION E_vtAfg_iTot[t];
E_vtAfg_iTot[t]$(tx0[t] and t.val > 2015)..  vtAfg[iTot,sTot,t]  =E=  sum(i, vtAfg[i,sTot,t]);
EQUATION E_vtAfg_dTot[t];
E_vtAfg_dTot[t]$(tx0[t] and t.val > 2015)..  vtAfg[dTot,sTot,t]  =E=  vtAfg[cTot,sTot,t]
                                                                     + vtAfg[gTot,sTot,t]
                                                                     + vtAfg[xTot,sTot,t]
                                                                     + vtAfg[iTot,sTot,t]
                                                                     + vtAfg[rTot,sTot,t];
EQUATION E_vtReg_dTot[t];
E_vtReg_dTot[t]$(tx0[t] and t.val > 2015)..  vtReg[dTot,t]  =E=  vtReg['iM',t] + vtReg['cBil',t] + vtReg['g',t];
EQUATION E_vtTold_rTot[t];
E_vtTold_rTot[t]$(tx0[t] and t.val > 2015)..  vtTold[rTot,sTot,t]  =E=  sum(r, vtTold[r,sTot,t]);
EQUATION E_vtTold_iTot[t];
E_vtTold_iTot[t]$(tx0[t] and t.val > 2015)..  vtTold[iTot,sTot,t]  =E=  sum(i, vtTold[i,sTot,t]);
EQUATION E_vtTold_gTot[t];
E_vtTold_gTot[t]$(tx0[t] and t.val > 2015)..  vtTold[gTot,sTot,t]  =E=  sum(g, vtTold[g,sTot,t]);
EQUATION E_vtTold_cTot[t];
E_vtTold_cTot[t]$(tx0[t] and t.val > 2015)..  vtTold[cTot,sTot,t]  =E=  sum(c, vtTold[c,sTot,t]);
EQUATION E_vtTold_xtot[t];
E_vtTold_xtot[t]$(tx0[t] and t.val > 2015)..  vtTold[xTot,sTot,t]  =E=  sum(x, vtTold[x,sTot,t]);
EQUATION E_vtTold_dTot[t];
E_vtTold_dTot[t]$(tx0[t] and t.val > 2015)..  vtTold[dTot,sTot,t]  =E=  vtTold[cTot,sTot,t]
                                                                       + vtTold[gTot,sTot,t] 
                                                                       + vtTold[rTot,sTot,t] 
                                                                       + vtTold[iTot,sTot,t] 
                                                                       + vtTold[xTot,sTot,t];

# ----------------------------------------------------------------------------------------------------
#  Define B_taxes model
# ----------------------------------------------------------------------------------------------------
Model B_taxes /
E_tIOy, E_tIOm, E_tNetAfg_y, E_tNetAfg_m, E_vtMoms, E_vtNetAfg, E_vtAfg, E_vtReg_i, E_vtReg_c, E_vtReg_g, E_vPunktSub, E_vtTold, E_vtGrund, E_vtVirkVaegt, E_vtVirkAM, E_vtAUB, E_vtSubLoen, E_vtNetLoenAfg, E_tL, E_vtNetYAfgRest, E_vtNetYAfg, E_vtMoms_sTot, E_vtNetAfg_sTot, E_vtAfg_sTot, E_vtTold_sTot, E_vtGrund_tot, E_vtVirkVaegt_tot, E_vtVirkAM_tot, E_vtAUB_tot, E_vtSubLoen_tot, E_vtNetLoenAfg_tot, E_vtNetYAfgRest_tot, E_vtNetYAfg_tot, E_vtMoms_cTot, E_vtMoms_gTot, E_vtMoms_xTot, E_vtMoms_rTot, E_vtMoms_iTot, E_vtMoms_dTot, E_vtNetAfg_cTot, E_vtNetAfg_gTot, E_vtNetAfg_xTot, E_vtNetAfg_rTot, E_vtNetAfg_iTot, E_vtNetAfg_dTot, E_vtAfg_cTot, E_vtAfg_gTot, E_vtAfg_xTot, E_vtAfg_rTot, E_vtAfg_iTot, E_vtAfg_dTot, E_vtReg_dTot, E_vtTold_rTot, E_vtTold_iTot, E_vtTold_gTot, E_vtTold_cTot, E_vtTold_xtot, E_vtTold_dTot
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\exports.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Exports
# - Armington demand for exports of both domestically produced and imported goods
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# ----------------------------------------------B_exports---------------------------------------------
#  Initialize B_exports equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_qXy[x,t];
E_qXy[x,t]$(tx0[t] and d1xy[x,t]).. 
      qXy[x,t]  =E=  uXy[x,t] * qXTraek[x,t] * qXSkala[x,t] * (rpXy2pXUdl[x,t])**(-eXUdl[x]);
EQUATION E_qXm[x,t];
E_qXm[x,t]$(tx0[t] and d1xm[x,t]).. 
      qXm[x,t]  =E=  uXm[x,t] * qXMarked[x,t] * rpM2pXm[x,t]**eXUdl[x];
EQUATION E_qX_xTur[x,t];
E_qX_xTur[x,t]$(tx0[t] and sameas[x,'xtur']).. 
      qX[x,t]  =E=  uXTur[t] * qXTraek[x,t] * qXSkala[x,t] * (rpXy2pXUdl[x,t])**(-eXUdl[x]);
EQUATION E_qX[x,t];
E_qX[x,t]$(tx0[t] and d1x[x,t] and not sameas[x,'xtur'] and t.val > 2015).. 
      qX[x,t] * pX[x,t-1]/fp  =E=  qXy[x,t] * pXy[x,t-1]/fp + qXm[x,t] * pXm[x,t-1]/fp;
EQUATION E_rpXy2pXUdl[x,t];
E_rpXy2pXUdl[x,t]$(tx0e[t] and d1xy[x,t]).. 
      rpXy2pXUdl[x,t]  =E=  pXy[x,t] / pXUdl[x,t]
                        - upXyTraeghed * rpXy2pXUdl[x,t] * (rpXy2pXUdl[x,t] / rpXy2pXUdl[x,t-1] - cpXyTraeghed[x,t]) * rpXy2pXUdl[x,t] / rpXy2pXUdl[x,t-1]
                        + upXyTraeghed * rpXy2pXUdl[x,t+1] * (rpXy2pXUdl[x,t+1] / rpXy2pXUdl[x,t] - cpXyTraeghed[x,t+1]) * (rpXy2pXUdl[x,t+1] / rpXy2pXUdl[x,t])
                        * qXy[x,t+1]*fq / qXy[x,t] * pXUdl[x,t+1]*fp / pXUdl[x,t]
                        / (1 + rOmv['UdlAktier',t+1] + rRente['UdlAktier',t+1]);
EQUATION E_rpXy2pXUdl_tEnd[x,t];
E_rpXy2pXUdl_tEnd[x,t]$(tend[t] and d1xy[x,t]).. 
      rpXy2pXUdl[x,t]  =E=  pXy[x,t] / pXUdl[x,t];
EQUATION E_rpXy2pXUdl_xTur[x,t];
E_rpXy2pXUdl_xTur[x,t]$(tx0e[t] and sameas[x,'xtur']).. 
      rpXy2pXUdl[x,t]  =E=  pX[x,t] / pXUdl[x,t]
                        - upXyTraeghed * rpXy2pXUdl[x,t] * (rpXy2pXUdl[x,t] / rpXy2pXUdl[x,t-1] - cpXyTraeghed[x,t]) * rpXy2pXUdl[x,t] / rpXy2pXUdl[x,t-1]
                        + upXyTraeghed * rpXy2pXUdl[x,t+1] * (rpXy2pXUdl[x,t+1] / rpXy2pXUdl[x,t] - cpXyTraeghed[x,t+1]) * (rpXy2pXUdl[x,t+1] / rpXy2pXUdl[x,t])
                        * qX[x,t+1]*fq / qX[x,t] * pXUdl[x,t+1]*fp / pXUdl[x,t]
                        / (1 + rOmv['UdlAktier',t+1] + rRente['UdlAktier',t+1]);
EQUATION E_rpXy2pXUdl_xTur_tEnd[x,t];
E_rpXy2pXUdl_xTur_tEnd[x,t]$(tend[t] and sameas[x,'xtur']).. 
      rpXy2pXUdl[x,t]  =E=  pX[x,t] / pXUdl[x,t];
EQUATION E_rpM2pXm[x,t];
E_rpM2pXm[x,t]$(tx0[t] and d1xm[x,t]).. 
      rpM2pXm[x,t]  =E=  sum(s$(d1IOm[x,s,t]), uIOXm[x,s,t] * pM[s,t]) / pXm[x,t];
EQUATION E_qXTraek[x,t];
E_qXTraek[x,t]$(tx0[t]).. 
      qXTraek[x,t]  =E=  qXMarked[x,t]**(1-rXTraeghed) * (fq * qXTraek[x,t-1]/fq)**rXTraeghed;
EQUATION E_qXSkala[x,t];
E_qXSkala[x,t]$(tx0[t] and d1x[x,t]).. 
      qXSkala[x,t]  =E=  sqL[spTot,t]**(1-rXSkalaTraeghed) * (fq * qXSkala[x,t-1]/fq)**rXSkalaTraeghed;
EQUATION E_qCTurist[c,t];
E_qCTurist[c,t]$(tx0[t] and d1cturist[c,t]).. 
      qCTurist[c,t]  =E=  uCturisme[c,t] * qX['xTur',t];
EQUATION E_uCturisme[c,t];
E_uCturisme[c,t]$(tx0[t] and d1cturist[c,t]).. 
      uCturisme[c,t]  =E=  fuCturisme[t] * uCturisme0[c,t] / sum(cc, uCturisme0[cc,t]);

# ----------------------------------------------------------------------------------------------------
#  Define B_exports model
# ----------------------------------------------------------------------------------------------------
Model B_exports /
E_qXy, E_qXm, E_qX_xTur, E_qX, E_rpXy2pXUdl, E_rpXy2pXUdl_tEnd, E_rpXy2pXUdl_xTur, E_rpXy2pXUdl_xTur_tEnd, E_rpM2pXm, E_qXTraek, E_qXSkala, E_qCTurist, E_uCturisme
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\production_public.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Public sector production
# - Public sector demand for factors of production
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

	
# -----------------------------------------B_production_public----------------------------------------
#  Initialize B_production_public equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_rOffK2Y[k,t];
E_rOffK2Y[k,t]$(tx0[t] and d1k[k,'off',t]).. 
      pI_s[k,'off',t] * qK[k,'off',t-1]/fq  =E=  rOffK2Y[k,t] * (0.7 * vBVT['off',t] + 0.3 * vVirkBVT5aarSnit[t]);
EQUATION E_vI_off[i,t];
E_vI_off[i,t]$(tx0[t] and d1i_s[i,'off',t])..  vI_s[i,'off',t]  =E=  pI_s[i,'off',t] * qI_s[i,'off',t];
EQUATION E_qK_off[k,t];
E_qK_off[k,t]$(tx0[t] and d1k[k,'off',t]).. 
      qK[k,'off',t]  =E=  qI_s[k,'off',t] + (1 - rAfskr[k,'off',t]) * qK[k,'off',t-1]/fq;
EQUATION E_pOffAfskr[k,t];
E_pOffAfskr[k,t]$(tx0[t] and d1k[k,'off',t]).. 
      pOffAfskr[k,t]  =E=  (1+jrpOffAfskr[k,t]) * pI_s[k,'off',t];
EQUATION E_qOffAfskr[k,t];
E_qOffAfskr[k,t]$(tx0[t] and d1k[k,'off',t]).. 
      qOffAfskr[k,t]  =E=  (1+jrqOffAfskr[k,t]) * rAfskr[k,'off',t] * qK[k,'off',t-1]/fq;
EQUATION E_vOffAfskr[k,t];
E_vOffAfskr[k,t]$(tx0[t] and d1k[k,'off',t]).. 
      vOffAfskr[k,t]  =E=  pOffAfskr[k,t] * qOffAfskr[k,t];
EQUATION E_vOffAfskr_tot[t];
E_vOffAfskr_tot[t]$(tx0[t]).. 
      vOffAfskr[kTot,t]  =E=  sum(k, vOffAfskr[k,t]);
EQUATION E_qOffAfskr_tot[t];
E_qOffAfskr_tot[t]$(tx0[t]).. 
      qOffAfskr[kTot,t] * pOffAfskr[kTot,t-1]/fp  =E=  sum(k, pOffAfskr[k,t-1]/fp * qOffAfskr[k,t]);
EQUATION E_pOffAfskr_tot[t];
E_pOffAfskr_tot[t]$(tx0[t]).. 
      pOffAfskr[kTot,t] * qOffAfskr[kTot,t]  =E=  vOffAfskr[kTot,t];
EQUATION E_vOffLR[t];
E_vOffLR[t]$(tx0[t]).. 
      vOffLR[t]  =E=  qY['off',t] * pKLBR['off',t] - vOffAfskr[kTot,t];
EQUATION E_qR_off[t];
E_qR_off[t]$(tx0[t]).. 
      vOffLR[t]  =E=  qR['off',t] * pR['off',t] + fW['off',t] * rL2nL[t] * nL['off',t] * vhW[t];
EQUATION E_nL_off[t];
E_nL_off[t]$(tx0[t]).. 
      nL['off',t] * fW['off',t] * rL2nL[t]  =E=  (1-rOffLTraeghed) * srvOffL2LR[t] * vOffLR[t] / vhW[t]
                                             + rOffLTraeghed * nL['off',t-1] * fW['off',t-1] * rL2nL[t-1]
                                             + 0.5 * rOffLTraeghed * (nL['off',t-1] * fW['off',t-1] * rL2nL[t-1] - nL['off',t-2] * fW['off',t-2] * rL2nL[t-2]);
EQUATION E_pKLBR_off[t];
E_pKLBR_off[t]$(tx0[t]).. 
      pKLBR['off',t]  =E=  pKLBR['off',t-1]/fp
                       * (pOffAfskr[kTot,t] * qOffAfskr[kTot,t] + pR['off',t] * qR['off',t] + vLoensum['off',t])
                       / (pOffAfskr[kTot,t-1]/fp * qOffAfskr[kTot,t] + pR['off',t-1]/fp * qR['off',t]
                          + vhW[t-1]/fv / fProd['off',t-1] * fProd['off',t] * fW['off',t] * rL2nL[t] * nL['off',t]);
EQUATION E_vOffIndirInv[t];
E_vOffIndirInv[t]$(tx0[t])..  vOffIndirInv[t]  =E=  rvOffIndirInv2vBVT[t] * vBVT[sTot,t];
EQUATION E_vOffNyInv[t];
E_vOffNyInv[t]$(tx0[t] and t.val > 1990)..  rOffIB2NyInv[t] * vOffNyInv[t]  =E=  (vI_s['iB','off',t] - vOffIndirInv[t]);
EQUATION E_vOffDirInv[t];
E_vOffDirInv[t]$(tx0[t] and t.val > 1990)..  vOffDirInv[t]  =E=  vI_s['iM','off',t] + vI_s['iB','off',t] - vOffNyInv[t] - vOffIndirInv[t];
EQUATION E_rvOffDirInv2BNP[t];
E_rvOffDirInv2BNP[t]$(tx0[t])..  rvOffDirInv2BNP[t]  =E=  vOffDirInv[t] / vBNP[t];
EQUATION E_pOffNyInv[t];
E_pOffNyInv[t]$(tx0[t]).. 
      pOffNyInv[t]  =E=  (1+jrpOffNyInv[t]) * (pI_s['iB','off',t] * rOffIB2NyInv[t] + pI_s['iM','off',t] * (1-rOffIB2NyInv[t]));
EQUATION E_qOffNyInv[t];
E_qOffNyInv[t]$(tx0[t])..  vOffNyInv[t]  =E=  pOffNyInv[t] * qOffNyInv[t];

# ----------------------------------------------------------------------------------------------------
#  Define B_production_public model
# ----------------------------------------------------------------------------------------------------
Model B_production_public /
E_rOffK2Y, E_vI_off, E_qK_off, E_pOffAfskr, E_qOffAfskr, E_vOffAfskr, E_vOffAfskr_tot, E_qOffAfskr_tot, E_pOffAfskr_tot, E_vOffLR, E_qR_off, E_nL_off, E_pKLBR_off, E_vOffIndirInv, E_vOffNyInv, E_vOffDirInv, E_rvOffDirInv2BNP, E_pOffNyInv, E_qOffNyInv
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\production_private.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Private sector production
# - Private sector demand for factors of production
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

	
# ----------------------------------------B_production_private----------------------------------------
#  Initialize B_production_private equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_qKLBR[sp,t];
E_qKLBR[sp,t]$(tx0[t])..  qKLBR[sp,t]  =E=  qY[sp,t] + qKInstOmk[kTot,sp,t];
EQUATION E_pKLBR[sp,t];
E_pKLBR[sp,t]$(tx0[t])..  pKLBR[sp,t] * qKLBR[sp,t]  =E=  pR[sp,t] * qR[sp,t] + pKLB[sp,t] * qKLB[sp,t];
EQUATION E_qKLB[sp,t];
E_qKLB[sp,t]$(tx0[t]).. 
      qKLB[sp,t]  =E=  uKLB[sp,t] * qKLBR[sp,t] * (pKLBR[sp,t]/pKLB[sp,t])**eKLBR[sp];
EQUATION E_qR[sp,t];
E_qR[sp,t]$(tx0[t])..  qR[sp,t]  =E=  uR[sp,t] * qKLBR[sp,t] * (pKLBR[sp,t]/pR[sp,t])**eKLBR[sp];
EQUATION E_pKLB[sp,t];
E_pKLB[sp,t]$(tx0[t])..  pKLB[sp,t] * qKLB[sp,t]  =E=  pK['iB',sp,t] * qK['iB',sp,t-1]/fq + pKL[sp,t] * qKL[sp,t];
EQUATION E_qKL[sp,t];
E_qKL[sp,t]$(tx0[t]).. 
      qKL[sp,t]  =E=  uKL[sp,t] * qKLB[sp,t] * (pKLB[sp,t] / pKL[sp,t])**eKLB[sp];
EQUATION E_qK_ib[sp,t];
E_qK_ib[sp,t]$(tx0[t] and d1k['ib',sp,t]).. 
      qK['iB',sp,t-1]/fq  =E=  uK['iB',sp,t] * qKLB[sp,t] * (rKUdn['iB',sp,t] * pKLB[sp,t]/pK['iB',sp,t])**eKLB[sp] / rKUdn['iB',sp,t];
EQUATION E_pKL[sp,t];
E_pKL[sp,t]$(tx0[t])..  pKL[sp,t] * qKL[sp,t]  =E=  pL[sp,t] * qL[sp,t] + pK['iM',sp,t] * qK['iM',sp,t-1]/fq;
EQUATION E_qK_im[sp,t];
E_qK_im[sp,t]$(tx0[t] and d1k['im',sp,t]).. 
      qK['iM',sp,t-1]/fq  =E=  uK['iM',sp,t] * qKL[sp,t] * (rKUdn['iM',sp,t] * pKL[sp,t]/pK['iM',sp,t])**eKL[sp] / rKUdn['iM',sp,t];
EQUATION E_nL[sp,t];
E_nL[sp,t]$(tx0[t] and d1k['im',sp,t-1]).. 
      qL[sp,t] / (qK['iM',sp,t-1]/fq * rKUdn['iM',sp,t])
       =E= 
      uL[sp,t] / uK['iM',sp,t] * (pK['iM',sp,t]/rKUdn['iM',sp,t] / pL[sp,t])**eKL[sp];
EQUATION E_nL_xiM[sp,t];
E_nL_xiM[sp,t]$(tx0[t] and not d1k['im',sp,t-1]).. 
      qL[sp,t]  =E=  uL[sp,t] * qKL[sp,t];
EQUATION E_qL[s,t];
E_qL[s,t]$(tx0[t]).. 
      qL[s,t]  =E=  fProd[s,t] * qProd[t] * fW[s,t] 
                * rLUdn[s,t] 
                * rL2nL[t] 
                * (1-rOpslagOmk[s,t]) 
                * nL[s,t];
EQUATION E_qKInstOmk_kTot[sp,t];
E_qKInstOmk_kTot[sp,t]$(tx0[t] and d1k[ktot,sp,t])..  qKInstOmk[kTot,sp,t]  =E=  sum(k, qKInstOmk[k,sp,t]);
EQUATION E_qKInstOmk[k,sp,t];
E_qKInstOmk[k,sp,t]$(tx0[t] and d1k[k,sp,t]).. 
      qKInstOmk[k,sp,t]  =E=  uKInstOmk[k,sp]/2 * sqr(qI_s[k,sp,t] - qI_s[k,sp,t-1]/fq * fKInstOmk[k,sp,t]) / (qK[k,sp,t-1]/fq);
EQUATION E_dqKInstOmk2dqK[k,sp,t];
E_dqKInstOmk2dqK[k,sp,t]$(tx0[t] and d1k[k,sp,t]).. 
      dKInstOmk2dK[k,sp,t]  =E=  - uKInstOmk[k,sp]/2 * sqr((qI_s[k,sp,t+1]*fq - qI_s[k,sp,t] * fKInstOmk[k,sp,t+1]) / qK[k,sp,t]);
EQUATION E_dqKInstOmk2dqI_s[k,sp,t];
E_dqKInstOmk2dqI_s[k,sp,t]$(tx0[t] and d1k[k,sp,t]).. 
      dKInstOmk2dI[k,sp,t]  =E=  uKInstOmk[k,sp] * (qI_s[k,sp,t] - qI_s[k,sp,t-1]/fq * fKInstOmk[k,sp,t]) / (qK[k,sp,t-1]/fq);
EQUATION E_dqKInstOmkLead2dqI_s[k,sp,t];
E_dqKInstOmkLead2dqI_s[k,sp,t]$(tx0e[t] and d1k[k,sp,t]).. 
      dKInstOmkLead2dI[k,sp,t]  =E=  - fKInstOmk[k,sp,t+1] / qK[k,sp,t] * dKInstOmk2dI[k,sp,t+1];
EQUATION E_rKUdn[k,sp,t];
E_rKUdn[k,sp,t]$(tx0e[t] and d1k[k,sp,t-1] and not sameas[sp,'bol'] and not sameas[sp,'udv']).. 
      rKUdn[k,sp,t]  =E=  (pK[k,sp,t]/rKUdn[k,sp,t] / pK[k,sp,t+1]*rKUdn[k,sp,t+1])**eKUdn[k]
                      / (pK[k,sp,t-1]/rKUdn[k,sp,t-1] / pK[k,sp,t]*rKUdn[k,sp,t])**eKUdn[k]
                      * rKUdn[k,sp,t-1]**eKUdnPersistens[k]
                      * (1+jrKUdn[k,sp,t]);
EQUATION E_rKUdn_tEnd[k,sp,t];
E_rKUdn_tEnd[k,sp,t]$(tend[t] and d1k[k,sp,t-1] and not sameas[sp,'bol'] and not sameas[sp,'udv']).. 
      rKUdn[k,sp,t]  =E=  rKUdn[k,sp,t-1]**eKUdnPersistens[k]
                      * (1+jrKUdn[k,sp,t]);
EQUATION E_rKUdn_sTot[k,t];
E_rKUdn_sTot[k,t]$(tx0[t]).. 
      rKUdn[k,sTot,t] * sum(s, qK[k,s,t-1]/fq)  =E=  sum(s, rKUdn[k,s,t] * qK[k,s,t-1]/fq);
EQUATION E_rKUdnSpBy[t];
E_rKUdnSpBy[t]$(tx0[t]).. 
      rKUdnSpBy[t] * sum([k,spBy], qK[k,spBy,t-1]/fq)  =E=  sum([k,spBy], rKUdn[k,spBy,t] * qK[k,spBy,t-1]/fq);
EQUATION E_rLUdn[sp,t];
E_rLUdn[sp,t]$(tx0e[t]).. 
      rLUdn[sp,t]  =E=  (pL[sp,t] / pL[sp,t+1])**eLUdn
                    / (pL[sp,t-1] / pL[sp,t])**eLUdn
                    * rLUdn[sp,t-1]**eLUdnPersistens
                    * (1+jrLUdn[sp,t]);
EQUATION E_rLUdn_tEnd[sp,t];
E_rLUdn_tEnd[sp,t]$(tend[t]).. 
      rLUdn[sp,t]  =E=  rLUdn[sp,t-1]**eLUdnPersistens
                    * (1+jrLUdn[sp,t]);
EQUATION E_rLUdn_sTot[t];
E_rLUdn_sTot[t]$(tx0[t]).. 
      rLUdn[sTot,t] * nL[sTot,t]  =E=  sum(s, rLUdn[s,t] * nL[s,t]);
EQUATION E_pK[k,sp,t];
E_pK[k,sp,t]$((tx0e[t] or (sameas[sp,'bol'] and t0[t])) and d1k[k,sp,t]).. 
      pK[k,sp,t+1]*fp / (1+rVirkDisk[sp,t+1])  =E= 
      
        pTobinsQ[k,sp,t] / (1-mtVirk[sp,t+1])
      - (1 - rAfskr[k,sp,t+1]) * pTobinsQ[k,sp,t+1]*fp / (1+rVirkDisk[sp,t+1]) / (1-mtVirk[sp,t+1])
      
      + tK[k,sp,t+1] * pI_s[k,sp,t+1]*fp / (1+rVirkDisk[sp,t+1])
      
      - (rVirkDisk[sp,t+1] / (1-mtVirk[sp,t+1]) - rRente['Obl',t+1]) * rLaan2K[t] * pI_s[k,sp,t] / (1+rVirkDisk[sp,t+1])
      
      + pKLBR[sp,t+1]*fp * dKInstOmk2dK[k,sp,t] / (1+rVirkDisk[sp,t+1])

      + jpK[k,sp,t+1];
EQUATION E_qK_tEnd[k,sp,t];
E_qK_tEnd[k,sp,t]$(tend[t] and d1k[k,sp,t] and not sameas[sp,'bol']).. 
      qI_s[k,sp,t]  =E=  fq * qI_s[k,sp,t-1]/fq;
EQUATION E_pTobinsQ[k,sp,t];
E_pTobinsQ[k,sp,t]$(tx0e[t] and d1k[k,sp,t]).. 
      pTobinsQ[k,sp,t]  =E=  pI_s[k,sp,t] * (1-ErSkatAfskr[k,sp,t])
                         + pKLBR[sp,t] * (1-mtVirk[sp,t]) * dKInstOmk2dI[k,sp,t]
                         + 1/(1+rVirkDisk[sp,t+1]) * pKLBR[sp,t+1]*fp * (1-mtVirk[sp,t+1]) * dKInstOmkLead2dI[k,sp,t] * qK[k,sp,t];
EQUATION E_pTobinsQ_tEnd[k,sp,t];
E_pTobinsQ_tEnd[k,sp,t]$(tend[t] and d1k[k,sp,t]).. 
      pTobinsQ[k,sp,t]  =E=  pI_s[k,sp,t] - pI_s[k,sp,t] * ErSkatAfskr[k,sp,t]
                         + pKLBR[sp,t] * (1-mtVirk[sp,t]) * dKInstOmk2dI[k,sp,t];
EQUATION E_ErSkatAfskr[k,sp,t];
E_ErSkatAfskr[k,sp,t]$(tx0e[t] and d1k[k,sp,t]).. 
      ErSkatAfskr[k,sp,t]  =E=  ((1-rSkatAfskr[k,t+1]) * ErSkatAfskr[k,sp,t+1] + mtVirk[sp,t+1] * rSkatAfskr[k,t+1]) / (1+rVirkDisk[sp,t+1]);
EQUATION E_ErSkatAfskr_tEnd[k,sp,t];
E_ErSkatAfskr_tEnd[k,sp,t]$(tend[t] and d1k[k,sp,t]).. 
      ErSkatAfskr[k,sp,t]  =E=  mtVirk[sp,t] * rSkatAfskr[k,t] / (rVirkDisk[sp,t] + rSkatAfskr[k,t]);
EQUATION E_qI_sp[k,sp,t];
E_qI_sp[k,sp,t]$(tx0[t] and d1i_s[k,sp,t])..  qI_s[k,sp,t]  =E=  qK[k,sp,t] - (1 - rAfskr[k,sp,t]) * qK[k,sp,t-1]/fq;
EQUATION E_qI_s_iL_private[sp,t];
E_qI_s_iL_private[sp,t]$(tx0[t] and d1i_s['il',sp,t]).. 
      qI_s['iL',sp,t] * pI_s['iL',sp,t-1]/fp  =E=  (1+jfqI_s_iL[t]) * rIL2y[sp,t] * pY[sp,t-1]/fp * qY[sp,t];

# ----------------------------------------------------------------------------------------------------
#  Define B_production_private model
# ----------------------------------------------------------------------------------------------------
Model B_production_private /
E_qKLBR, E_pKLBR, E_qKLB, E_qR, E_pKLB, E_qKL, E_qK_ib, E_pKL, E_qK_im, E_nL, E_nL_xiM, E_qL, E_qKInstOmk_kTot, E_qKInstOmk, E_dqKInstOmk2dqK, E_dqKInstOmk2dqI_s, E_dqKInstOmkLead2dqI_s, E_rKUdn, E_rKUdn_tEnd, E_rKUdn_sTot, E_rKUdnSpBy, E_rLUdn, E_rLUdn_tEnd, E_rLUdn_sTot, E_pK, E_qK_tEnd, E_pTobinsQ, E_pTobinsQ_tEnd, E_ErSkatAfskr, E_ErSkatAfskr_tEnd, E_qI_sp, E_qI_s_iL_private
/;


	
# ----------------------------------------------------------------------------------------------------
#  Define B_production model
# ----------------------------------------------------------------------------------------------------
Model B_production /
E_qKLBR, E_pKLBR, E_qKLB, E_qR, E_pKLB, E_qKL, E_qK_ib, E_pKL, E_qK_im, E_nL, E_nL_xiM, E_qL, E_qKInstOmk_kTot, E_qKInstOmk, E_dqKInstOmk2dqK, E_dqKInstOmk2dqI_s, E_dqKInstOmkLead2dqI_s, E_rKUdn, E_rKUdn_tEnd, E_rKUdn_sTot, E_rKUdnSpBy, E_rLUdn, E_rLUdn_tEnd, E_rLUdn_sTot, E_pK, E_qK_tEnd, E_pTobinsQ, E_pTobinsQ_tEnd, E_ErSkatAfskr, E_ErSkatAfskr_tEnd, E_qI_sp, E_qI_s_iL_private
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\finance.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Finance
# - Firm financing and valuation
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# ----------------------------------------------B_finance---------------------------------------------
#  Initialize B_finance equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_rAfkastKrav[sp,t];
E_rAfkastKrav[sp,t]$(tx0[t]).. 
      rAfkastKrav[sp,t]  =E=  rRente['Obl',t] + rIndlAktiePrem[sp,t];
EQUATION E_rAfkastKrav_sTot[t];
E_rAfkastKrav_sTot[t]$(tx1[t]).. 
      rAfkastKrav[sTot,t]  =E=  rRente['Obl',t] + rIndlAktiePrem[sTot,t];
EQUATION E_rVirkDisk[sp,t];
E_rVirkDisk[sp,t]$(tx0[t]).. 
      rVirkDisk[sp,t]  =E=  rRente['Obl',t] + rVirkDiskPrem[sp,t] + rFinAccelPrem[sp,t];
EQUATION E_rFinAccelPrem[sp,t];
E_rFinAccelPrem[sp,t]$(tx0e[t]).. 
      rFinAccelPrem[sp,t]  =E=  (1 + rRente['Obl',t] + rIndlAktiePrem[sp,t]) * (
                              (1 - rFinAccel[sp] * tanh(uFinAccel[sp,t] * vFCFxRef[sp,t-1]))
                            / (1 - rFinAccel[sp] * tanh(uFinAccel[sp,t] * vFCFxRef[sp,t]))
                            - 1);
EQUATION E_rFinAccelPrem_tEnd[sp,t];
E_rFinAccelPrem_tEnd[sp,t]$(tend[t]).. 
      rFinAccelPrem[sp,t]  =E=  0;
EQUATION E_vFCFxRef[sp,t];
E_vFCFxRef[sp,t]$(tx0[t]).. 
      vFCFxRef[sp,t]  =E=  rFinAccelTraeghed * (vFCF[sp,t] - vFCF[sp,t-1] + vFCFxRef[sp,t-1]) + cFinAccel[sp,t];
EQUATION E_rOmv_IndlAktier[t];
E_rOmv_IndlAktier[t]$(tx0[t] and t.val > 1995).. 
      rOmv['IndlAktier',t]  =E=  (vAktie[t] - vUdstedelser[t]) / (vAktie[t-1]/fv) - 1;
EQUATION E_vAktie[t];
E_vAktie[t]$(tx0[t]).. 
      vAktie[t]  =E=  vAktiex[sTot,t] + vVirkx[t] + vAktieRes[t];
EQUATION E_vAktieRes[t];
E_vAktieRes[t]$(tx0[t]).. 
      vAktieRes[t]  =E=  rAktieRes2BVT[t] * vVirkBVT5aarSnit[t];
EQUATION E_vVirkx[t];
E_vVirkx[t]$(tx0[t]).. 
      vVirkx[t]  =E=  fv * (1 + rOmv['IndlAktier',t]) * vVirkx[t-1]/fv + jvVirkx[t];
EQUATION E_vAktiex[sp,t];
E_vAktiex[sp,t]$(tx0e[t]).. 
      vAktiex[sp,t]  =E=  (vFCF[sp,t+1] + vAktiex[sp,t+1])*fv / (1+rAfkastKrav[sp,t+1]);
EQUATION E_vAktiex_tEnd[sp,t];
E_vAktiex_tEnd[sp,t]$(tend[t]).. 
      vAktiex[sp,t]  =E=  (vFCF[sp,t] + vAktiex[sp,t])*fv / (1+rAfkastKrav[sp,t]);
EQUATION E_vAktiex_sTot[t];
E_vAktiex_sTot[t]$(tx0e[t]).. 
      vAktiex[sTot,t]  =E=  (vFCF[sTot,t+1] + vAktiex[sTot,t+1])*fv / (1+rAfkastKrav[sTot,t+1]);
EQUATION E_vAktiex_sTot_tEnd[t];
E_vAktiex_sTot_tEnd[t]$(tend[t]).. 
      vAktiex[sTot,t]  =E=  sum(sp, vAktiex[sp,t]);
EQUATION E_rIndlAktiePrem_sTot[t];
E_rIndlAktiePrem_sTot[t]$(tx0e[t]).. 
      vAktiex[sTot,t]  =E=  sum(sp, vAktiex[sp,t]);
EQUATION E_rOmv_UdlAktier[t];
E_rOmv_UdlAktier[t]$(tx0[t]).. 
      rOmv['UdlAktier',t] + rRente['UdlAktier',t]  =E=  rRente['Obl',t] + rUdlAktiePrem[t] + jrOmv_UdlAktier[t];
EQUATION E_vFCF_sTot[t];
E_vFCF_sTot[t]$(tx0[t]).. 
      vFCF[sTot,t]  =E=  vEBITDA[sTot,t]                        
                     - rRente['Obl',t] * vVirkLaan[sTot,t-1]/fv
                     - vI_s[iTot,spTot,t] + vHhInvestx[aTot,t]
                     + vVirkLaan[sTot,t] - vVirkLaan[sTot,t-1]/fv
                     - vtSelskabx[sTot,t]                           
                     
                     + vOffLandKoeb[t]
                     - vSelvstKapInd[aTot,t]
                     + vOffTilVirk[t] - vOffFraVirk[t]        
                     - vHhFraVirk[t]
                     + vVirkIndRest[t];
EQUATION E_vFCF[sp,t];
E_vFCF[sp,t]$(tx0[t]).. 
      vFCF[sp,t]  =E=  vEBITDA[sp,t]                        
                   - rRente['Obl',t] * vVirkLaan[sp,t-1]/fv                  
                   - vI_s[iTot,sp,t] + vHhInvestx[aTot,t] * vI_s[iTot,sp,t] / sum(s$(sp[s]), vI_s[iTot,s,t]) + sameas[sp,'bol'] * vIBolig[t]
                   + vVirkLaan[sp,t] - vVirkLaan[sp,t-1]/fv
                   - vtSelskabx[sp,t]
                   
                   + (vOffLandKoeb[t]
                   - vSelvstKapInd[aTot,t]
                   + vOffTilVirk[t] - vOffFraVirk[t]        
                   - vHhFraVirk[t]
                   + vVirkIndRest[t]) * vVirkK[sp,t] / vVirkK[sTot,t];
EQUATION E_vEBITDA[sp,t];
E_vEBITDA[sp,t]$(tx0[t]).. 
      vEBITDA[sp,t]  =E=  vY[sp,t] - vLoensum[sp,t] - vSelvstLoen[sp,t] - vR[sp,t] - vtNetYAfg[sp,t] 
                      - sameas[sp,'bol'] * (vLejeAfEjerBolig[t]);
EQUATION E_vEBITDA_tot[t];
E_vEBITDA_tot[t]$(tx0[t])..  vEBITDA[sTot,t]  =E=  sum(sp, vEBITDA[sp,t]);
EQUATION E_vEBT_sTot[t];
E_vEBT_sTot[t]$(tx0[t])..  vEBT[sTot,t]  =E=  vEBITDA[sTot,t] - vAfskrFradrag[sTot,t]
                                             + rRente['Obl',t] * vVirk['Obl',t-1]/fv 
                                             + rRente['Bank',t] * vVirk['Bank',t-1]/fv 
                                             - rRente['RealKred',t] * vVirk['RealKred',t-1]/fv;
EQUATION E_vEBT[sp,t];
E_vEBT[sp,t]$(tx0[t])..  vEBT[sp,t]  =E=  vEBITDA[sp,t] - vAfskrFradrag[sp,t]
                                         + (rRente['Obl',t] * vVirk['Obl',t-1]/fv 
                                         + rRente['Bank',t] * vVirk['Bank',t-1]/fv 
                                         - rRente['RealKred',t] * vVirk['RealKred',t-1]/fv) * vVirkK[sp,t] / vVirkK[sTot,t];
EQUATION E_vEBTx_sTot[t];
E_vEBTx_sTot[t]$(tx0[t]).. 
      vEBTx[sTot,t]  =E=  vEBITDA[sTot,t] - vAfskrFradrag[sTot,t] - rRente['Obl',t] * vVirkLaan[sTot,t-1]/fv;
EQUATION E_vEBTx[sp,t];
E_vEBTx[sp,t]$(tx0[t]).. 
      vEBTx[sp,t]  =E=  vEBITDA[sp,t] - vAfskrFradrag[sp,t]- rRente['Obl',t] * vVirkLaan[sp,t-1]/fv;
EQUATION E_vtSelskabx_sTot[t];
E_vtSelskabx_sTot[t]$(tx0[t]).. 
      vtSelskabx[sTot,t]  =E=  tSelskab[t] * ftSelskab[t] * vEBTx[sTot,t] + vtSelskabNord[t];
EQUATION E_vtSelskabx[sp,t];
E_vtSelskabx[sp,t]$(tx0[t]).. 
      vtSelskabx[sp,t]  =E=  tSelskab[t] * ftSelskab[t] * vEBTx[sp,t] + sameas[sp,'udv'] * vtSelskabNord[t];
EQUATION E_vDividender[t];
E_vDividender[t]$(tx0[t] and t.val > 1994)..  vDividender[t]  =E=  rRente['IndlAktier',t] * vAktie[t-1]/fv;
EQUATION E_vUdstedelser[t];
E_vUdstedelser[t]$(tx0[t]).. 
      - vUdstedelser[t]  =E=  vFCF[sTot,t]
                          - (vVirkx[t] - vVirkx[t-1]/fv)
                          + rVirkxAfk[t] * vVirkx[t-1]/fv
                          - (vtSelskab[sTot,t] - vtSelskabx[sTot,t])
                          - vDividender[t];
EQUATION E_vKskat[k,sp,t];
E_vKskat[k,sp,t]$(tx0[t] and t.val > 1994 and d1k[k,sp,t]).. 
      vKskat[k,sp,t]  =E=  (1-rSkatAfskr[k,t]) * vKskat[k,sp,t-1]/fv + vI_s[k,sp,t] - sameas[sp,'bol'] * vIBolig[t];
EQUATION E_vKskat_kTot[t];
E_vKskat_kTot[t]$(tx0[t])..  vKskat[kTot,sTot,t]  =E=  sum([k,sp], vKskat[k,sp,t]);
EQUATION E_vAfskrFradrag[sp,t];
E_vAfskrFradrag[sp,t]$(tx0[t])..  vAfskrFradrag[sp,t]  =E=  sum(k, rSkatAfskr[k,t] * vKskat[k,sp,t-1]/fv);
EQUATION E_vAfskrFradrag_sTot[t];
E_vAfskrFradrag_sTot[t]$(tx0[t])..  vAfskrFradrag[sTot,t]  =E=  sum(sp, vAfskrFradrag[sp,t]);
EQUATION E_vVirk[akt,t];
E_vVirk[akt,t]$(tx0[t] and not sameas['obl',akt]).. 
      vVirk[akt,t]  =E=  rvVirkx[akt,t] * vVirkx[t];
EQUATION E_vVirk_obl[t];
E_vVirk_obl[t]$(tx0[t]).. 
      vVirk['Obl',t]  =E=  rvVirkx['obl',t] * vVirkx[t] - rvOblLaan2K[t] * vVirkK[sTot,t];
EQUATION E_vVirk_RealKred[t];
E_vVirk_RealKred[t]$(tx0[t]).. 
      vVirk['RealKred',t]  =E=  rvRealKred2K[t] * vVirkK[sTot,t];
EQUATION E_rLaan2K[t];
E_rLaan2K[t]$(tx0[t])..  rLaan2K[t]  =E=  rvRealKred2K[t] + rvOblLaan2K[t];
EQUATION E_vVirkK[sp,t];
E_vVirkK[sp,t]$(tx0[t]).. 
      vVirkK[sp,t]  =E=  sum(k, pI_s[k,sp,t] * qK[k,sp,t]) - sameas[sp,'bol'] * (pI_s['iB','bol',t] * qKBolig[t]);
EQUATION E_vVirkK_sTot[t];
E_vVirkK_sTot[t]$(tx0[t]).. 
      vVirkK[sTot,t]  =E=  sum(sp, vVirkK[sp,t]);
EQUATION E_vVirk_NetFin[t];
E_vVirk_NetFin[t]$(tx0[t] and t.val > 1993)..  vVirk['NetFin',t]  =E=  vVirkx[t] - vVirkLaan[sTot,t];
EQUATION E_vVirkLaan_sTot[t];
E_vVirkLaan_sTot[t]$(tx0[t]).. 
      vVirkLaan[sTot,t]  =E=  rLaan2K[t] * vVirkK[sTot,t];
EQUATION E_vVirkLaan[sp,t];
E_vVirkLaan[sp,t]$(tx0[t]).. 
      vVirkLaan[sp,t]  =E=  rLaan2K[t] * vVirkK[sp,t];
EQUATION E_vVirkFinInd[t];
E_vVirkFinInd[t]$(tx0[t])..  vVirkFinInd[t]  =E=  sum(akt, (rRente[akt,t] + rOmv[akt,t]) * vVirk[akt,t-1]/fv)
                                                 - (rRente['RealKred',t] + rOmv['RealKred',t]) * vVirk['RealKred',t-1]/fv
                                                 - vJordrente[t]
                                                 + jvVirkOmv[t] + jvVirkRenter[t];
EQUATION E_rVirkxAfk[t];
E_rVirkxAfk[t]$(tx0[t] and t.val > 2015).. 
      rVirkxAfk[t]  =E=  (vVirkFinInd[t] + rRente['Obl',t] * vVirkLaan[sTot,t-1]/fv) / (vVirkx[t-1]/fv);
EQUATION E_vVirkNFE[t];
E_vVirkNFE[t]$(tx0[t])..  vVirkNFE[t]  =E=  (vVirk['NetFin',t] - vAktie[t])
                                           - (vVirk['NetFin',t-1]/fv - vAktie[t-1]/fv)
                                           - vVirkOmv[t];
EQUATION E_vVirkRenter[t];
E_vVirkRenter[t]$(tx0[t]).. 
      vVirkRenter[t]  =E=  sum(akt, rRente[akt,t] * vVirk[akt,t-1]/fv)
                       - rRente['RealKred',t] * vVirk['RealKred',t-1]/fv
                       - vDividender[t]
                       - vJordrente[t]
                       + jvVirkRenter[t];
EQUATION E_vVirkOmv[t];
E_vVirkOmv[t]$(tx0[t]).. 
      vVirkOmv[t]  =E=  sum(akt, rOmv[akt,t] * vVirk[akt,t-1]/fv)
                    - rOmv['RealKred',t] * vVirk['RealKred',t-1]/fv 
                    - rOmv['IndlAktier',t] * vAktie[t-1]/fv
                    + jvVirkOmv[t];
EQUATION E_rRente_Pension[t];
E_rRente_Pension[t]$(tx0[t] and t.val > 1994).. 
      rRente['Pens',t]  =E=  ( rRente['Obl',t] * vPension['Obl',t-1]/fv + rRente['IndlAktier',t] * vPension['IndlAktier',t-1]/fv 
                           + rRente['UdlAktier',t] * vPension['UdlAktier',t-1]/fv ) 
                           / (vPension['Obl',t-1]/fv + vPension['IndlAktier',t-1]/fv + vPension['UdlAktier',t-1]/fv) + jrRente_pension[t];
EQUATION E_rOmv_Pension[t];
E_rOmv_Pension[t]$(tx0[t] and t.val > 1994).. 
      rOmv['Pens',t]  =E=  (  rOmv['Obl',t] * vPension['Obl',t-1]/fv
                          + rOmv['IndlAktier',t] * vPension['IndlAktier',t-1]/fv 
                          + rOmv['UdlAktier',t] * vPension['UdlAktier',t-1]/fv
                         ) / (vPension['Obl',t-1]/fv + vPension['IndlAktier',t-1]/fv + vPension['UdlAktier',t-1]/fv) + jrOmv_pension[t];
EQUATION E_vPension_pension[t];
E_vPension_pension[t]$(tx0[t] and t.val > 1993).. 
      vPension['Pens',t]  =E=  -vHh['Pens',aTot,t];
EQUATION E_vPension_akt[akt,t];
E_vPension_akt[akt,t]$(tx0[t] and (sameas['obl',akt] or sameas['indlaktier',akt] or sameas['udlaktier',akt]) and t.val > 1993).. 
      vPension[akt,t]  =E=  rPensAkt[akt,t] * (-vPension['Pens',t]);
EQUATION E_rRente_RealKred[t];
E_rRente_RealKred[t]$(tx0[t]).. 
      rRente['RealKred',t]  =E=  rRente['Obl',t];
EQUATION E_rRente_Bank[t];
E_rRente_Bank[t]$(tx0[t]).. 
      rRente['Bank',t]  =E=  rRente['Obl',t] + crRenteBank[t];
EQUATION E_rRente_BankGaeld[t];
E_rRente_BankGaeld[t]$(tx0[t]).. 
      rRente['BankGaeld',t]  =E=  rRente['Bank',t];

# ----------------------------------------------------------------------------------------------------
#  Define B_finance model
# ----------------------------------------------------------------------------------------------------
Model B_finance /
E_rAfkastKrav, E_rAfkastKrav_sTot, E_rVirkDisk, E_rFinAccelPrem, E_rFinAccelPrem_tEnd, E_vFCFxRef, E_rOmv_IndlAktier, E_vAktie, E_vAktieRes, E_vVirkx, E_vAktiex, E_vAktiex_tEnd, E_vAktiex_sTot, E_vAktiex_sTot_tEnd, E_rIndlAktiePrem_sTot, E_rOmv_UdlAktier, E_vFCF_sTot, E_vFCF, E_vEBITDA, E_vEBITDA_tot, E_vEBT_sTot, E_vEBT, E_vEBTx_sTot, E_vEBTx, E_vtSelskabx_sTot, E_vtSelskabx, E_vDividender, E_vUdstedelser, E_vKskat, E_vKskat_kTot, E_vAfskrFradrag, E_vAfskrFradrag_sTot, E_vVirk, E_vVirk_obl, E_vVirk_RealKred, E_rLaan2K, E_vVirkK, E_vVirkK_sTot, E_vVirk_NetFin, E_vVirkLaan_sTot, E_vVirkLaan, E_vVirkFinInd, E_rVirkxAfk, E_vVirkNFE, E_vVirkRenter, E_vVirkOmv, E_rRente_Pension, E_rOmv_Pension, E_vPension_pension, E_vPension_akt, E_rRente_RealKred, E_rRente_Bank, E_rRente_BankGaeld
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\pricing.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Pricing
# - Price rigidities, markups, and foreign prices
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

# ----------------------------------------------------------------------------------------------------------------------
# Final goods pricing
# ----------------------------------------------------------------------------------------------------------------------
  
# ----------------------------------------------B_pricing---------------------------------------------
#  Initialize B_pricing equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_rMarkup[s,t];
E_rMarkup[s,t]$(tx0[t])..  rMarkup[s,t]  =E=  pY[s,t] / (pKLBR[s,t] + vtNetYAfgRest[s,t] / qY[s,t]) - 1;
EQUATION E_pY_sMarkup[sp,t];
E_pY_sMarkup[sp,t]$(tx0e[t] and smarkup[sp]).. 
      pY[sp,t]  =E=  (1+srMarkup[sp,t] + jrMarkup[sp,t]) * (pKLBR[sp,t] + vtNetYAfgRest[sp,t] / qY[sp,t])

      - upYTraeghed[sp] * pY[sp,t] * (
          3/2 * sqr(pY[sp,t]/(pY[sp,t-1]/fp) / (pY[sp,t-1]/(pY[sp,t-2]/fp)))
          - 2 * pY[sp,t]/(pY[sp,t-1]/fp) / (pY[sp,t-1]/(pY[sp,t-2]/fp))
          + 1/2
        ) 

      + upYTraeghed[sp] / (1+rVirkDisk[sp,t+1]) * qY[sp,t+1]*fq / qY[sp,t] * 2 * pY[sp,t+1] * (
        sqr(pY[sp,t+1]*fp/pY[sp,t] / (pY[sp,t]/(pY[sp,t-1]/fp))) 
        - (pY[sp,t+1]*fp/pY[sp,t] / (pY[sp,t]/(pY[sp,t-1]/fp))) 
      )
    ;
EQUATION E_pY_sMarkup_tEnd[sp,t];
E_pY_sMarkup_tEnd[sp,t]$(tend[t] and smarkup[sp]).. 
      pY[sp,t]  =E=  (1+srMarkup[sp,t] + jrMarkup[sp,t]) * (pKLBR[sp,t] + vtNetYAfgRest[sp,t] / qY[sp,t]);
EQUATION E_pY_zero_markup[sp,t];
E_pY_zero_markup[sp,t]$(tx0[t] and szeromarkup[sp]).. 
      pY[sp,t]  =E=  (1+srMarkup[sp,t] + jrMarkup[sp,t]) * (pKLBR[sp,t] + vtNetYAfgRest[sp,t] / qY[sp,t])
                 + upYTraeghed[sp] / 2 * pY[sp,t] * sqr(pY[sp,t]/(pY[sp,t-1]/fp) / (pY[sp,t-1]/(pY[sp,t-2]/fp)) - 1);
EQUATION E_pY_off[t];
E_pY_off[t]$(tx0[t]).. 
      pY['off',t]  =E=  (1+srMarkup['off',t] + jrMarkup['off',t]) * (pKLBR['off',t] + vtNetYAfg['off',t] / qY['off',t]);
EQUATION E_jrMarkup[s,t];
E_jrMarkup[s,t]$(tx0[t]).. 
      jrMarkup[s,t] * vY[s,t]  =E=  sum(d, rMerPris[d,t] * vIOy[d,s,t]);
EQUATION E_srMarkup_udv[t];
E_srMarkup_udv[t]$(tx0[t]).. 
      pY['udv',t]  =E=  upYUdv[t] * (
                        (1 - qGrus[t] / qY['udv',t]) * pM['udv',t]
                        + qGrus[t] / qY['udv',t] * (pKLBR['udv',t] + vtNetYAfg['udv',t] / qY['udv',t])
                      );
EQUATION E_srMarkup_soe[t];
E_srMarkup_soe[t]$(tx0[t]).. 
      pX['xSoe',t]  =E=  upXSoe[t] * pXUdl['xSoe',t];
EQUATION E_pY_bol[t];
E_pY_bol[t]$(tx0[t]).. 
      pY['bol',t]  =E=  pY['bol',t-1]/fp * (1 + pCInflSnit[t]) + jpY_bol[t];
EQUATION E_pM[s,t];
E_pM[s,t]$(tx0[t] and d1iom[dtot,s,t]).. 
      pM[s,t]  =E=  upM[s,t] * pOlie[t]**epM2pOlie[s] * pUdl[t]**(1-epM2pOlie[s]);
EQUATION E_pXUdl[x,t];
E_pXUdl[x,t]$(tx0[t]).. 
      pXUdl[x,t]  =E=  upXUdl[x,t] * pOlie[t]**epXUdl2pOlie[x] * pUdl[t]**(1-epXUdl2pOlie[x]);

# ----------------------------------------------------------------------------------------------------
#  Define B_pricing model
# ----------------------------------------------------------------------------------------------------
Model B_pricing /
E_rMarkup, E_pY_sMarkup, E_pY_sMarkup_tEnd, E_pY_zero_markup, E_pY_off, E_jrMarkup, E_srMarkup_udv, E_srMarkup_soe, E_pY_bol, E_pM, E_pXUdl
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\labor_market.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Labor market
# - labor force participation, job searching and matching, and wage bargaining
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# -------------------------------------------B_labor_market-------------------------------------------
#  Initialize B_labor_market equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_hL[t];
E_hL[t]$(tx0[t] and t.val > 1999)..  hL[t]  =E=  hLHh[atot,t] + hLUdl[t];
EQUATION E_hLHh_aTot[t];
E_hLHh_aTot[t]$(tx0[t] and t.val > 2015)..  hLHh[atot,t]  =E=  sum(a, hLHh[a,t] * nLHh[a,t]);
EQUATION E_hLUdl[t];
E_hLUdl[t]$(tx0[t] and t.val > 1999)..  hLUdl[t]  =E=  nLUdl[t] * fhLUdl[t] * hLHh[atot,t] / nLHh[aTot,t];
EQUATION E_rL2nL[t];
E_rL2nL[t]$(tx0[t] and t.val > 2015).. 
      rL2nL[t] * nL[sTot,t]  =E=  fProdHh[aTot,t] * hLHh[aTot,t] + fProdUdl[t] * hLUdl[t];
EQUATION E_nL_spTot[t];
E_nL_spTot[t]$(tx0[t])..  nL[spTot,t]  =E=  sum(sp, nL[sp,t]);
EQUATION E_nL_tot[t];
E_nL_tot[t]$(tx0[t])..  nL[sTot,t]  =E=  nLHh[aTot,t] + nLUdl[t];
EQUATION E_nOpslag_sTot[t];
E_nOpslag_sTot[t]$(tx0[t])..  nOpslag[sTot,t]  =E=  sum(s, nOpslag[s,t]);
EQUATION E_vWHh[a,t];
E_vWHh[a,t]$(tx0[t] and a15t100[a] and t.val > 2015)..  vWHh[a,t]  =E=  vhW[t] * fProdHh[a,t] * hLHh[a,t];
EQUATION E_fProdHh_tot[t];
E_fProdHh_tot[t]$(tx0[t] and t.val > 2015)..  vWHh[aTot,t]  =E=  sum(a, vWHh[a,t] * nLHh[a,t]);
EQUATION E_fProdHh[a,t];
E_fProdHh[a,t]$(tx0[t] and t.val > 2015)..  fProdHh[a,t]  =E=  fProdHh_t[t] * fProdHh_a[a,t];
EQUATION E_vWHh_tot[t];
E_vWHh_tot[t]$(tx0[t] and t.val > 2015)..  vWHh[aTot,t]  =E=  vhW[t] * fProdHh[aTot,t] * hLHh[aTot,t];
EQUATION E_vWUdl[t];
E_vWUdl[t]$(tx0[t] and t.val > 1999)..  vWUdl[t]  =E=  vhW[t] * fProdUdl[t] * hLUdl[t];
EQUATION E_mtInd[a,t];
E_mtInd[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      mtInd[a,t]  =E=  ftBund[a,t] * tBund[t]
                   + tTop[t] * rTopSkatInd[a,t]
                   + tKommune[t] * ftKommune[a,t] * (1+jfvSkatteplInd[t])
                   + (1 - ftBund[a,t] * tBund[t]
                        - tTop[t] * rTopSkatInd[a,t]
                        - tKommune[t] * ftKommune[a,t] * (1+jfvSkatteplInd[t])
                   ) * tAMbidrag[t] * ftAMBidrag[t] * (1 - vBidragTjmp[t] / vWHh[aTot,t]) 
                   + cmtInd[a,t];
EQUATION E_fDeltag[a,t];
E_fDeltag[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      fDeltag[a,t]  =E=  uDeltag[a,t] * (nSoegBaseHh[a,t] / nPop[a,t]) / (nSoegBaseHh[a,tDataEnd] / nPop[a,tDataEnd]);
EQUATION E_nSoegBaseHh_tot[t];
E_nSoegBaseHh_tot[t]$(tx0[t] and t.val > 2015)..  nSoegBaseHh[aTot,t]  =E=  sum(a, nSoegBaseHh[a,t]);
EQUATION E_nSoegBaseHh[a,t];
E_nSoegBaseHh[a,t]$(tx0e[t] and a15t100[a] and a.val < 100 and t.val > 2015).. 
      (1 - mrKomp[a,t] - 1/(1+eh))**(eDeltag/emrKomp)
       =E=  fDeltag[a,t]**eDeltag / rJobFinding[t]
        - (1-rSeparation[a+1,t+1]) / rJobFinding[t+1]
        * fDiskDeltag[a+1,t+1] * fDeltag[a+1,t+1]**eDeltag;
EQUATION E_nSoegBaseHh_tEnd[a,t];
E_nSoegBaseHh_tEnd[a,t]$(tend[t] and a15t100[a] and a.val < 100).. 
      (1 - mrKomp[a,t] - 1/(1+eh))**(eDeltag/emrKomp)
       =E=  fDeltag[a,t]**eDeltag / rJobFinding[t]
        - (1-rSeparation[a+1,t]) / rJobFinding[t]
        * fDiskDeltag[a+1,t] * fDeltag[a+1,t]**eDeltag;
EQUATION E_nSoegBaseHh_aEND[a,t];
E_nSoegBaseHh_aEND[a,t]$(tx0[t] and a.val = 100 and t.val > 2015).. 
      (1 - mrKomp[a,t] - 1/(1+eh))**(eDeltag/emrKomp)
       =E=  fDeltag[a,t]**eDeltag / rJobFinding[t];
EQUATION E_hLHh[a,t];
E_hLHh[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      (vhW[t] / pC[cTot,t] * (1-mtInd[a,t])) / fZh[a,t]
       =E=  uh[a,t]**eh * (hLHh[a,t]/hLHh[a,tDataEnd])**eh / hLHh[a,tDataEnd];
EQUATION E_fZh[a,t];
E_fZh[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      fZh[a,t]  =E=  rfZhTraeghed * fZh[a,t-1] + (1 - rfZhTraeghed) * cZh[a,t];
EQUATION E_cZh[a,t];
E_cZh[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      cZh[a,t]  =E=  vhW[t] / pC[cTot,t] * (1-mtInd[a,t]);
EQUATION E_rOpslag2soeg[t];
E_rOpslag2soeg[t]$(tx0[t]).. 
     rOpslag2soeg[t]  =E=  nOpslag[sTot,t] / (nSoegHh[aTot,t] + nSoegUdl[t]);
EQUATION E_rJobFinding[t];
E_rJobFinding[t]$(tx0[t]).. 
      rJobFinding[t]  =E=  1 - 1 / (1 + rOpslag2soeg[t]**eMatching);
EQUATION E_rMatch[t];
E_rMatch[t]$(tx0[t]).. 
      rMatch[t] * nOpslag[sTot,t]  =E=  rJobFinding[t] * (nSoegHh[aTot,t] + nSoegUdl[t]);
EQUATION E_nLHh_tot[t];
E_nLHh_tot[t]$(tx0[t]).. 
      nLHh[aTot,t]  =E=  (1-rSeparation[aTot,t]) * nLHh[aTot,t-1] + rJobFinding[t] * nSoegHh[aTot,t];
EQUATION E_nSoegHh_Tot[t];
E_nSoegHh_Tot[t]$(tx0[t]).. 
      nSoegHh[aTot,t]  =E=  nSoegBaseHh[aTot,t] - (1-rSeparation[aTot,t]) * nLHh[aTot,t-1];
EQUATION E_nLUdl[t];
E_nLUdl[t]$(tx0[t])..  nLUdl[t]  =E=  (1-rSeparation[aTot,t]) * nLUdl[t-1] + rJobFinding[t] * nSoegUdl[t];
EQUATION E_nSoegUdl[t];
E_nSoegUdl[t]$(tx0[t])..  nSoegUdl[t]  =E=  nSoegBaseUdl[t] - (1-rSeparation[aTot,t]) * nLUdl[t-1];
EQUATION E_rSeparation_Tot[t];
E_rSeparation_Tot[t]$(tx0[t] and t.val > 2015).. 
      nLHh[aTot,t]  =E=  sum(a$a15t100[a], nLHh[a,t]);
EQUATION E_nLHh_a[a,t];
E_nLHh_a[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      nLHh[a,t]  =E=  (1-rSeparation[a,t]) * nLHh[a-1,t-1] * nPop[a,t]/nPop[a-1,t-1] + rJobFinding[t] * nSoegHh[a,t];
EQUATION E_nSoegHh_a[a,t];
E_nSoegHh_a[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      nSoegHh[a,t]  =E=  nSoegBaseHh[a,t] - (1-rSeparation[a,t]) * nLHh[a-1,t-1] * nPop[a,t]/nPop[a-1,t-1];
EQUATION E_pL[sp,t];
E_pL[sp,t]$(tx0e[t]).. 
      vW[sp,t]  =E=  (dqLdnL[sp,t] + (1-mtVirk[sp,t+1])/(1-mtVirk[sp,t]) * fDiskpL[sp,t+1] * dqLLeaddnL[sp,t+1]*fq) * pL[sp,t];
EQUATION E_pL_tEnd[sp,t];
E_pL_tEnd[sp,t]$(tend[t]).. 
      dqLdnL[sp,t]  =E=  vW[sp,t] /  pL[sp,t] - fDiskpL[sp,t] * dqLLeaddnL[sp,t]*fq;
EQUATION E_dqLdnL[sp,t];
E_dqLdnL[sp,t]$(tx0[t]).. 
      dqLdnL[sp,t]  =E=  fProd[sp,t] * qProd[t] * rLUdn[sp,t] * fW[sp,t] * rL2nL[t] * (1 - dOpslagOmk2dnL[sp,t]);
EQUATION E_dqLLeaddnL[sp,t];
E_dqLLeaddnL[sp,t]$(tx0[t]).. 
      dqLLeaddnL[sp,t]  =E=  - fProd[sp,t] * qProd[t] * rLUdn[sp,t] * fW[sp,t] * rL2nL[t] * dOpslagOmk2dnLLag[sp,t];
EQUATION E_rOpslagOmk[s,t];
E_rOpslagOmk[s,t]$(tx0[t]).. 
      rOpslagOmk[s,t] * nL[s,t]  =E=  uOpslagOmk * nOpslag[s,t]
                                  + uMatchOmk * rMatch[t] * nOpslag[s,t]
                                  + uMatchOmkSqr/2 * nL[s,t]
                                  * sqr(nL[s,t] / nL[s,t-1] / (nL[s,t-1] / nL[s,t-2]) - cMatchOmkSqr[s,t]);
EQUATION E_rOpslagOmk_sTot[t];
E_rOpslagOmk_sTot[t]$(tx0[t]).. 
      rOpslagOmk[sTot,t] * nL[sTot,t]  =E=  sum(s, rOpslagOmk[s,t] * nL[s,t]);
EQUATION E_dOpslagOmk2dnL[sp,t];
E_dOpslagOmk2dnL[sp,t]$(tx0[t]).. 
      dOpslagOmk2dnL[sp,t]  =E=  uOpslagOmk / rMatch[t]
                             + uMatchOmk
                             + uMatchOmkSqr/2 * sqr(nL[sp,t] / nL[sp,t-1] / (nL[sp,t-1] / nL[sp,t-2]) - cMatchOmkSqr[sp,t])
                             + uMatchOmkSqr * nL[sp,t] / nL[sp,t-1] / (nL[sp,t-1] / nL[sp,t-2])
                             * (nL[sp,t] / nL[sp,t-1] / (nL[sp,t-1] / nL[sp,t-2]) - cMatchOmkSqr[sp,t]);
EQUATION E_dOpslagOmk2dnLLag[sp,t];
E_dOpslagOmk2dnLLag[sp,t]$(tx0[t]).. 
      dOpslagOmk2dnLLag[sp,t]  =E=  - (1-rSeparation[aTot,t]) * (uOpslagOmk / rMatch[t] + uMatchOmk)
                                  - 2 * uMatchOmkSqr
                                  * nL[sp,t] / nL[sp,t-1]
                                  * nL[sp,t] / nL[sp,t-1] / (nL[sp,t-1] / nL[sp,t-2])
                                  * (nL[sp,t] / nL[sp,t-1] / (nL[sp,t-1] / nL[sp,t-2]) - cMatchOmkSqr[sp,t]);
EQUATION E_nOpslag[s,t];
E_nOpslag[s,t]$(tx0[t]).. 
      nL[s,t]  =E=  (1-rSeparation[aTot,t]) * nL[s,t-1] + rMatch[t] * nOpslag[s,t];
EQUATION E_vW[s,t];
E_vW[s,t]$(tx0[t])..  vW[s,t]  =E=  vhW[t] * (1 + tL[s,t] * (1-rSelvst[s,t])) * fW[s,t] * rL2nL[t];
EQUATION E_vSelvstLoen[s,t];
E_vSelvstLoen[s,t]$(tx0[t])..  vSelvstLoen[s,t]  =E=  rSelvst[s,t] * vhW[t] * fW[s,t] * rL2nL[t] * nL[s,t];
EQUATION E_vSelvstLoen_tot[t];
E_vSelvstLoen_tot[t]$(tx0[t])..  vSelvstLoen[sTot,t]  =E=  sum(s, vSelvstLoen[s,t]);
EQUATION E_vLoensum[s,t];
E_vLoensum[s,t]$(tx0[t])..  vLoensum[s,t]  =E=  (1-rSelvst[s,t]) * vhW[t] * fW[s,t] * rL2nL[t] * nL[s,t];
EQUATION E_vLoensum_sTot[t];
E_vLoensum_sTot[t]$(tx0[t])..  vLoensum[sTot,t]  =E=  sum(s, vLoensum[s,t]);
EQUATION E_vLoensum_spTot[t];
E_vLoensum_spTot[t]$(tx0[t])..  vLoensum[spTot,t]  =E=  sum(sp, vLoensum[sp,t]);
EQUATION E_fW[s,t];
E_fW[s,t]$(tx0[t]).. 
      fW[s,t]  =E=  fW0[s,t] * sum(ss, nL[ss,t]) / sum(ss, fW0[ss,t] * nL[ss,t]);
EQUATION E_vhW[t];
E_vhW[t]$(tx0[t])..  vhW[t]  =E=  rLoenTraeghed * vhW[t-1]/fv * fv + (1-rLoenTraeghed) * vhWNy[t] + jvhW[t];
EQUATION E_vhWNy[t];
E_vhWNy[t]$(tx0[t]).. 
      vhWNy[t]  =E=  (1 - rLoenIndeksering) * vhWForhandlet[t] + rLoenIndeksering * vhWNy[t-1]/fv * vhW[t-1]/(vhW[t-2]/fv);
EQUATION E_vFFLoenPos0[t];
E_vFFLoenPos0[t]$(tx0[t] and t.val > 2015).. 
      vFFLoenPos0[t]  =E=  sum(a, (1-mtInd[a,t]) * nLHh[a,t] * fProdHh[a,t] * hLHh[a,t]);
EQUATION E_vFFLoenPos[t];
E_vFFLoenPos[t]$(tx0e[t] and t.val > 2015).. 
      vFFLoenPos[t]  =E=  vFFLoenPos0[t] + rLoenTraeghed / (1+rAMDisk[t+1]) * vFFLoenPos[t+1]*fv;
EQUATION E_vFFLoenPos_tEnd[t];
E_vFFLoenPos_tEnd[t]$(tend[t]).. 
      vFFLoenPos[t]  =E=  vFFLoenPos0[t] + rLoenTraeghed / (1+rAMDisk[t]) * vFFLoenPos[t]*fv;
EQUATION E_vFFLoenNeg0[t];
E_vFFLoenNeg0[t]$(tx0[t] and t.val > 2015).. 
      vFFLoenNeg0[t]  =E=  sum(a, (1-mtInd[a,t]) * nLHh[a,t] * fProdHh[a,t] * hLHh[a,t]) * rFFLoenAlternativ * rJobFinding[t] * vhW[t];
EQUATION E_vFFLoenNeg[t];
E_vFFLoenNeg[t]$(tx0e[t] and t.val > 2015).. 
      vFFLoenNeg[t]  =E=  vFFLoenNeg0[t] + rLoenTraeghed / (1+rAMDisk[t+1]) * vFFLoenNeg[t+1]*fv;
EQUATION E_vFFLoenNeg_tEnd[t];
E_vFFLoenNeg_tEnd[t]$(tend[t]).. 
      vFFLoenNeg[t]  =E=  vFFLoenNeg0[t] + rLoenTraeghed / (1+rAMDisk[t]) * vFFLoenNeg[t]*fv;
EQUATION E_vVirkLoenPos0[t];
E_vVirkLoenPos0[t]$(tx0[t]).. 
      vVirkLoenPos0[t]  =E=  rL2nL[t] * sum(sp, (1-mtVirk[sp,t]) * pL[sp,t] * rLUdn[sp,t] * nL[sp,t] * fProd[sp,t] * qProd[t] * fW[sp,t]);
EQUATION E_vVirkLoenPos[t];
E_vVirkLoenPos[t]$(tx0e[t] and t.val > 2015).. 
      vVirkLoenPos[t]  =E=  vVirkLoenPos0[t] + rLoenTraeghed / (1+rAMDisk[t+1]) * vVirkLoenPos[t+1]*fv;
EQUATION E_vVirkLoenPos_tEnd[t];
E_vVirkLoenPos_tEnd[t]$(tend[t]).. 
      vVirkLoenPos[t]  =E=  vVirkLoenPos0[t] + rLoenTraeghed / (1+rAMDisk[t]) * vVirkLoenPos[t]*fv;
EQUATION E_vVirkLoenNeg0[t];
E_vVirkLoenNeg0[t]$(tx0[t]).. 
      vVirkLoenNeg0[t]  =E=  rL2nL[t] * sum(sp, (1-mtVirk[sp,t]) * (1 + tL[sp,t] * (1-rSelvst[sp,t])) * nL[sp,t] * fW[sp,t] * (1-rOpslagOmk[sp,t]));
EQUATION E_vVirkLoenNeg[t];
E_vVirkLoenNeg[t]$(tx0e[t] and t.val > 2015).. 
      vVirkLoenNeg[t]  =E=  vVirkLoenNeg0[t] + rLoenTraeghed / (1+rAMDisk[t+1]) * vVirkLoenNeg[t+1]*fv;
EQUATION E_vVirkLoenNeg_tEnd[t];
E_vVirkLoenNeg_tEnd[t]$(tend[t]).. 
      vVirkLoenNeg[t]  =E=  vVirkLoenNeg0[t] + rLoenTraeghed / (1+rAMDisk[t]) * vVirkLoenNeg[t]*fv;
EQUATION E_vhWForhandlet[t];
E_vhWForhandlet[t]$(tx0[t] and t.val > 2015).. 
      vhWForhandlet[t]  =E=  (1-rLoenNash[t]) * vVirkLoenPos[t] / vVirkLoenNeg[t]
                         + rLoenNash[t] * vFFLoenNeg[t] / vFFLoenPos[t];
EQUATION E_nSoc[soc,t];
E_nSoc[soc,t]$(tx0[t]).. 
      nSoc[soc,t]  =E=  snSoc[soc,t] + dSoc2dBesk[soc,t] * (nLHh['tot',t] - snLHh['tot',t]) + jnSoc[soc,t];
EQUATION E_nSoc_bruttoled[t];
E_nSoc_bruttoled[t]$(tx0[t])..  nSoc['bruttoled',t]  =E=  sum(bruttoled, nSoc[bruttoled,t]);
EQUATION E_nSoc_arbsty[t];
E_nSoc_arbsty[t]$(tx0[t])..  nSoc['arbsty',t]     =E=  sum(arbsty, nSoc[arbsty,t]);
EQUATION E_nSoc_nettoled[t];
E_nSoc_nettoled[t]$(tx0[t])..  nSoc['nettoled',t]     =E=  sum(nettoled, nSoc[nettoled,t]);
EQUATION E_nSoc_nettoarbsty[t];
E_nSoc_nettoarbsty[t]$(tx0[t])..  nSoc['nettoarbsty',t]  =E=  sum(nettoarbsty, nSoc[nettoarbsty,t]);
EQUATION E_nPop_aTot[t];
E_nPop_aTot[t]$(tx0[t] and t.val > 1991)..     nPop['tot',t]      =E=  sum(a, nPop[a,t]);
EQUATION E_nPop_a15t100[t];
E_nPop_a15t100[t]$(tx0[t] and t.val > 1991)..  nPop['a15t100',t]  =E=  sum(a$a15t100[a], nPop[a,t]);
EQUATION E_nPop_a0t17[t];
E_nPop_a0t17[t]$(tx0[t] and t.val > 1991)..    nPop['a0t17',t]    =E=  sum(a$a0t17[a], nPop[a,t]);
EQUATION E_nPop_a18t100[t];
E_nPop_a18t100[t]$(tx0[t] and t.val > 1991)..  nPop['a18t100',t]  =E=  sum(a$a18t100[a], nPop[a,t]);
EQUATION E_rLedig[t];
E_rLedig[t]$(tx0[t] and t.val > 1999)..   rLedig[t]  =E=  nSoc['bruttoled',t] / nSoc['arbsty',t];
EQUATION E_rLedigGab[t];
E_rLedigGab[t]$(tx0[t] and t.val > 1999)..  rLedigGab[t]  =E=  rLedig[t] - srLedig[t];

# ----------------------------------------------------------------------------------------------------
#  Define B_labor_market model
# ----------------------------------------------------------------------------------------------------
Model B_labor_market /
E_hL, E_hLHh_aTot, E_hLUdl, E_rL2nL, E_nL_spTot, E_nL_tot, E_nOpslag_sTot, E_vWHh, E_fProdHh_tot, E_fProdHh, E_vWHh_tot, E_vWUdl, E_mtInd, E_fDeltag, E_nSoegBaseHh_tot, E_nSoegBaseHh, E_nSoegBaseHh_tEnd, E_nSoegBaseHh_aEND, E_hLHh, E_fZh, E_cZh, E_rOpslag2soeg, E_rJobFinding, E_rMatch, E_nLHh_tot, E_nSoegHh_Tot, E_nLUdl, E_nSoegUdl, E_rSeparation_Tot, E_nLHh_a, E_nSoegHh_a, E_pL, E_pL_tEnd, E_dqLdnL, E_dqLLeaddnL, E_rOpslagOmk, E_rOpslagOmk_sTot, E_dOpslagOmk2dnL, E_dOpslagOmk2dnLLag, E_nOpslag, E_vW, E_vSelvstLoen, E_vSelvstLoen_tot, E_vLoensum, E_vLoensum_sTot, E_vLoensum_spTot, E_fW, E_vhW, E_vhWNy, E_vFFLoenPos0, E_vFFLoenPos, E_vFFLoenPos_tEnd, E_vFFLoenNeg0, E_vFFLoenNeg, E_vFFLoenNeg_tEnd, E_vVirkLoenPos0, E_vVirkLoenPos, E_vVirkLoenPos_tEnd, E_vVirkLoenNeg0, E_vVirkLoenNeg, E_vVirkLoenNeg_tEnd, E_vhWForhandlet, E_nSoc, E_nSoc_bruttoled, E_nSoc_arbsty, E_nSoc_nettoled, E_nSoc_nettoarbsty, E_nPop_aTot, E_nPop_a15t100, E_nPop_a0t17, E_nPop_a18t100, E_rLedig, E_rLedigGab
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\struk.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Structural levels
# - Potential output (Gross Value Added) and employment
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# -----------------------------------------------B_struk----------------------------------------------
#  Initialize B_struk equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_sqBVT[t];
E_sqBVT[t]$(tx0[t])..  sqBVT[t]  =E=  uY[t] * sqLspBy[t]**0.65 * qKspBy[t]**0.35 + sum(s$(not spBy[s]), qBVT[s,t]);
EQUATION E_uY[t];
E_uY[t]$(tx0[t])..  qBVT[sTot,t]  =E=  (uY[t] + juY[t]) * qLspBy[t]**0.65 * (rKUdnSpBy[t] * qKspBy[t])**0.35 + sum(s$(not spBy[s]), qBVT[s,t]);
EQUATION E_qKspBy[t];
E_qKspBy[t]$(tx0[t])..  pKspBy[t-1] * qKspBy[t]  =E=  sum([k,spBy], pI_s[k,spBy,t-1] * qK[k,spBy,t-1]);
EQUATION E_pKspBy[t];
E_pKspBy[t]$(tx0[t])..  pKspBy[t] * qKspBy[t]  =E=  sum([k,spBy], pI_s[k,spBy,t] * qK[k,spBy,t-1]);
EQUATION E_qLspBy[t];
E_qLspBy[t]$(tx0[t])..  qLspBy[t]  =E=  sum(spBy, qL[spBy,t]);
EQUATION E_sqLspBy[t];
E_sqLspBy[t]$(tx0[t])..  sqLspBy[t]  =E=  sum(spBy, sqL[spBy,t]);
EQUATION E_snL[sp,t];
E_snL[sp,t]$(tx0[t] and spby[sp] and not sameas[sp,'tje']).. 
      snL[sp,t]  =E=  nL[sp,t] / sum(spBy, nL[spBy,t]) * sum(spBy, snL[spBy,t]);
EQUATION E_snL_tje[t];
E_snL_tje[t]$(tx0[t])..  snL[sTot,t]  =E=  sum(s, snL[s,t]);
EQUATION E_snL_xspBy[s,t];
E_snL_xspBy[s,t]$(tx0[t] and not spby[s])..  snL[s,t]  =E=  nL[s,t];
EQUATION E_snL_spTot[t];
E_snL_spTot[t]$(tx0[t])..  snL[spTot,t]  =E=  sum(sp, snL[sp,t]);
EQUATION E_sqL[s,t];
E_sqL[s,t]$(tx0[t] and spby[s]).. 
      sqL[s,t]  =E=  fProd[s,t] * qProd[t] * sfW[s,t] * srL2nL[t] * (1-srOpslagOmk[t]) * snL[s,t] * srLUdn[s,t];
EQUATION E_sqL_spTot[t];
E_sqL_spTot[t]$(tx0[t])..  sqL[spTot,t]  =E=  sum(sp, sqL[sp,t]);
EQUATION E_sfW[s,t];
E_sfW[s,t]$(tx0[t]).. 
      sfW[s,t]  =E=  fW0[s,t] * sum(ss, snL[ss,t]) / sum(ss, fW0[ss,t] * snL[ss,t]);
EQUATION E_snOpslag[t];
E_snOpslag[t]$(tx0e[t] and t.val > 2000).. 
      sdOpslagOmk2dnL[t]  =E=  1
        - sum(sp, fDiskpL[sp,t+1] * srLUdn[sp,t] * snL[sp,t] * fProd[sp,t+1] * qProd[t+1]*fq * sfW[sp,t+1])
        / sum(sp, srLUdn[sp,t+1] * snL[sp,t] * fProd[sp,t] * qProd[t] * sfW[sp,t])
        * srL2nL[t+1] / srL2nL[t]
        * sdOpslagOmk2dnLLag[t+1]
        - (1 - rLoenNash[t]) / (1-srOpslagOmk[t]) / (1 - rLoenNash[t] * rFFLoenAlternativ * srJobFinding[t]);
EQUATION E_snOpslag_tEnd[t];
E_snOpslag_tEnd[t]$(tend[t]).. 
      sdOpslagOmk2dnL[t]  =E=  1 - sum(sp, fDiskpL[sp,t] * srLUdn[sp,t] * snL[sp,t] * fProd[sp,t] * qProd[t]*fq * sfW[sp,t])
                               / sum(sp, srLUdn[sp,t] * snL[sp,t] * fProd[sp,t] * qProd[t] * sfW[sp,t]) * fv * sdOpslagOmk2dnLLag[t]
                           - (1-rLoenNash[t]) / (1-srOpslagOmk[t]) / (1 - rLoenNash[t] * rFFLoenAlternativ * srJobFinding[t]);
EQUATION E_srOpslagOmk[t];
E_srOpslagOmk[t]$(tx0[t]).. 
      srOpslagOmk[t] * snL[sTot,t]  =E=  uOpslagOmk * snOpslag[t]
                                     + uMatchOmk * srMatch[t] * snOpslag[t];
EQUATION E_sdOpslagOmk2dnL[t];
E_sdOpslagOmk2dnL[t]$(tx0[t]).. 
      sdOpslagOmk2dnL[t]  =E=  uOpslagOmk / srMatch[t]
                           + uMatchOmk;
EQUATION E_sdOpslagOmk2dnLLag[t];
E_sdOpslagOmk2dnLLag[t]$(tx0e[t] and t.val > 2000).. 
      sdOpslagOmk2dnLLag[t+1]  =E=  - (1-srSeparation[t+1]) * (uOpslagOmk / srMatch[t] + uMatchOmk);
EQUATION E_srJobFinding[t];
E_srJobFinding[t]$(tx0[t])..  srJobFinding[t]  =E=  1 - 1 / (1 + srOpslag2soeg[t]**eMatching);
EQUATION E_srMatch[t];
E_srMatch[t]$(tx0[t])..  srMatch[t] * snOpslag[t]  =E=  srJobFinding[t] * (snSoegHh[aTot,t] + snSoegUdl[t]);
EQUATION E_srOpslag2soeg[t];
E_srOpslag2soeg[t]$(tx0[t])..  srOpslag2soeg[t]  =E=  snOpslag[t] / (snSoegHh[aTot,t] + snSoegUdl[t]);
EQUATION E_shL[t];
E_shL[t]$(tx0[t])..  shL[t]  =E=  shLHh[atot,t] + shLUdl[t];
EQUATION E_snL_tot[t];
E_snL_tot[t]$(tx0[t]).. 
      snL[sTot,t]  =E=  (1-srSeparation[t]) * (snLHh[aTot,t] + snLUdl[t]) + srJobFinding[t] * (snSoegHh[aTot,t] + snSoegUdl[t]);
EQUATION E_srL2nL[t];
E_srL2nL[t]$(tx0[t] and t.val > 2015).. 
      srL2nL[t] * snL[sTot,t]  =E=  sfProdHh[t] * shLHh[aTot,t] + fProdUdl[t] * shLUdl[t];
EQUATION E_shLUdl[t];
E_shLUdl[t]$(tx0[t])..  shLUdl[t]  =E=  snLUdl[t] * fhLUdl[t] * shLHh[atot,t] / snLHh[aTot,t];
EQUATION E_snLUdl[t];
E_snLUdl[t]$(tx0[t])..  snLUdl[t]  =E=  (1-srSeparation[t]) * snLUdl[t] + srJobFinding[t] * snSoegUdl[t];
EQUATION E_snSoegUdl[t];
E_snSoegUdl[t]$(tx0[t])..  snSoegUdl[t]  =E=  nSoegBaseUdl[t] - (1-srSeparation[t]) * snLUdl[t];
EQUATION E_shLHh_aTot[t];
E_shLHh_aTot[t]$(tx0[t] and t.val > 2015).. 
      shLHh[atot,t]  =E=  sum(a, shLHh[a,t] * snLHh[a,t]);
EQUATION E_snLHh_tot[t];
E_snLHh_tot[t]$(tx0[t]).. 
      snLHh[aTot,t]  =E=  (1-srSeparation[t]) * snLHh[aTot,t] + srJobFinding[t] * snSoegHh[aTot,t];
EQUATION E_srSeparation[t];
E_srSeparation[t]$(tx0[t] and t.val > 2015)..  snLHh[aTot,t]  =E=  sum(a, snLHh[a,t]);
EQUATION E_snSoegHh_aTot[t];
E_snSoegHh_aTot[t]$(tx0[t]).. 
      snSoegHh[aTot,t]  =E=  snSoegBaseHh[aTot,t] - (1-srSeparation[t]) * snLHh[aTot,t];
EQUATION E_snSoegBaseHh_tot[t];
E_snSoegBaseHh_tot[t]$(tx0[t] and t.val > 2015).. 
      snSoegBaseHh[aTot,t]  =E=  sum(a, snSoegBaseHh[a,t]);
EQUATION E_sfProdHh[t];
E_sfProdHh[t]$(tx0[t] and t.val > 2015).. 
      sfProdHh[t]  =E=  sum(a, fProdHh[a,t] * shLHh[a,t] * snLHh[a,t]) / shLHh[aTot,t];
EQUATION E_shLHh[a,t];
E_shLHh[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      1  =E=  uh[a,t]**eh * (shLHh[a,t]/hLHh[a,tDataEnd])**eh / hLHh[a,tDataEnd] + jshLHh[a,t];
EQUATION E_snLHh[a,t];
E_snLHh[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      snLHh[a,t]  =E=  (1-rSeparation[a,t]) * snLHh[a-1,t] / nPop[a-1,t] * nPop[a,t] + srJobFinding[t] * snSoegHh[a,t];
EQUATION E_snSoegHh[a,t];
E_snSoegHh[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      snSoegHh[a,t]  =E=  snSoegBaseHh[a,t] - (1-rSeparation[a,t]) * snLHh[a-1,t] / nPop[a-1,t] * nPop[a,t] ;
EQUATION E_snSoegBaseHh[a,t];
E_snSoegBaseHh[a,t]$(tx0e[t] and a15t100[a] and a.val < 100 and t.val > 2015).. 
      (1 - mrKomp[a,t] - 1/(1+eh))**(eDeltag/emrKomp)
       =E=  sfDeltag[a,t]**eDeltag / srJobFinding[t]
        - (1-rSeparation[a+1,t+1]) * (1 / srJobFinding[t+1]) * fDiskDeltag[a+1,t+1] * sfDeltag[a+1,t+1]**eDeltag;
EQUATION E_snSoegBaseHh_tEnd[a,t];
E_snSoegBaseHh_tEnd[a,t]$(tend[t] and a15t100[a] and a.val < 100).. 
      (1 - mrKomp[a,t] - 1/(1+eh))**(eDeltag/emrKomp)
       =E=  sfDeltag[a,t]**eDeltag / srJobFinding[t]
        - (1-rSeparation[a+1,t]) * (1 / srJobFinding[t]) * fDiskDeltag[a+1,t] * sfDeltag[a+1,t]**eDeltag;
EQUATION E_snSoegBaseHh_aEnd[a,t];
E_snSoegBaseHh_aEnd[a,t]$(tx0[t] and a.val = 100 and t.val > 2015).. 
      (1 - mrKomp[a,t] - 1/(1+eh))**(eDeltag/emrKomp)
       =E=  sfDeltag[a,t]**eDeltag / srJobFinding[t];
EQUATION E_sfDeltag[a,t];
E_sfDeltag[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      sfDeltag[a,t]  =E=  uDeltag[a,t] * (snSoegBaseHh[a,t] / nPop[a,t]) / (nSoegBaseHh[a,tDataEnd] / nPop[a,tDataEnd]) * (1+jsfDeltag[a,t]);
EQUATION E_snSoc[soc,t];
E_snSoc[soc,t]$(tx0[t] and t.val > 2015).. 
      snSoc[soc,t]  =E=  dSoc2dBesk[soc,t] * snLHh['tot',t] + dSoc2dPop[soc,t] * nPop['a15t100',t];
EQUATION E_dSoc2dPop_boern[t];
E_dSoc2dPop_boern[t]$(tx0[t] and t.val > 2015).. 
      snSoc['boern',t]  =E=  nPop['tot',t] - nPop['a15t100',t];
EQUATION E_snSoc_bruttoled[t];
E_snSoc_bruttoled[t]$(tx0[t] and t.val > 2015)..  snSoc['bruttoled',t]  =E=  sum(bruttoled, snSoc[bruttoled,t]);
EQUATION E_snSoc_arbsty[t];
E_snSoc_arbsty[t]$(tx0[t] and t.val > 2015)..  snSoc['arbsty',t]     =E=  sum(arbsty, snSoc[arbsty,t]);
EQUATION E_snSoc_nettoled[t];
E_snSoc_nettoled[t]$(tx0[t] and t.val > 2015)..  snSoc['nettoled',t]     =E=  sum(nettoled, snSoc[nettoled,t]);
EQUATION E_snSoc_nettoarbsty[t];
E_snSoc_nettoarbsty[t]$(tx0[t] and t.val > 2015)..  snSoc['nettoarbsty',t]  =E=  sum(nettoarbsty, snSoc[nettoarbsty,t]);
EQUATION E_srLedig[t];
E_srLedig[t]$(tx0[t] and t.val > 2015)..  srLedig[t]  =E=  snSoc['bruttoled',t] / snSoc['arbsty',t];

# ----------------------------------------------------------------------------------------------------
#  Define B_struk model
# ----------------------------------------------------------------------------------------------------
Model B_struk /
E_sqBVT, E_uY, E_qKspBy, E_pKspBy, E_qLspBy, E_sqLspBy, E_snL, E_snL_tje, E_snL_xspBy, E_snL_spTot, E_sqL, E_sqL_spTot, E_sfW, E_snOpslag, E_snOpslag_tEnd, E_srOpslagOmk, E_sdOpslagOmk2dnL, E_sdOpslagOmk2dnLLag, E_srJobFinding, E_srMatch, E_srOpslag2soeg, E_shL, E_snL_tot, E_srL2nL, E_shLUdl, E_snLUdl, E_snSoegUdl, E_shLHh_aTot, E_snLHh_tot, E_srSeparation, E_snSoegHh_aTot, E_snSoegBaseHh_tot, E_sfProdHh, E_shLHh, E_snLHh, E_snSoegHh, E_snSoegBaseHh, E_snSoegBaseHh_tEnd, E_snSoegBaseHh_aEnd, E_sfDeltag, E_snSoc, E_dSoc2dPop_boern, E_snSoc_bruttoled, E_snSoc_arbsty, E_snSoc_nettoled, E_snSoc_nettoarbsty, E_srLedig
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\consumers.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Consumers
# - Consumption decisions and budget constraint
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# ---------------------------------------------B_consumers--------------------------------------------
#  Initialize B_consumers equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_vHhx[a,t];
E_vHhx[a,t]$(tx0[t] and a0t100[a] and t.val > 2015).. 
      vHhx[a,t]  =E=  (vHhx[a-1,t-1]/fv + vHhxAfk[a,t]) * fMigration[a,t]
                  + vHhInd[a,t]
                  - vC_a[a,t]            
                  - vCLejeBolig[a,t]     
                  - vBoligUdgift[a,t]    
                  + vBoernFraHh[a,t] - vHhTilBoern[a,t]  
                  + jvHhx[a,t];
EQUATION E_jvHhx_aTot[t];
E_jvHhx_aTot[t]$(tx0[t] and t.val > 2015).. 
      vHhx[aTot,t]  =E=  vHhx[aTot,t-1]/fv + vHhxAfk[aTot,t] 
                     + vHhInd[aTot,t]
                     - qC['cIkkeBol',t] * pC['cIkkeBol',t] 
                     - vCLejebolig[aTot,t] 
                     - vBoligUdgift[aTot,t] 
                     - (vArv[aTot,t] + vArvKorrektion[aTot,t] + vtDoedsbo[aTot,t] - vPensArv['Pens',aTot,t] + vtKapPensArv[aTot,t])
                     + jvHhx[aTot,t];
EQUATION E_vHhx_aTot[t];
E_vHhx_aTot[t]$(tx0[t])..  vHhx[aTot,t]  =E=  vHh['NetFin',aTot,t] - vHh['Pens',aTot,t] + vHh['RealKred',aTot,t];
EQUATION E_vtHhx[a,t];
E_vtHhx[a,t]$(tx0[t] and a0t100[a] and t.val > 2015).. 
      vtHhx[a,t]  =E=  vtBund[a,t] 
                   + vtTop[a,t] 
                   + vtKommune[a,t] 
                   + vtAktie[a,t] 
                   + vtVirksomhed[a,t] 
                   + vtHhAM[a,t]
                   + vtPersRest[a,t]
                   + vtHhVaegt[a,t]                
                   + utMedie[t] * vSatsIndeks[t] * a18t100[a]
                   + vtArv[a,t]
                   + vBidrag[a,t]
                   + vtKirke[a,t]
                   + vtLukning[a,t]
                   + (vtKildeRest[t] + vtDirekteRest[t]) / nPop[aTot,t];
EQUATION E_vtHhx_tot[t];
E_vtHhx_tot[t]$(tx0[t]).. 
      vtHhx[aTot,t]  =E=  vtBund[aTot,t] 
                      + vtTop[aTot,t] 
                      + vtKommune[aTot,t] 
                      + vtAktie[aTot,t] 
                      + vtVirksomhed[aTot,t] 
                      + vtHhAM[aTot,t]
                      + (vtPersRest[aTot,t] - vtKapPensArv[aTot,t])
                      + vtHhVaegt[aTot,t]                
                      + vtMedie[t]
                      + vtArv[aTot,t]
                      + vBidrag[aTot,t]
                      + vtKirke[aTot,t]
                      + vtLukning[aTot,t]
                      + vtKildeRest[t] + vtDirekteRest[t];
EQUATION E_vBoligUdgift[a,t];
E_vBoligUdgift[a,t]$(tx0[t] and t.val > 2015).. 
      vBoligUdgift[a,t]  =E=  (1-rRealKred2Bolig[a,t]) * vBolig[a,t] + fBoligUdgift[a,t] * vBolig[a-1,t-1]/fv * fMigration[a,t];
EQUATION E_fBoligUdgift[a,t];
E_fBoligUdgift[a,t]$(18 <= a.val and tx0[t] and t.val > 2015).. 
      fBoligUdgift[a,t]  =E=  (1+rHhAfk['RealKred',t]) * rRealKred2Bolig[a-1,t-1] 
                            + tEjd[t] 
                            + rBoligOmkRest[t] 
                            + vIBolig[t] / (vBolig[aTot,t-1]/fv) 
                            - vBolig[aTot,t] / (vBolig[aTot,t-1]/fv);
EQUATION E_vBoligUdgift_tot[t];
E_vBoligUdgift_tot[t]$(tx0[t] and t.val > 2015).. 
      vBoligUdgift[aTot,t]  =E=  sum(a, vBoligUdgift[a,t] * nPop[a,t]) + vBoligUdgiftArv[t];
EQUATION E_vBoligUdgiftArv[t];
E_vBoligUdgiftArv[t]$(tx0[t])..  vBoligUdgiftArv[t]  =E=  sum(a, (1-rOverlev[a-1,t-1]) * nPop[a-1,t-1] * fBoligUdgift[a,t] * vBolig[a-1,t-1]/fv);
EQUATION E_vHhNFErest[a,t];
E_vHhNFErest[a,t]$(tx0[t] and a0t100[a] and t.val > 2015).. 
      vHhNFErest[a,t]  =E=  ( vOffTilHh[t] - vOffFraHh[t]
                        - vHhInvestx[aTot,t] + vSelvstKapInd[aTot,t] + vHhFraVirk[t] - vhhTilUdl[t])
                        * (vWHh[a,t] * nLHh[a,t] / nPop[a,t] + vHhOvf[a,t]) / (vWHh[aTot,t] + vOvf['hh',t])
                        + jvHhNFErest[a,t];
EQUATION E_vHhNFErest_tot[t];
E_vHhNFErest_tot[t]$(tx0[t] and t.val > 2015).. 
      vHhNFErest[aTot,t]  =E=  vOffTilHh[t] - vOffFraHh[t]
                           - vHhInvestx[aTot,t] + vSelvstKapInd[aTot,t]
                           + vHhFraVirk[t]
                           - vhhTilUdl[t]
                           + jvHhNFErest[aTot,t] ;
EQUATION E_jvHhNFErest_tot[t];
E_jvHhNFErest_tot[t]$(tx0[t] and t.val > 2015)..  jvHhNFErest[aTot,t]  =E=  sum(a, jvHhNFErest[a,t] * nPop[a,t]);
EQUATION E_vHhInvestx_tot[t];
E_vHhInvestx_tot[t]$(tx0[t]).. 
      vHhInvestx[aTot,t]  =E=  rHhInvestx[t] * vI_s[iTot,spTot,t];
EQUATION E_vSelvstKapInd_tot[t];
E_vSelvstKapInd_tot[t]$(tx0[t]).. 
      vSelvstKapInd[aTot,t]  =E=  rSelvstKapInd[t] * vEBITDA[sTot,t];
EQUATION E_vCLejeBolig_tot[t];
E_vCLejeBolig_tot[t]$(tx0[t])..  vCLejebolig[aTot,t]  =E=  pC['cBol',t] * qKLejeBolig[t-1] / qK['iB','bol',t-1] * qC['cBol',t];
EQUATION E_vCLejeBolig[a,t];
E_vCLejeBolig[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      vCLejeBolig[a,t] / vCLejeBolig[aTot,t]  =E=  rvCLejeBolig[a,t] / rvCLejeBolig[aTot,t];
EQUATION E_rvCLejeBolig_tot[t];
E_rvCLejeBolig_tot[t]$(tx0[t] and t.val > 2015)..  rvCLejeBolig[aTot,t]  =E=  sum(aa, rvCLejeBolig[aa,t] * nPop[aa,t]);
EQUATION E_qCR[a,t];
E_qCR[a,t]$(a18t100[a] and tx0e[t] and t.val > 2015).. 
      mUC[a,t]  =E=  (ErOverlev[a,t] * (1 + mrHhxAfk[t+1]) / EpC[t] * EmUC[a,t]
                 + ErOverlev[a,t] * dFormue[a,t]
                 + (1-ErOverlev[a,t]) * dArv[a,t]) * pC['cIkkeBol',t] / (1+rDisk[a,t]);
EQUATION E_qCR_tEnd[a,t];
E_qCR_tEnd[a,t]$(a18t100[a] and tend[t]).. 
      mUC[a,t]  =E=  (ErOverlev[a,t] * (1 + mrHhxAfk[t]) / EpC[t] * EmUC[a,t]
                 + ErOverlev[a,t] * dFormue[a,t]
                 + (1-ErOverlev[a,t]) * dArv[a,t]) * pC['cIkkeBol',t] / (1+rDisk[a,t]);
EQUATION E_qCR_tot[t];
E_qCR_tot[t]$(tx0[t] and t.val > 2015).. 
      qCR[aTot,t]  =E=  sum(a, (1-rHtM) * qCR[a,t] * nPop[a,t]) ;
EQUATION E_qCRxRef[a,t];
E_qCRxRef[a,t]$(tx0[t] and a18t100[a] and a.val <> 18 and t.val > 2016).. 
      qCRxRef[a,t]  =E=  qCR[a,t] / fHh[a,t] - rRef * qCR[a-1,t-1]/fq / fHh[a-1,t-1];
EQUATION E_qCRxRef_a18[a,t];
E_qCRxRef_a18[a,t]$(tx0[t] and a.val = 18 and t.val > 2016).. 
      qCRxRef[a,t]  =E=  qCR[a,t] - rRef * qCR[a,t]/fq;
EQUATION E_qCRxRef_2016[a,t];
E_qCRxRef_2016[a,t]$(tx0[t] and a18t100[a] and a.val <> 18 and t.val = 2016).. 
      qCRxRef[a,t]  =E=  qCR[a,t] / fHh[a,t] - rRef_2016 * qCR[a-1,t-1]/fq / fHh[a-1,t-1];
EQUATION E_qCRxRef_a18_2016[a,t];
E_qCRxRef_a18_2016[a,t]$(tx0[t] and a.val = 18 and t.val = 2016).. 
      qCRxRef[a,t]  =E=  qCR[a,t] - rRef_2016 * qCR[a,t]/fq;
EQUATION E_mUC[a,t];
E_mUC[a,t]$(tx0[t] and a18t100[a] and t.val > 2015).. 
      mUC[a,t]  =E=  qNytte[a,t]**(-eHh) * (qNytte[a,t] * (1-uBolig[a,t]) / qCRxRef[a,t])**(1/eNytte);
EQUATION E_qNytte[a,t];
E_qNytte[a,t]$(tx0[t] and a18t100[a] and t.val > 2015).. 
      qNytte[a,t]  =E=  (
        (1-uBolig[a,t])**(1/eNytte) * qCRxRef[a,t]**((eNytte-1)/eNytte)
        + uBolig[a,t]**(1/eNytte) * qBoligRxRef[a,t]**((eNytte-1)/eNytte)
      )**(eNytte/(eNytte-1));
EQUATION E_EmUC[a,t];
E_EmUC[a,t]$(18 <= a.val and a.val < 100 and tx0e[t] and t.val > 2015).. 
      EmUC[a,t]  =E=  (qNytte[a+1,t+1]*fq)**(-eHh) * ((1-uBolig[a+1,t+1]) * qNytte[a+1,t+1] / qCRxRef[a+1,t+1])**(1/eNytte);
EQUATION E_EmUC_tEnd[a,t];
E_EmUC_tEnd[a,t]$(18 <= a.val and a.val < 100 and tend[t]).. 
      EmUC[a,t]  =E=  (qNytte[a+1,t]*fq)**(-eHh) * ((1-uBolig[a+1,t]) * qNytte[a+1,t] / qCRxRef[a+1,t])**(1/eNytte);
EQUATION E_EmUC_aEnd[a,t];
E_EmUC_aEnd[a,t]$(a.val = 100 and tx0e[t] and t.val > 2015).. 
      EmUC[a,t]  =E=  (qNytte[a,t+1]*fq)**(-eHh) * ((1-uBolig[a,t+1]) * qNytte[a,t+1] / qCRxRef[a,t+1])**(1/eNytte);
EQUATION E_EmUC_aEnd_tEnd[a,t];
E_EmUC_aEnd_tEnd[a,t]$(a.val = 100 and tend[t]).. 
      EmUC[a,t]  =E=  (qNytte[a,t]*fq)**(-eHh) * ((1-uBolig[a,t]) * qNytte[a,t] / qCRxRef[a,t])**(1/eNytte);
EQUATION E_mUC_unge[a,t];
E_mUC_unge[a,t]$(tx0[t] and 15 <= a.val and a.val < 18  and t.val > 2015).. 
      mUC[a,t]  =E=  mUC['18',t];
EQUATION E_EpC[t];
E_EpC[t]$(tx0e[t] and t.val > 2015).. 
      EpC[t]  =E=  pC['cIkkeBol',t+1]*fp * (1 + jfEpC[t]);
EQUATION E_EpC_tEnd[t];
E_EpC_tEnd[t]$(tend[t]).. 
      EpC[t]  =E=  pC['cIkkeBol',t] * pC['cIkkeBol',t]/(pC['cIkkeBol',t-1]/fp) * (1 + jfEpC[t]);
EQUATION E_qCHtM[a,t];
E_qCHtM[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      pC['cIkkeBol',t] * qCHtM[a,t] + vCLejeBolig[a,t] + vBoligUdgiftHtM[a,t] 
       =E= 
      vHhInd[a,t]
      - (vPensUdb['Pens',a,t] - vPensIndb['Pens',a,t]) + vPensUdb['PensX',a,t] - vPensIndb['PensX',a,t] 
      + vtAktie[a,t]  
      + vtKapPens[a,t] 
      - vArvKorrektion[a,t]  
    ;
EQUATION E_qCHtM_tot[t];
E_qCHtM_tot[t]$(tx0[t] and t.val > 2015).. 
      qCHtM[atot,t]  =E=  sum(a, rHtM * qCHtM[a,t] * nPop[a,t]);
EQUATION E_qCHtMxRef[a,t];
E_qCHtMxRef[a,t]$(tx0[t] and a18t100[a] and a.val <> 18 and t.val > 2015).. 
      qCHtMxRef[a,t]  =E=  qCHtM[a,t] / fHh[a,t] - rRefHtM * qCHtM[a-1,t-1]/fq / fHh[a-1,t-1];
EQUATION E_qCHtMxRef_a18[a,t];
E_qCHtMxRef_a18[a,t]$(tx0[t] and a.val = 18 and t.val > 2015).. 
      qCHtMxRef[a,t]  =E=  qCHtM[a,t] - rRefHtM * qCHtM[a,t]/fq;
EQUATION E_qBoligHtMxRef[a,t];
E_qBoligHtMxRef[a,t]$(a18t100[a] and a.val <> 18 and tx0[t] and t.val > 2015).. 
      qBoligHtMxRef[a,t]  =E=  qBoligHtM[a,t] / fHh[a,t] - rRefBolig * rOverlev[a-1,t-1] * qBoligHtM[a-1,t-1]/fq / fHh[a-1,t-1];
EQUATION E_qBoligHtMxRef_a18[a,t];
E_qBoligHtMxRef_a18[a,t]$(a.val = 18 and tx0[t] and t.val > 2015).. 
      qBoligHtMxRef[a,t]  =E=  qBoligHtM[a,t] - rRefBolig * rOverlev[a-1,t-1] * qBoligHtM[a,t]/fq;
EQUATION E_qBoligHtM[a,t];
E_qBoligHtM[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      qBoligHtMxRef[a,t]  =E=  uBoligHtM[a,t] * qCHtMxRef[a,t] * (pBolig[t] / pC['cIkkeBol',t])**(-eNytte);
EQUATION E_vBoligUdgiftHtM[a,t];
E_vBoligUdgiftHtM[a,t]$(tx0[t] and t.val > 2015).. 
      vBoligUdgiftHtM[a,t]  =E=  (1-rRealKred2Bolig[a,t]) * vBoligHtM[a,t]
                             + fBoligUdgift[a,t] * vBoligHtM[a-1,t-1]/fv * fMigration[a,t];
EQUATION E_vBoligUdgiftHtM_tot[t];
E_vBoligUdgiftHtM_tot[t]$(tx0[t] and t.val > 2015).. 
      vBoligUdgiftHtM[aTot,t]  =E=  rHtM * sum(a, vBoligUdgiftHtM[a,t] * nPop[a,t]);
EQUATION E_vBoligHtM[a,t];
E_vBoligHtM[a,t]$(a18t100[a] and tx0[t])..  vBoligHtM[a,t]  =E=  pBolig[t] * qBoligHtM[a,t];
EQUATION E_vBoligHtM_tot[t];
E_vBoligHtM_tot[t]$(tx0[t])..  vBoligHtM[aTot,t]  =E=  pBolig[t] * qBoligHtM[aTot,t];
EQUATION E_qC_a[a,t];
E_qC_a[a,t]$(a18t100[a] and tx0[t] and t.val > 2015)..  qC_a[a,t]  =E=  (1-rHtM) * qCR[a,t] + rHtM * qCHtM[a,t];
EQUATION E_vC_a[a,t];
E_vC_a[a,t]$(a18t100[a] and tx0[t] and t.val > 2015)..  vC_a[a,t]  =E=  pC['cIkkeBol',t] * qC_a[a,t];
EQUATION E_qBolig[a,t];
E_qBolig[a,t]$(a18t100[a] and tx0[t] and t.val > 2015)..  qBolig[a,t]  =E=  (1-rHtM) * qBoligR[a,t] + rHtM * qBoligHtM[a,t];
EQUATION E_vBolig[a,t];
E_vBolig[a,t]$(a18t100[a] and tx0[t] and t.val > 2015)..  vBolig[a,t]  =E=  pBolig[t] * qBolig[a,t];
EQUATION E_qBoligR_tot[t];
E_qBoligR_tot[t]$(tx0[t] and t.val > 2015)..  qBoligR[aTot,t]  =E=  sum(a, (1-rHtM) * qBoligR[a,t] * nPop[a,t]);
EQUATION E_qBoligHtM_tot[t];
E_qBoligHtM_tot[t]$(tx0[t] and t.val > 2015)..  qBoligHtM[aTot,t]  =E=  sum(a, rHtM * qBoligHtM[a,t] * nPop[a,t]);
EQUATION E_qBolig_tot[t];
E_qBolig_tot[t]$(tx0[t] and t.val > 2015)..  qBolig[aTot,t]  =E=  qBoligR[aTot,t] + qBoligHtM[aTot,t];
EQUATION E_vBolig_tot[t];
E_vBolig_tot[t]$(tx0[t] and t.val > 2015)..  vBolig[aTot,t]  =E=  sum(a, vBolig[a,t] * nPop[a,t]);
EQUATION E_qC_cIkkeBol[t];
E_qC_cIkkeBol[t]$(tx0[t] and t.val > 2015)..  qC['cIkkeBol',t]  =E=  sum(a, qC_a[a,t] * nPop[a,t]);
EQUATION E_pC_nests[cnest,t];
E_pC_nests[cnest,t]$(tx0[t])..  pC[cNest,t] * qC[cNest,t]  =E=  sum(c$c_2c[cNest,c], pC[c,t] * qC[c,t]);
EQUATION E_qC[c_,cnest,t];
E_qC[c_,cnest,t]$(tx0[t] and cnest2c_[cnest,c_]).. 
      qC[c_,t]  =E=  uC[c_,t] * qC[cNest,t] * (pC[cNest,t] / pC[c_,t])**eC(cNest);
EQUATION E_uC[c_,cnest,t];
E_uC[c_,cnest,t]$(tx0[t] and cnest2c_[cnest,c_]).. 
      uC[c_,t]  =E=  fuCnest[cNest,t] * uC0[c_,t] / sum(cc_$cNest2c_[cNest,cc_], uC0[cc_,t]);
EQUATION E_qBoligR[a,t];
E_qBoligR[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      mUBolig[a,t]**eNytte * qBoligRxRef[a,t]  =E=  qNytte[a,t]**(-eHh*eNytte) * qNytte[a,t] * uBolig[a,t] ;
EQUATION E_qBoligRxRef[a,t];
E_qBoligRxRef[a,t]$(a18t100[a] and a.val <> 18 and tx0[t] and t.val > 2015).. 
      qBoligRxRef[a,t]  =E=  qBoligR[a,t] / fHh[a,t] - rRefBolig * rOverlev[a-1,t-1] * qBoligR[a-1,t-1]/fq / fHh[a-1,t-1];
EQUATION E_qBoligRxRef_a18[a,t];
E_qBoligRxRef_a18[a,t]$(a.val = 18 and tx0[t] and t.val > 2015).. 
      qBoligRxRef[a,t]  =E=  qBoligR[a,t] - rRefBolig * rOverlev[a-1,t-1] * qBoligR[a,t]/fq;
EQUATION E_pBoligUC[a,t];
E_pBoligUC[a,t]$(a18t100[a] and tx0e[t] and t.val>2015).. 
      pBoligUC[a,t]  =E=  ( (1-rRealKred2Bolig[a,t]) * mrHhxAfk[t+1] 
                         + rRealKred2Bolig[a,t] * mrRealKredAfk[t+1] 
                         + tEjd[t+1] 
                         + rAfskr['iB','bol',t+1] 
                         + rBoligOmkRest[t+1] 
                         - EpLand[t] * qLandSalg[t+1]*fq / vBolig[atot,t] 
                         - (1-rAfskr['iB','bol',t+1]) * (EpBolig[t] - pBolig[t]) / pBolig[t] 
                         + rBoligPrem[t+1] 
                        ) * pBolig[t] / (1+mrHhxAfk[t+1]);
EQUATION E_EpLand[t];
E_EpLand[t]$(tx0e[t] and t.val>2015).. 
      EpLand[t]  =E=  (1-fBoligGevinst) * pLand[t] * (1 + EpLandInfl[t]) + fBoligGevinst * pLand[t+1]*fp;
EQUATION E_EpBolig[t];
E_EpBolig[t]$(tx0e[t] and t.val>2015).. 
      EpBolig[t]  =E=  (1-fBoligGevinst) * pBolig[t] * (1 + EpBoligInfl[t]) + fBoligGevinst * pBolig[t+1]*fp;
EQUATION E_qLandSalg[t];
E_qLandSalg[t]$(tx0[t]).. 
      qLandSalg[t]  =E=  qLand[t] - (1 - rAfskr['iB','bol',t]) * qLand[t-1]/fq;
EQUATION E_mUBolig[a,t];
E_mUBolig[a,t]$(a18t100[a] and tx0e[t] and t.val > 2015).. 
      mUBolig[a,t]  =E=  EmUC[a,t] * ErOverlev[a,t] / (1+rDisk[a,t]) * pBoligUC[a,t] * (1+mrHhxAfk[t+1]) / EpC[t];
EQUATION E_mUBolig_tEnd[a,t];
E_mUBolig_tEnd[a,t]$(a18t100[a] and tend[t]).. 
      mUBolig[a,t] / mUC[a,t]  =E=  mUBolig[a,t-1] / mUC[a,t-1];
EQUATION E_qYBolig[t];
E_qYBolig[t]$(tx0[t]).. 
      qYBolig[t]  =E=  qBolig[aTot,t] - (1 - rAfskr['iB','bol',t]) * qBolig[aTot,t-1]/fq + qIBoligInstOmk[t];
EQUATION E_qIBoligInstOmk[t];
E_qIBoligInstOmk[t]$(tx0[t]).. 
      qIBoligInstOmk[t]  =E=  uIBoligInstOmk/2 * sqr(qIBolig[t] / (qIBolig[t-1]/fq) - fIBoligInstOmk[t]) * qIBolig[t-1]/fq;
EQUATION E_dqIBoligInstOmk[t];
E_dqIBoligInstOmk[t]$(tx0e[t]).. 
      dqIBoligInstOmk[t]  =E=  
        uIBoligInstOmk * (
          qIBolig[t] / (qIBolig[t-1]/fq) - fIBoligInstOmk[t]
        + 1/(1+rVirkDisk['bol',t+1])/2 * sqr(qIBolig[t+1]*fq / qIBolig[t] - fIBoligInstOmk[t+1])
        - 1/(1+rVirkDisk['bol',t+1]) * (qIBolig[t+1]*fq / qIBolig[t] - fIBoligInstOmk[t+1]) * qIBolig[t+1]*fq / qIBolig[t]
      );
EQUATION E_dqIBoligInstOmk_tEnd[t];
E_dqIBoligInstOmk_tEnd[t]$(tend[t]).. 
      dqIBoligInstOmk[t]  =E=  uIBoligInstOmk * (qIBolig[t] / (qIBolig[t-1]/fq) - fIBoligInstOmk[t]);
EQUATION E_qIBolig[t];
E_qIBolig[t]$(tx0[t]).. 
      qIBolig[t]  =E=  uIBolig[t] * qYBolig[t] * (pBolig[t] / (pI_s['iB','bol',t] + dqIBoligInstOmk[t] * pBolig[t]))**eBolig;
EQUATION E_pLand[t];
E_pLand[t]$(tx0[t]).. 
      qLandSalg[t]  =E=  uLand[t] * qYBolig[t] * (pBolig[t] / pLand[t])**eBolig;
EQUATION E_pBolig[t];
E_pBolig[t]$(tx0[t]).. 
      pBolig[t] * qYBolig[t]  =E=  pLand[t] * qLandSalg[t] 
                               + (pI_s['iB','bol',t] + dqIBoligInstOmk[t] * pBolig[t]) 
                               * (qKBolig[t] - (1 - rAfskr['iB','bol',t]) * qKBolig[t-1]/fq);
EQUATION E_vIBolig[t];
E_vIBolig[t]$(tx0[t])..  vIBolig[t]  =E=  pI_s['iB','bol',t] * qIBolig[t];
EQUATION E_qKBolig[t];
E_qKBolig[t]$(tx0[t]).. 
      qKBolig[t]  =E=  (1-rAfskr['iB','bol',t]) * qKBolig[t-1]/fq + qIBolig[t];
EQUATION E_vKBolig[t];
E_vKBolig[t]$(tx0[t])..  vKBolig[t]  =E=  pI_s['iB','bol',t] * qKBolig[t];
EQUATION E_qK_bol[t];
E_qK_bol[t]$(tx0[t])..  qK['iB','bol',t]  =E=  qKBolig[t] + qKLejeBolig[t];
EQUATION E_rKLeje2Bolig[t];
E_rKLeje2Bolig[t]$(tx0[t])..  rKLeje2Bolig[t]  =E=  qKLejeBolig[t] / qKBolig[t];
EQUATION E_vArvGivet[a,t];
E_vArvGivet[a,t]$(tx0[t] and t.val > 2015).. 
      vArvGivet[a,t]  =E=  (vHhx[a-1,t-1]/fv + vHhxAfk[a,t] - fBoligUdgift[a,t] * vBolig[a-1,t-1]/fv) * rArvKorrektion[a]
                       - vtDoedsbo[a,t] + vPensArv['pens',a,t] - vtKapPensArv[a,t];
EQUATION E_vArvKorrektion[a,t];
E_vArvKorrektion[a,t]$(tx0[t] and a0t100[a] and t.val > 2015).. 
      vArvKorrektion[a,t]  =E=  (vHhx[a-1,t-1]/fv + vHhxAfk[a,t] - fBoligUdgift[a,t] * vBolig[a-1,t-1]/fv)
                            * (1-rArvKorrektion[a]) * (1-rOverlev[a-1,t-1]) * nPop[a-1,t-1] / nPop[a,t];
EQUATION E_vArv_aTot[t];
E_vArv_aTot[t]$(tx0[t] and t.val > 2015)..  vArv[aTot,t]  =E=  sum(a, vArvGivet[a,t] * (1-rOverlev[a-1,t-1]) * nPop[a-1,t-1]);
EQUATION E_vArvKorrektion_aTot[t];
E_vArvKorrektion_aTot[t]$(tx0[t] and t.val > 2015).. 
      vArvKorrektion[aTot,t]  =E=  sum(a, vArvKorrektion[a,t] * nPop[a,t]);
EQUATION E_vArv[a,t];
E_vArv[a,t]$(tx0[t] and t.val > 2015)..  vArv[a,t]  =E=  rArv[a,t] * vArv[aTot,t] / nPop[aTot,t];
EQUATION E_qArvBase[a,t];
E_qArvBase[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      qArvBase[a,t]  =E=  (1-tArv[t+1]) * (vHhx[a,t]/(1-rHtM)
                                       + pBolig[t] * qBoligR[a,t] * (1 - rRealKred2Bolig[a,t])
                                       + (vPensArv['Pens',a,t] - rHtM * vPensArv['PensX',a,t]) / (1-rHtM)  
                                       ) / EpC[t] + cArv[a,t] * qBVT2hLsnit[t]/qBVT2hLsnit[tBase];
EQUATION E_qFormueBase[a,t];
E_qFormueBase[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      qFormueBase[a,t]  =E=  (vHhx[a,t]/(1-rHtM)
                            + pBolig[t] * qBoligR[a,t] * (rMaxRealkred[t] - rRealKred2Bolig[a,t])
                            + ((1-tKapPens[t]) * vHh['Kap',a,t] + vHh['Alder',a,t]) / (1-rHtM)
                           ) / EpC[t] + cFormue[a,t] * qBVT2hLsnit[t]/qBVT2hLsnit[tBase];
EQUATION E_dFormue[a,t];
E_dFormue[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      dFormue[a,t]  =E=  uFormue[a,t] / EpC[t] * qFormueBase[a,t]**(-eHh);
EQUATION E_dArv[a,t];
E_dArv[a,t]$(a18t100[a] and tx0e[t] and t.val > 2015).. 
      dArv[a,t]  =E=  uArv[a,t] * (1-tArv[t+1]) / EpC[t] * qArvBase[a,t]**(-eHh);
EQUATION E_dArv_tEnd[a,t];
E_dArv_tEnd[a,t]$(a18t100[a] and tend[t]).. 
      dArv[a,t]  =E=  uArv[a,t] * (1-tArv[t]) / EpC[t] * qArvBase[a,t]**(-eHh);
EQUATION E_vtArv[a,t];
E_vtArv[a,t]$(tx0[t] and t.val > 2015).. 
      vtArv[a,t]  =E=  tArv[t] * vArv[a,t];
EQUATION E_vtArv_tot[t];
E_vtArv_tot[t]$(tx0[t] and t.val > 2015)..   vtArv[aTot,t]  =E=  tArv[t] * vArv[aTot,t];
EQUATION E_vBoernFraHh[a,t];
E_vBoernFraHh[a,t]$(tx0[t] and a0t17[a] and t.val > 2015).. 
      vHhx[a,t]  =E=  (uBoernFraHh[a,t]) * vHhx[aTot,t] / nPop[a,t];
EQUATION E_vHhTilBorn_aTot[t];
E_vHhTilBorn_aTot[t]$(tx0[t] and t.val > 2015)..  vHhTilBoern[aTot,t]  =E=  sum(aa, vBoernFraHh[aa,t] * nPop[aa,t]);
EQUATION E_vHhTilBoern[a,t];
E_vHhTilBoern[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      vHhTilBoern[a,t]  =E=  rBoern[a,t] * vHhTilBoern[aTot,t];
EQUATION E_qBiler[t];
E_qBiler[t]$(tx0[t])..  qBiler[t]  =E=  (1-rBilAfskr[t]) * qBiler[t-1]/fq + qC['cBil',t];
EQUATION E_rDisk[a,t];
E_rDisk[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      rDisk[a,t]  =E=  rDisk_t[t] + rDisk_a[a,t];
EQUATION E_uBolig[a,t];
E_uBolig[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      uBolig[a,t]  =E=  uBolig_t[t] + uBolig_a[a,t];
EQUATION E_fHh[a,t];
E_fHh[a,t]$(a18t100[a] and tx0[t] and t.val > 2015)..  fHh[a,t]  =E=  1 + 0.5 * rBoern[a,t] * nPop['a0t17',t];
EQUATION E_uBoligHtM[a,t];
E_uBoligHtM[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      uBoligHtM[a,t]  =E=  uBoligHtM_t[t] * uBoligHtM_a[a,t] * uBoligHtM_match;
EQUATION E_uBoernFraHh[a,t];
E_uBoernFraHh[a,t]$(a0t17[a] and tx0[t] and t.val > 2015).. 
      uBoernFraHh[a,t]  =E=  uBoernFraHh_t[t] + uBoernFraHh_a[a,t];
EQUATION E_fMigration[a,t];
E_fMigration[a,t]$(tx0[t] and a.val <= 100 and t.val > 2015).. 
      fMigration[a,t]  =E=  rOverlev[a-1,t-1] * nPop[a-1,t-1] / nPop[a,t];
EQUATION E_fMigration_aEnd[a,t];
E_fMigration_aEnd[a,t]$(tx0[t] and a.val > 100 and t.val > 2015).. 
      fMigration[a,t]  =E=  1;
EQUATION E_fMigration_tot[t];
E_fMigration_tot[t]$(tx0[t] and t.val > 1991).. 
      fMigration[aTot,t]  =E=  rOverlev[aTot,t-1] * nPop[aTot,t-1] / nPop[aTot,t];

# ----------------------------------------------------------------------------------------------------
#  Define B_consumers model
# ----------------------------------------------------------------------------------------------------
Model B_consumers /
E_vHhx, E_jvHhx_aTot, E_vHhx_aTot, E_vtHhx, E_vtHhx_tot, E_vBoligUdgift, E_fBoligUdgift, E_vBoligUdgift_tot, E_vBoligUdgiftArv, E_vHhNFErest, E_vHhNFErest_tot, E_jvHhNFErest_tot, E_vHhInvestx_tot, E_vSelvstKapInd_tot, E_vCLejeBolig_tot, E_vCLejeBolig, E_rvCLejeBolig_tot, E_qCR, E_qCR_tEnd, E_qCR_tot, E_qCRxRef, E_qCRxRef_a18, E_qCRxRef_2016, E_qCRxRef_a18_2016, E_mUC, E_qNytte, E_EmUC, E_EmUC_tEnd, E_EmUC_aEnd, E_EmUC_aEnd_tEnd, E_mUC_unge, E_EpC, E_EpC_tEnd, E_qCHtM, E_qCHtM_tot, E_qCHtMxRef, E_qCHtMxRef_a18, E_qBoligHtMxRef, E_qBoligHtMxRef_a18, E_qBoligHtM, E_vBoligUdgiftHtM, E_vBoligUdgiftHtM_tot, E_vBoligHtM, E_vBoligHtM_tot, E_qC_a, E_vC_a, E_qBolig, E_vBolig, E_qBoligR_tot, E_qBoligHtM_tot, E_qBolig_tot, E_vBolig_tot, E_qC_cIkkeBol, E_pC_nests, E_qC, E_uC, E_qBoligR, E_qBoligRxRef, E_qBoligRxRef_a18, E_pBoligUC, E_EpLand, E_EpBolig, E_qLandSalg, E_mUBolig, E_mUBolig_tEnd, E_qYBolig, E_qIBoligInstOmk, E_dqIBoligInstOmk, E_dqIBoligInstOmk_tEnd, E_qIBolig, E_pLand, E_pBolig, E_vIBolig, E_qKBolig, E_vKBolig, E_qK_bol, E_rKLeje2Bolig, E_vArvGivet, E_vArvKorrektion, E_vArv_aTot, E_vArvKorrektion_aTot, E_vArv, E_qArvBase, E_qFormueBase, E_dFormue, E_dArv, E_dArv_tEnd, E_vtArv, E_vtArv_tot, E_vBoernFraHh, E_vHhTilBorn_aTot, E_vHhTilBoern, E_qBiler, E_rDisk, E_uBolig, E_fHh, E_uBoligHtM, E_uBoernFraHh, E_fMigration, E_fMigration_aEnd, E_fMigration_tot
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\government.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Government aggregation module
# - revenues and expenses are in GovRevenues and GovExpenses respectively
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------


# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# --------------------------------------------B_government--------------------------------------------
#  Initialize B_government equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_vSatsIndeks[t];
E_vSatsIndeks[t]$(tx0[t]).. 
      vSatsIndeks[t]  =E=  vSatsIndeks[t-1]/fv 
                      * (vWHh[aTot,t-2]/nLHh[aTot,t-2]) / (vWHh[aTot,t-3]/nLHh[aTot,t-3]) * fv * (1 + jfSatsIndeks[t]);
EQUATION E_vPrimSaldo[t];
E_vPrimSaldo[t]$(tx0[t])..  vPrimSaldo[t]  =E=  vOffPrimInd[t] - vOffPrimUd[t];
EQUATION E_vSaldo[t];
E_vSaldo[t]$(tx0[t])..  vSaldo[t]  =E=  vPrimSaldo[t] + vOffNetRenter[t];
EQUATION E_vOff_NetFin[t];
E_vOff_NetFin[t]$(tx0[t])..  vOff['NetFin',t]  =E=  vOff['NetFin',t-1]/fv + vSaldo[t] + vOffOmv[t];
EQUATION E_vOffNetFormue[t];
E_vOffNetFormue[t]$(tx0[t])..  vOffNetFormue[t]  =E=  vOff['NetFin',t] - vOffFonde[t];
EQUATION E_vOffAkt[t];
E_vOffAkt[t]$(tx0[t])..  vOffAkt[t]  =E=  rOffAkt2BNP[t] * vBNP[t];
EQUATION E_vOffPas[t];
E_vOffPas[t]$(tx0[t])..  vOffNetFormue[t]  =E=  vOffAkt[t] - vOffPas[t];
EQUATION E_vOffNetRenter[t];
E_vOffNetRenter[t]$(tx0[t])..  vOffNetRenter[t]  =E=  vOffRenteInd[t] - vOffRenteUd[t];
EQUATION E_vOffRenteInd[t];
E_vOffRenteInd[t]$(tx0[t] and t.val > 1995)..  vOffRenteInd[t]  =E=  rOffRenteInd[t] * vOffAkt[t-1]/fv;
EQUATION E_vOffRenteUd[t];
E_vOffRenteUd[t]$(tx0[t] and t.val > 1995)..  vOffRenteUd[t]  =E=  rOffRenteUd[t] * vOffPas[t-1]/fv;
EQUATION E_vNROffNetRenter[t];
E_vNROffNetRenter[t]$(tx0[t]).. 
      vNROffNetRenter[t]  =E=  vOffNetRenter[t] + vJordrente[t] + vOffVirk[t];
EQUATION E_rOffRenteInd[t];
E_rOffRenteInd[t]$(tx0[t] and t.val > 1995).. 
      rOffRenteInd[t]  =E=  sum(akt, rOffAkt[akt,t-1] * rRente[akt,t]) + jrOffRenteInd[t];
EQUATION E_rOffRenteUd[t];
E_rOffRenteUd[t]$(tx0[t] and t.val > 1995).. 
      rOffRenteUd[t]  =E=  rOffRealKred2Pas[t-1] * rRente['RealKred',t] 
                       + (1-rOffRealKred2Pas[t-1]) * rRente['Obl',t] + jrOffRenteUd[t];
EQUATION E_vOffOmv[t];
E_vOffOmv[t]$(tx0[t]).. 
      vOffOmv[t]  =E=  sum(akt, vOff[akt,t-1]/fv * rOmv[akt,t]) 
                   - sum(pas, vOff[pas,t-1]/fv * rOmv[pas,t]) + jvOffOmv[t];
EQUATION E_vOff_akt[akt,t];
E_vOff_akt[akt,t]$(tx0[t] and (sameas['indlaktier',akt] or sameas['udlaktier',akt] or sameas['bank',akt]) and t.val > 1994).. 
      vOff[akt,t]  =E=  rOffAkt[akt,t] * (vOffAkt[t] + vOffFonde[t]);
EQUATION E_vOff_RealKred[t];
E_vOff_RealKred[t]$(tx0[t] and t.val > 1994).. 
      vOff['RealKred',t]  =E=  rOffRealKred2Pas[t] * vOffPas[t];
EQUATION E_vOff_Obl[t];
E_vOff_Obl[t]$(tx0[t] and t.val > 1994).. 
      vOff['Obl',t]  =E=  rOffAkt['Obl',t] * (vOffAkt[t] + vOffFonde[t]) - (1-rOffRealKred2Pas[t]) * vOffPas[t];
EQUATION E_rHBI[t];
E_rHBI[t]$(tx0[t]).. 
      rHBI[t]  =E=  (nvPrimSaldo[t] + nvGLukning[t] - nvtLukning[t] + vOffNetFormue[t-1]/fv * fHBIDisk[t]) / nvBNP[t];
EQUATION E_fHBIDisk[t];
E_fHBIDisk[t]$(tx0[t]).. 
      fHBIDisk[t]  =E=  fHBIDisk[t-1] * fv / (1+rOffRenteUd[t]);
EQUATION E_nvPrimSaldo[t];
E_nvPrimSaldo[t]$(tx0e[t]).. 
      nvPrimSaldo[t]  =E=  vPrimSaldo[t] * fHBIDisk[t] + nvPrimSaldo[t+1];
EQUATION E_nvPrimSaldo_tEnd[t];
E_nvPrimSaldo_tEnd[t]$(tend[t]).. 
      nvPrimSaldo[t]  =E=  vPrimSaldo[t] * fHBIDisk[t] / ((1+rOffRenteUd[t]) / fv - 1);
EQUATION E_nvtLukning[t];
E_nvtLukning[t]$(tx0e[t]).. 
      nvtLukning[t]  =E=  vtLukning[aTot,t] * fHBIDisk[t] + nvtLukning[t+1];
EQUATION E_nvtLukning_tEnd[t];
E_nvtLukning_tEnd[t]$(tend[t]).. 
      nvtLukning[t]  =E=  vtLukning[aTot,t] * fHBIDisk[t] / ((1+rOffRenteUd[t]) / fv - 1);
EQUATION E_nvGLukning[t];
E_nvGLukning[t]$(tx0e[t]).. 
      nvGLukning[t]  =E=  vGLukning[t] * fHBIDisk[t] + nvGLukning[t+1];
EQUATION E_nvGLukning_tEnd[t];
E_nvGLukning_tEnd[t]$(tend[t]).. 
      nvGLukning[t]  =E=  vGLukning[t] * fHBIDisk[t] / ((1+rOffRenteUd[t]) / fv - 1);
EQUATION E_nvBNP[t];
E_nvBNP[t]$(tx0e[t]).. 
      nvBNP[t]  =E=  vBNP[t] * fHBIDisk[t] + nvBNP[t+1];
EQUATION E_nvBNP_tEnd[t];
E_nvBNP_tEnd[t]$(tend[t]).. 
      nvBNP[t]  =E=  vBNP[t] * fHBIDisk[t] / ((1+rOffRenteUd[t]) / fv - 1);
EQUATION E_vOffY2C[t];
E_vOffY2C[t]$(tx0[t])..  vOffY2C[t]  =E=  rOffY2C[t] * vG[gTot,t];

# ----------------------------------------------------------------------------------------------------
#  Define B_government model
# ----------------------------------------------------------------------------------------------------
Model B_government /
E_vSatsIndeks, E_vPrimSaldo, E_vSaldo, E_vOff_NetFin, E_vOffNetFormue, E_vOffAkt, E_vOffPas, E_vOffNetRenter, E_vOffRenteInd, E_vOffRenteUd, E_vNROffNetRenter, E_rOffRenteInd, E_rOffRenteUd, E_vOffOmv, E_vOff_akt, E_vOff_RealKred, E_vOff_Obl, E_rHBI, E_fHBIDisk, E_nvPrimSaldo, E_nvPrimSaldo_tEnd, E_nvtLukning, E_nvtLukning_tEnd, E_nvGLukning, E_nvGLukning_tEnd, E_nvBNP, E_nvBNP_tEnd, E_vOffY2C
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\GovRevenues.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Government revenues
# - See also taxes module
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# --------------------------------------------B_GovRevenues-------------------------------------------
#  Initialize B_GovRevenues equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_vOffPrimInd[t];
E_vOffPrimInd[t]$(tx0[t])..  vOffPrimInd[t]  =E=  vtDirekte[t] + vtIndirekte[t] + vOffIndRest[t];
EQUATION E_vtDirekte[t];
E_vtDirekte[t]$(tx0[t]).. 
      vtDirekte[t]  =E=  vtKilde[t] + vtHhAM[aTot,t] + vtPersRest[aTot,t]
                     + vtHhVaegt[aTot,t] + vtSelskab[sTot,t] + vtPAL[t] + vtMedie[t] + vtDirekteRest[t] + vtLukning[aTot,t];
EQUATION E_vtKilde[t];
E_vtKilde[t]$(tx0[t]).. 
      vtKilde[t]  =E=  vtBund[aTot,t] + vtTop[aTot,t] + vtKommune[aTot,t] + vtEjd[aTot,t] + vtAktie[aTot,t] 
                   + vtVirksomhed[aTot,t] + vtDoedsbo[aTot,t] + vtKildeRest[t];
EQUATION E_vtBund[a,t];
E_vtBund[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vtBund[a,t]  =E=  ftBund[a,t] * tBund[t] * (vPersInd[a,t] + vNetKapIndPos[a,t] - vPersFradrag[a,t]);
EQUATION E_ftBund_tot[t];
E_ftBund_tot[t]$(tx0[t] and t.val > 2015).. 
      vtBund[aTot,t]  =E=  sum(a, vtBund[a,t] * nPop[a,t]);
EQUATION E_vtBund_tot[t];
E_vtBund_tot[t]$(tx0[t] and t.val > 2015).. 
      vtBund[aTot,t]  =E=  ftBund[aTot,t] * tBund[t] * (vPersInd[aTot,t] + vNetKapIndPos[aTot,t] - vPersFradrag[aTot,t]);
EQUATION E_vtTop[a,t];
E_vtTop[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vtTop[a,t]  =E=  tTop[t] * (vPersInd[a,t] + vNetKapIndPos[a,t]) * rTopSkatInd[a,t];
EQUATION E_rTopSkatInd_tot[t];
E_rTopSkatInd_tot[t]$(tx0[t] and t.val > 2015)..  vtTop[aTot,t]  =E=  sum(a, vtTop[a,t] * nPop[a,t]);
EQUATION E_vtTop_tot[t];
E_vtTop_tot[t]$(tx0[t] and t.val > 2015).. 
      vtTop[aTot,t]  =E=  tTop[t] * (vPersInd[aTot,t] + vNetKapIndPos[aTot,t]) * rTopSkatInd[aTot,t];
EQUATION E_vtKommune[a,t];
E_vtKommune[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vtKommune[a,t]  =E=  tKommune[t] * ftKommune[a,t] * (vSkatteplInd[a,t] - vPersFradrag[a,t]);
EQUATION E_ftKommune_tot[t];
E_ftKommune_tot[t]$(tx0[t] and t.val > 2015)..  vtKommune[aTot,t]  =E=  sum(a, vtKommune[a,t] * nPop[a,t]);
EQUATION E_vtKommune_tot[t];
E_vtKommune_tot[t]$(tx0[t] and t.val > 2015).. 
      vtKommune[aTot,t]  =E=  tKommune[t] * ftKommune[aTot,t] * (vSkatteplInd[aTot,t] - vPersFradrag[aTot,t]);
EQUATION E_vtEjd[a,t];
E_vtEjd[a,t]$(tx0[t] and a0t100[a] and t.val > 2015).. 
      vtEjd[a,t]  =E=  tEjd[t] * vBolig[a-1,t-1]/fv * fMigration[a,t];
EQUATION E_fvtEjd_tot[t];
E_fvtEjd_tot[t]$(tx0[t] and t.val > 2015).. 
      vtEjd[aTot,t]  =E=  tEjd[t] * sum(a, vBolig[a-1,t-1]/fv * fMigration[a,t] * nPop[a,t]
                                       + vBolig[a-1,t-1]/fv * (1-rOverlev[a-1,t-1]) * nPop[a-1,t-1]);
EQUATION E_vtEjd_tot[t];
E_vtEjd_tot[t]$(tx0[t] and t.val > 2015)..  vtEjd[aTot,t]  =E=  tEjd[t] * fvtEjd[t] * vBolig[aTot,t-1]/fv;
EQUATION E_vtAktie[a,t];
E_vtAktie[a,t]$(a0t100[a] and tx0[t] and t.val > 2015).. 
      vtAktie[a,t]  =E=  tAktie[t] * (  vRealiseretAktieOmv[a,t]
                                    + rRente['IndlAktier',t] * vHh['IndlAktier',a-1,t-1]/fv
                                    + rRente['UdlAktier',t] * vHh['UdlAktier',a-1,t-1]/fv) * fMigration[a,t];
EQUATION E_fvtAktie_tot[t];
E_fvtAktie_tot[t]$(tx0[t] and t.val > 2015)..  vtAktie[aTot,t]  =E=  sum(a, vtAktie[a,t] * nPop[a,t]);
EQUATION E_vRealiseretAktieOmv[a,t];
E_vRealiseretAktieOmv[a,t]$(a0t100[a] and tx0[t] and t.val > 2015).. 
      vRealiseretAktieOmv[a,t]  =E=  rRealiseringAktieOmv[t] * vUrealiseretAktieOmv[t]
                                 * (vHh['IndlAktier',a-1,t-1] + vHh['UdlAktier',a-1,t-1])
                                 / (vHh['IndlAktier',aTot,t-1] + vHh['UdlAktier',aTot,t-1])
                                 + (1-rRealiseringAktieOmv[t]) * vRealiseretAktieOmv[a-1,t-1]/fv;
EQUATION E_vRealiseretAktieOmv_aTot[t];
E_vRealiseretAktieOmv_aTot[t]$(tx0[t] and t.val > 2015).. 
      vRealiseretAktieOmv[aTot,t]  =E=  sum(a, nPop[a,t] * vRealiseretAktieOmv[a,t]);
EQUATION E_vRealiseretAktieOmv_aTot_x2015[t];
E_vRealiseretAktieOmv_aTot_x2015[t]$(tx0[t] and t.val <= 2015).. 
      vRealiseretAktieOmv[aTot,t]  =E=  rRealiseringAktieOmv[t] * vUrealiseretAktieOmv[t]
                                    + (1-rRealiseringAktieOmv[t]) * vRealiseretAktieOmv[aTot,t-1]/fv;
EQUATION E_vUrealiseretAktieOmv[t];
E_vUrealiseretAktieOmv[t]$(tx0[t]).. 
      vUrealiseretAktieOmv[t]  =E=  vUrealiseretAktieOmv[t-1]/fv
                                - vRealiseretAktieOmv[aTot,t]
                                + rOmv['IndlAktier',t] * vHh['IndlAktier',aTot,t-1]/fv
                                + rOmv['UdlAktier',t] * vHh['UdlAktier',aTot,t-1]/fv;
EQUATION E_vtAktie_tot[t];
E_vtAktie_tot[t]$(tx0[t] and t.val > 2015).. 
      vtAktie[aTot,t]  =E=  tAktie[t] * (vRealiseretAktieOmv[aTot,t]
                                     + rRente['IndlAktier',t] * vHh['IndlAktier',aTot,t-1]/fv
                                     + rRente['UdlAktier',t] * vHh['UdlAktier',aTot,t-1]/fv
                                     ) * rOverlev[aTot,t-1] * fvtAktie[t];
EQUATION E_vtVirksomhed[a,t];
E_vtVirksomhed[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vtVirksomhed[a,t]  =E=  tVirksomhed[t] * vEBT[sTot,t] * (vWHh[a,t] * nLHh[a,t]) / vWHh[aTot,t] / nPop[a,t];
EQUATION E_vtVirksomhed_tot[t];
E_vtVirksomhed_tot[t]$(tx0[t] and t.val > 1986)..  vtVirksomhed[aTot,t]  =E=  tVirksomhed[t] * vEBT[sTot,t];
EQUATION E_vtDoedsbo[a,t];
E_vtDoedsbo[a,t]$(tx0[t] and t.val > 2015).. 
      vtDoedsbo[a,t]  =E=  tDoedsbo[t] 
                         * (vRealiseretAktieOmv[a,t] 
                            + rRente['IndlAktier',t] * vHh['IndlAktier',a-1,t-1]/fv 
                            + rRente['UdlAktier',t]  * vHh['UdlAktier',a-1,t-1]/fv 
                            + rNet2KapIndPos[a,t] * rRente['Obl',t]  * vHh['Obl',a-1,t-1]/fv
                            + rNet2KapIndPos[a,t] * rRente['Bank',t] * vHh['Bank',a-1,t-1]/fv) * rArvKorrektion[a];
EQUATION E_vtDoedsbo_tot[t];
E_vtDoedsbo_tot[t]$(tx0[t] and t.val > 2015).. 
      vtDoedsbo[aTot,t]  =E=  tDoedsbo[t] * (1-rOverlev[aTot,t-1])
                           * (vRealiseretAktieOmv[aTot,t] 
                              + rRente['IndlAktier',t] * vHh['IndlAktier',aTot,t-1]/fv 
                              + rRente['UdlAktier',t]  * vHh['UdlAktier',aTot,t-1]/fv  
                              + rNet2KapIndPos[aTot,t] * rRente['Obl',t]  * vHh['Obl',aTot,t-1]/fv
                              + rNet2KapIndPos[aTot,t] * rRente['Bank',t] * vHh['Bank',aTot,t-1]/fv)
                              * fvtDoedsbo[t];
EQUATION E_fvtDoedsbo_tot[t];
E_fvtDoedsbo_tot[t]$(tx0[t] and t.val > 2015).. 
      vtDoedsbo[aTot,t]  =E=  sum(a, vtDoedsbo[a,t] * (1-rOverlev[a-1,t-1]) * nPop[a-1,t-1]);
EQUATION E_vtHhAM[a,t];
E_vtHhAM[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vtHhAM[a,t]  =E=  tAMbidrag[t] * ftAMBidrag[t] * (vWHh[a,t] * nLHh[a,t]) / nPop[a,t] * (vWHh[aTot,t] - vBidragTjmp[t]) / vWHh[aTot,t];
EQUATION E_vtHhAM_tot[t];
E_vtHhAM_tot[t]$(tx0[t] and t.val > 1993).. 
      vtHhAM[aTot,t]  =E=  tAMbidrag[t] * ftAMBidrag[t] * (vWHh[aTot,t] - vBidragTjmp[t]);
EQUATION E_vtPersRest[a,t];
E_vtPersRest[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vtPersRest[a,t]  =E=  vtKapPens[a,t] + tPersRestxKapPens[t] * vPensUdb['PensX',a,t];
EQUATION E_vtPersRest_tot[t];
E_vtPersRest_tot[t]$(tx0[t]).. 
      vtPersRest[aTot,t]  =E=  vtKapPens[aTot,t] 
                           + tPersRestxKapPens[t] * (vPensUdb['PensX',aTot,t] - vPensArv['PensX',aTot,t]);
EQUATION E_vtKapPens[a,t];
E_vtKapPens[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vtKapPens[a,t]  =E=  tKapPens[t] * ftKapPens[t] * vPensUdb['Kap',a,t];
EQUATION E_vtKapPens_tot[t];
E_vtKapPens_tot[t]$(tx0[t]).. 
      vtKapPens[aTot,t]  =E=  tKapPens[t] * ftKapPens[t] * vPensUdb['Kap',aTot,t];
EQUATION E_vtKapPensArv[a,t];
E_vtKapPensArv[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vtKapPensArv[a,t]  =E=  tKapPens[t] * ftKapPens[t] * vPensArv['Kap',a,t];
EQUATION E_vtKapPensArv_tot[t];
E_vtKapPensArv_tot[t]$(tx0[t] and t.val > 2015).. 
      vtKapPensArv[aTot,t]  =E=  tKapPens[t] * ftKapPens[t] * vPensArv['Kap',aTot,t];
EQUATION E_vtHhVaegt[a,t];
E_vtHhVaegt[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      vtHhVaegt[a,t]  =E=  tHhVaegt[t] * qBiler[t-1]/fq * qC_a[a,t] / qC['cIkkeBol',t];
EQUATION E_vtHhVaegt_tot[t];
E_vtHhVaegt_tot[t]$(tx0[t])..  vtHhVaegt[aTot,t]  =E=  tHhVaegt[t] * qBiler[t-1]/fq;
EQUATION E_vtSelskab_sTot[t];
E_vtSelskab_sTot[t]$(tx0[t])..  vtSelskab[sTot,t]      =E=  vtSelskabRest[sTot,t] + vtSelskabNord[t];
EQUATION E_vtSelskabRest_sTot[t];
E_vtSelskabRest_sTot[t]$(tx0[t])..   vtSelskabRest[sTot,t]  =E=  tSelskab[t] * ftSelskab[t] * vEBT[sTot,t];
EQUATION E_vtSelskabNord[t];
E_vtSelskabNord[t]$(tx0[t] and t.val > 2015).. 
      vtSelskabNord[t]  =E=   (qY['udv',t] - qGrus[t]) / qY['udv',t] * vEBT['udv',t] * tSelskabNord[t];
EQUATION E_vtSelskab[sp,t];
E_vtSelskab[sp,t]$(tx0[t]).. 
      vtSelskab[sp,t]  =E=  vtSelskabRest[sp,t] + sameas[sp,'udv'] * vtSelskabNord[t];
EQUATION E_vtSelskabRest[sp,t];
E_vtSelskabRest[sp,t]$(tx0[t]).. 
      vtSelskabRest[sp,t]  =E=  tSelskab[t] * ftSelskab[t] * vEBT[sp,t];
EQUATION E_mtVirk[sp,t];
E_mtVirk[sp,t]$(tx0[t])..  mtVirk[sp,t]  =E=  tSelskab[t] + sameas[sp,'udv'] * tSelskabNord[t];
EQUATION E_vtPAL[t];
E_vtPAL[t]$(tx0[t] and t.val > 1983).. 
      vtPAL[t]  =E=  tPAL[t] * ftPAL[t] * (rRente['Pens',t] + rOmv['Pens',t]) * vHh['Pens',aTot,t-1]/fv;
EQUATION E_vtMedie_tot[t];
E_vtMedie_tot[t]$(tx0[t] and t.val > 1990)..  vtMedie[t]  =E=  utMedie[t] * vSatsIndeks[t] * nPop['a18t100',t];
EQUATION E_vtLukning[a,t];
E_vtLukning[a,t]$(tx0[t] and a0t100[a] and t.val > 2015).. 
      vtLukning[a,t]  =E=  tLukning[t] * (vtHhx[a,t]-vtLukning[a,t]);
EQUATION E_tLukning[t];
E_tLukning[t]$(tx0[t] and t.val > 2015).. 
      vtLukning[aTot,t]  =E=  tLukning[t] * (vtHhx[aTot,t] - vtLukning[aTot,t]);
EQUATION E_vtIndirekte[t];
E_vtIndirekte[t]$(tx0[t])..  vtIndirekte[t]  =E=  vtMoms[dTot,sTot,t]
                                                 + vtAfg[dTot,sTot,t]
                                                 + vtReg[dTot,t]
                                                 + vtY[t] 
                                                 + vtTold[dTot,sTot,t] - vtEU[t];
EQUATION E_vtEU[t];
E_vtEU[t]$(tx0[t])..  vtEU[t]  =E=  vtTold[dTot,sTot,t] + vtAfgEU[t];
EQUATION E_vtAfgEU[t];
E_vtAfgEU[t]$(tx0[t])..  vtAfgEU[t]  =E=  rvtAfgEU2vtAfg[t] * vtAfg[dTot,sTot,t];
EQUATION E_vtYRest[t];
E_vtYRest[t]$(tx0[t])..  vtYRest[t]  =E=  vtNetYAfgRest[sTot,t] + vSubYRes[t];
EQUATION E_vtY[t];
E_vtY[t]$(tx0[t]).. 
      vtY[t]  =E=  vtGrund[sTot,t] + vtVirkVaegt[sTot,t] + vtVirkAM[sTot,t] + vtAUB[sTot,t] + vtYRest[t];
EQUATION E_vOffIndRest[t];
E_vOffIndRest[t]$(tx0[t]).. 
      vOffIndRest[t]  =E=  vtArv[aTot,t] + vOffAfskr[kTot,t] + vBidrag[aTot,t]
                       + vOffFraUdl[t] + vOffFraHh[t] + vOffFraVirk[t]
                       + vtKirke[aTot,t] + vJordrente[t] + vOffVirk[t] + jvOffPrimInd[t];
EQUATION E_vBidrag_tot[t];
E_vBidrag_tot[t]$(tx0[t]).. 
      vBidrag[aTot,t]  =E=  vBidragAK[t] + vBidragTjmp[t] + vBidragEL[t] + vBidragFri[t] + vBidragObl[t];
EQUATION E_vBidrag[a,t];
E_vBidrag[a,t]$(tx0[t] and a15t100[a] and t.val > 2015).. 
      vBidrag[a,t]  =E=  (vWHh[a,t] * nLHh[a,t]) / vWHh[aTot,t] * vBidrag[aTot,t] / nPop[a,t];
EQUATION E_vBidragAK[t];
E_vBidragAK[t]$(tx0[t] and t.val > 2000)..       vBidragAK[t]       =E=  uBidragAK[t]      * vSatsIndeks[t] * nSoc['arbsty',t];
EQUATION E_vBidragTjmp[t];
E_vBidragTjmp[t]$(tx0[t] and t.val > 2000)..     vBidragTjmp[t]     =E=  uBidragTjmp[t]    * vSatsIndeks[t] * nSoc['arbsty',t];
EQUATION E_vBidragEL[t];
E_vBidragEL[t]$(tx0[t] and t.val > 2000)..       vBidragEL[t]       =E=  uBidragEL[t]      * vSatsIndeks[t] * nSoc['arbsty',t];
EQUATION E_vBidragFri[t];
E_vBidragFri[t]$(tx0[t] and t.val > 2000)..      vBidragFri[t]      =E=  uBidragFri[t]     * vSatsIndeks[t] * nSoc['arbsty',t];
EQUATION E_vBidragOblTjm[t];
E_vBidragOblTjm[t]$(tx0[t] and t.val > 2000)..   vBidragOblTjm[t]   =E=  uBidragOblTjm[t]  * vSatsIndeks[t] * nSoc['arbsty',t];
EQUATION E_vBidragATP[t];
E_vBidragATP[t]$(tx0[t] and t.val > 2000)..      vBidragATP[t]      =E=  uBidragATP[t]     * vSatsIndeks[t] * nSoc['arbsty',t];
EQUATION E_vBidragOblRest[t];
E_vBidragOblRest[t]$(tx0[t] and t.val > 2000)..  vBidragOblRest[t]  =E=  uBidragOblRest[t] * vSatsIndeks[t] * nSoc['arbsty',t];
EQUATION E_vBidragObl[t];
E_vBidragObl[t]$(tx0[t] and t.val > 2000)..  vBidragObl[t]  =E=  vBidragOblTjm[t] + vBidragATP[t] + vBidragOblRest[t];
EQUATION E_vOffFraUdl[t];
E_vOffFraUdl[t]$(tx0[t])..  vOffFraUdl[t]  =E=  rOffFraUdl2BNP[t] * vBNP[t];
EQUATION E_vOffFraHh[t];
E_vOffFraHh[t]$(tx0[t])..   vOffFraHh[t]   =E=  rOffFraHh2BNP[t] * vBNP[t];
EQUATION E_vOffFraVirk[t];
E_vOffFraVirk[t]$(tx0[t])..  vOffFraVirk[t]  =E=  rOffFraVirk2BNP[t] * vBNP[t];
EQUATION E_vtKirke[a,t];
E_vtKirke[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vtKirke[a,t]  =E=  tKirke[t] * ftKirke[t] * rtKirke[t] * (vSkatteplInd[a,t] - vPersFradrag[a,t]);
EQUATION E_vtKirke_tot[t];
E_vtKirke_tot[t]$(tx0[t] and t.val > 1986).. 
      vtKirke[aTot,t]  =E=  tKirke[t] * ftKirke[t] * rtKirke[t] * (vSkatteplInd[aTot,t] - vPersFradrag[aTot,t]);
EQUATION E_vJordrente[t];
E_vJordrente[t]$(tx0[t])..  vJordrente[t]  =E=  tJordRente[t] * vBVT['udv',t];
EQUATION E_vOffVirk[t];
E_vOffVirk[t]$(tx0[t])..  vOffVirk[t]  =E=  rOffVirk2BNP[t] * vBNP[t];
EQUATION E_vPersInd[a,t];
E_vPersInd[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vPersInd[a,t]  =E=    vWHh[a,t] * nLHh[a,t] / nPop[a,t]
                        - vtHhAM[a,t] 
                        + vOvfSkatPl[a,t]
                        + vPensUdb['PensX',a,t]
                        
                        + rArv[a,t] * vPensArv['PensX',aTot,t] / nPop[aTot,t] 
                        - vPensIndb['PensX',a,t]
                        - vPensIndb['Kap',a,t]
                        + vPersIndRest[a,t];
EQUATION E_vSkatteplInd[a,t];
E_vSkatteplInd[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vSkatteplInd[a,t]  =E=  ( vPersInd[a,t]
                           + vNetKapInd[a,t] 
                           - vBeskFradrag[a,t] 
                           - vAKFradrag[a,t] 
                           - vELFradrag[a,t] 
                           - vRestFradrag[a,t]
                            ) * (1+jfvSkatteplInd[t]);
EQUATION E_vPersInd_tot[t];
E_vPersInd_tot[t]$(tx0[t] and t.val > 2015).. 
      vPersInd[aTot,t]  =E=    vWHh[aTot,t]
                           - vtHhAM[aTot,t] 
                           + vOvfSkatPl[aTot,t]
                           + vPensUdb['PensX',aTot,t]
                           - vPensIndb['PensX',aTot,t]
                           - vPensIndb['Kap',aTot,t]
                           + vPersIndRest[aTot,t];
EQUATION E_vPersIndRest[a,t];
E_vPersIndRest[a,t]$(a15t100[a] and tx0[t] and t.val > 2015)..  vPersIndRest[a,t]  =E=  vPersIndRest_a[a,t] + vPersIndRest_t[t];
EQUATION E_rPersIndRest_a2PersInd[a,t];
E_rPersIndRest_a2PersInd[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vPersIndRest_a[a,t]  =E=  rPersIndRest_a2PersInd[a,t] * vPersInd[a,t];
EQUATION E_rPersIndRest_t2PersInd[t];
E_rPersIndRest_t2PersInd[t]$(tx0[t] and t.val > 2015).. 
      vPersIndRest_t[t]  =E=  rPersIndRest_t2PersInd[t] * vPersInd[aTot,t] / sum(a$a15t100[a], nPop.l[a,t]);
EQUATION E_vPersIndRest_tot[t];
E_vPersIndRest_tot[t]$(tx0[t] and t.val > 2015)..  vPersInd[aTot,t]  =E=  sum(a, vPersInd[a,t] * nPop[a,t]);
EQUATION E_vSkatteplInd_tot[t];
E_vSkatteplInd_tot[t]$(tx0[t]).. 
      vSkatteplInd[aTot,t]  =E=  ( vPersInd[aTot,t]
                               + vNetKapInd[aTot,t] 
                               - vBeskFradrag[aTot,t] 
                               - vAKFradrag[aTot,t] 
                               - vELFradrag[aTot,t] 
                               - vRestFradrag[aTot,t]
                             ) * (1+jfvSkatteplInd[t]);
EQUATION E_vKapIndPos[a,t];
E_vKapIndPos[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vKapIndPos[a,t]  =E=  vHh['Obl',a-1,t-1]/fv * fMigration[a,t] * rRente['Obl',t]
                          + (vHh['Bank',a-1,t-1]/fv * fMigration[a,t] * rRente['Bank',t])$(a.val > 15)
                          + jvKapIndPos[a,t];
EQUATION E_vKapIndNeg[a,t];
E_vKapIndNeg[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vKapIndNeg[a,t]  =E=  vHh['RealKred',a-1,t-1]/fv * fMigration[a,t] * (rRente['RealKred',t] + jrHhRente['RealKred',t])
                             + vHh['BankGaeld',a-1,t-1]/fv * fMigration[a,t] * (rRente['Bank',t] + jrHhRente['Bank',t])
                             + jvKapIndNeg[a,t];
EQUATION E_vNetKapInd[a,t];
E_vNetKapInd[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vNetKapInd[a,t]     =E=  vKapIndPos[a,t] - vKapIndNeg[a,t];
EQUATION E_vNetKapIndPos[a,t];
E_vNetKapIndPos[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vNetKapIndPos[a,t]  =E=  rNet2KapIndPos[a,t] * vKapIndPos[a,t];
EQUATION E_jvKapIndPos_tot[t];
E_jvKapIndPos_tot[t]$(tx0[t] and t.val > 2015).. 
      vKapIndPos[aTot,t]  =E=  sum(a, vKapIndPos[a,t] * nPop[a,t]);
EQUATION E_vKapIndPos_tot[t];
E_vKapIndPos_tot[t]$(tx0[t] and t.val > 2015).. 
      vKapIndPos[aTot,t]  =E=  vHh['Obl',aTot,t-1]/fv * fMigration[aTot,t] * rRente['Obl',t]
                          + (vHh['Bank',aTot,t-1]/fv * fMigration[aTot,t] * rRente['Bank',t])
                          + jvKapIndPos[aTot,t];
EQUATION E_jvKapIndNeg_tot[t];
E_jvKapIndNeg_tot[t]$(tx0[t] and t.val > 2015).. 
      vKapIndNeg[aTot,t]  =E=  sum(a, vKapIndNeg[a,t] * nPop[a,t]);
EQUATION E_vKapIndNeg_tot[t];
E_vKapIndNeg_tot[t]$(tx0[t] and t.val > 2015).. 
      vKapIndNeg[aTot,t]  =E=  vHh['RealKred',aTot,t-1]/fv * fMigration[aTot,t] * (rRente['RealKred',t] + jrHhRente['RealKred',t])
                           + vHh['BankGaeld',aTot,t-1]/fv * fMigration[aTot,t] * (rRente['Bank',t] + jrHhRente['Bank',t])
                           + jvKapIndNeg[aTot,t];
EQUATION E_vNetKapIndPos_tot[t];
E_vNetKapIndPos_tot[t]$(tx0[t]).. 
      vNetKapIndPos[aTot,t]  =E=  rNet2KapIndPos[aTot,t] * vKapIndPos[aTot,t];
EQUATION E_vNetKapInd_tot[t];
E_vNetKapInd_tot[t]$(tx0[t])..  vNetKapInd[aTot,t]  =E=  vKapIndPos[aTot,t] - vKapIndNeg[aTot,t];
EQUATION E_vPersFradrag[a,t];
E_vPersFradrag[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vPersFradrag[a,t]  =E=  vSatsIndeks[t] * uvPersFradrag[a,t];
EQUATION E_uvPersFradrag_tot[t];
E_uvPersFradrag_tot[t]$(tx0[t] and t.val > 2015)..  vPersFradrag[aTot,t]  =E=  sum(a, vPersFradrag[a,t] * nPop[a,t]);
EQUATION E_vPersFradrag_tot[t];
E_vPersFradrag_tot[t]$(tx0[t]).. 
      vPersFradrag[aTot,t]  =E=  vSatsIndeks[t] * uvPersFradrag[aTot,t];
EQUATION E_vAKFradrag_tot[t];
E_vAKFradrag_tot[t]$(tx0[t] and t.val > 1993)..  vAKFradrag[aTot,t]    =E=  rAKFradrag2Bidrag[t] * vBidragAK[t];
EQUATION E_vELFradrag_tot[t];
E_vELFradrag_tot[t]$(tx0[t] and t.val > 1998)..  vELFradrag[aTot,t]    =E=  rELFradrag2Bidrag[t] * vBidragEL[t];
EQUATION E_vRestFradrag_tot[t];
E_vRestFradrag_tot[t]$(tx0[t])..  vRestFradrag[aTot,t]  =E=  vRestFradragSats[t] * nLHh[aTot,t];
EQUATION E_vBeskFradrag_tot[t];
E_vBeskFradrag_tot[t]$(tx0[t] and t.val > 2003)..  vBeskFradrag[aTot,t]  =E=  tbeskfradrag[t]      * vWHh[aTot,t];
EQUATION E_vAKFradrag[a,t];
E_vAKFradrag[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vAKFradrag[a,t]  =E=  vBidrag[a,t] / vBidrag[aTot,t] * vAKFradrag[aTot,t];
EQUATION E_vELFradrag[a,t];
E_vELFradrag[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vELFradrag[a,t]  =E=  vBidrag[a,t] / vBidrag[aTot,t] * vELFradrag[aTot,t];
EQUATION E_vRestFradrag[a,t];
E_vRestFradrag[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vRestFradrag[a,t]  =E=  (hLHh[a,t] * nLHh[a,t]) / hLHh[aTot,t] * vRestFradrag[aTot,t] / nPop[a,t];
EQUATION E_vBeskFradrag[a,t];
E_vBeskFradrag[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vBeskFradrag[a,t]  =E=  (vWHh[a,t] * nLHh[a,t]) / vWHh[aTot,t] * vBeskfradrag[aTot,t] / nPop[a,t];
EQUATION E_rRestFradragSats2SatsIndeks[t];
E_rRestFradragSats2SatsIndeks[t]$(tx0[t])..  vRestFradragSats[t]  =E=  rRestFradragSats2SatsIndeks[t] * vSatsIndeks[t];

# ----------------------------------------------------------------------------------------------------
#  Define B_GovRevenues model
# ----------------------------------------------------------------------------------------------------
Model B_GovRevenues /
E_vOffPrimInd, E_vtDirekte, E_vtKilde, E_vtBund, E_ftBund_tot, E_vtBund_tot, E_vtTop, E_rTopSkatInd_tot, E_vtTop_tot, E_vtKommune, E_ftKommune_tot, E_vtKommune_tot, E_vtEjd, E_fvtEjd_tot, E_vtEjd_tot, E_vtAktie, E_fvtAktie_tot, E_vRealiseretAktieOmv, E_vRealiseretAktieOmv_aTot, E_vRealiseretAktieOmv_aTot_x2015, E_vUrealiseretAktieOmv, E_vtAktie_tot, E_vtVirksomhed, E_vtVirksomhed_tot, E_vtDoedsbo, E_vtDoedsbo_tot, E_fvtDoedsbo_tot, E_vtHhAM, E_vtHhAM_tot, E_vtPersRest, E_vtPersRest_tot, E_vtKapPens, E_vtKapPens_tot, E_vtKapPensArv, E_vtKapPensArv_tot, E_vtHhVaegt, E_vtHhVaegt_tot, E_vtSelskab_sTot, E_vtSelskabRest_sTot, E_vtSelskabNord, E_vtSelskab, E_vtSelskabRest, E_mtVirk, E_vtPAL, E_vtMedie_tot, E_vtLukning, E_tLukning, E_vtIndirekte, E_vtEU, E_vtAfgEU, E_vtYRest, E_vtY, E_vOffIndRest, E_vBidrag_tot, E_vBidrag, E_vBidragAK, E_vBidragTjmp, E_vBidragEL, E_vBidragFri, E_vBidragOblTjm, E_vBidragATP, E_vBidragOblRest, E_vBidragObl, E_vOffFraUdl, E_vOffFraHh, E_vOffFraVirk, E_vtKirke, E_vtKirke_tot, E_vJordrente, E_vOffVirk, E_vPersInd, E_vSkatteplInd, E_vPersInd_tot, E_vPersIndRest, E_rPersIndRest_a2PersInd, E_rPersIndRest_t2PersInd, E_vPersIndRest_tot, E_vSkatteplInd_tot, E_vKapIndPos, E_vKapIndNeg, E_vNetKapInd, E_vNetKapIndPos, E_jvKapIndPos_tot, E_vKapIndPos_tot, E_jvKapIndNeg_tot, E_vKapIndNeg_tot, E_vNetKapIndPos_tot, E_vNetKapInd_tot, E_vPersFradrag, E_uvPersFradrag_tot, E_vPersFradrag_tot, E_vAKFradrag_tot, E_vELFradrag_tot, E_vRestFradrag_tot, E_vBeskFradrag_tot, E_vAKFradrag, E_vELFradrag, E_vRestFradrag, E_vBeskFradrag, E_rRestFradragSats2SatsIndeks
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\GovExpenses.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Government expenses
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# --------------------------------------------B_GovExpenses-------------------------------------------
#  Initialize B_GovExpenses equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_vGxAfskr[t];
E_vGxAfskr[t]$(tx0[t])..  vGxAfskr[t]  =E=  uvGxAfskr[t] * (1+rGLukning[t]) * fDemoTraek[t] * vhW[t];
EQUATION E_qGxAfskr[t];
E_qGxAfskr[t]$(tx0[t]).. 
    qGxAfskr[t] * pGxAfskr[t-1]/fp  =E=  pG[gTot,t-1]/fp * qG[gTot,t] - pOffAfskr[kTot,t-1]/fp * qOffAfskr[kTot,t];
EQUATION E_pGxAfskr[t];
E_pGxAfskr[t]$(tx0[t])..  pGxAfskr[t] * qGxAfskr[t]  =E=  vGxAfskr[t];
EQUATION E_qG_tot[t];
E_qG_tot[t]$(tx0[t])..  qG[gTot,t] * pG[gTot,t]  =E=  vGxAfskr[t] + vOffAfskr[kTot,t];
EQUATION E_qG[g_,gnest,t];
E_qG[g_,gnest,t]$(tx0[t] and gnest2g_(gnest,g_)).. 
    qG[g_,t]  =E=  uG[g_,t] * qG[gNest,t] * (pG[gNest,t] / pG[g_,t])**eG(gNest);
EQUATION E_vGLukning[t];
E_vGLukning[t]$(tx0[t])..  vGLukning[t]  =E=  rGLukning[t] / (1+rGLukning[t]) * vG[gTot,t];
EQUATION E_vOffPrimUd[t];
E_vOffPrimUd[t]$(tx0[t])..  vOffPrimUd[t]  =E=  vG[gTot,t]
                                           + vOvf['tot',t]
                                           + vOffInv[t]
                                           + vOffSub[t]
                                           + vOffUdRest[t];
EQUATION E_vOvfSats_satsreg[satsreg,t];
E_vOvfSats_satsreg[satsreg,t]$(tx0[t]).. 
    vOvfSats[satsreg,t]  =E=  vSatsIndeks[t] * uvOvfSats[satsreg,t];
EQUATION E_vOvfSats_groen[t];
E_vOvfSats_groen[t]$(tx0[t]).. 
    vOvfSats['groen',t]  =E=  vOvfSats['groen',t-1]/fp + uvOvfSats['groen',t];
EQUATION E_nOvf[ovf,t];
E_nOvf[ovf,t]$(tx0[t] and not (ovf_a0t17[ovf] or ovf_a18t100[ovf])).. 
    nOvf[ovf,t]  =E=  sum(soc, nOvf2Soc[ovf,soc] * nSoc[soc,t]);
EQUATION E_nOvf_a0t17[ovf,t];
E_nOvf_a0t17[ovf,t]$(tx0[t] and ovf_a0t17[ovf]).. 
    nOvf[ovf,t]  =E=  nPop['a0t17',t];
EQUATION E_nOvf_a18t100[ovf,t];
E_nOvf_a18t100[ovf,t]$(tx0[t] and ovf_a18t100[ovf]).. 
    nOvf[ovf,t]  =E=  nPop['a18t100',t];
EQUATION E_vOvf[ovf,t];
E_vOvf[ovf,t]$(tx0[t])..  vOvf[ovf,t]  =E=  vOvfSats[ovf,t] * nOvf[ovf,t] + jvOvf[ovf,t];
EQUATION E_vOvf_tot[t];
E_vOvf_tot[t]$(tx0[t] and t.val > 2015)..  vOvf['tot',t]  =E=  sum(ovf, vOvf[ovf,t]);
EQUATION E_vOvf_hh[t];
E_vOvf_hh[t]$(tx0[t] and t.val > 2015)..   vOvf['hh',t]   =E=  sum(ovfhh, vOvf[ovfhh,t]);
EQUATION E_vOvf_a18t100[t];
E_vOvf_a18t100[t]$(tx0[t] and t.val > 2015).. 
    vOvf['a18t100',t]  =E=  sum(ovf$(ovf_a18t100[ovf]), vOvf[ovf,t]) / nPop['a18t100',t];
EQUATION E_vHhOvf[a,t];
E_vHhOvf[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
    vHhOvf[a,t]  =E=  (  dvOvf2dBesk['hh',t] * nLHh[a,t] / nPop[a,t]
                     + dvOvf2dPop['hh',t] * uHhOvfPop[a,t]
                     + sum(ovf$(ovf_a0t17[ovf]), vOvf[ovf,t]) * rBoern[a,t]
                     + vOvf['a18t100',t]$(a18t100[a])
                     + sum(ovf, jvOvf[ovf,t]) / nPop['a15t100',t]
                     + vHhOvfRest[a,t]
                   ) * fHhOvf[t];
EQUATION E_dnOvf2dBesk[ovf,t];
E_dnOvf2dBesk[ovf,t]$(tx0[t]).. 
    dnOvf2dBesk[ovf,t]  =E=  sum(soc, dSoc2dBesk[soc,t] * nOvf2Soc[ovf,soc]);
EQUATION E_dnOvf2dPop[ovf,t];
E_dnOvf2dPop[ovf,t]$(tx0[t] and t.val > 1990).. 
    dnOvf2dPop[ovf,t]  =E=  sum(soc, (dSoc2dPop[soc,t] + jnSoc[soc,t] / nPop['a15t100',t]) * nOvf2Soc[ovf,soc]);
EQUATION E_dvOvf2dBesk[ovf,t];
E_dvOvf2dBesk[ovf,t]$(tx0[t])..  dvOvf2dBesk[ovf,t]  =E=  vOvfSats[ovf,t] * dnOvf2dBesk[ovf,t];
EQUATION E_dvOvf2dBesk_hh[t];
E_dvOvf2dBesk_hh[t]$(tx0[t])..  dvOvf2dBesk['hh',t]  =E=  sum(ovfhh, dvOvf2dBesk[ovfhh,t]);
EQUATION E_dvOvf2dPop[ovf,t];
E_dvOvf2dPop[ovf,t]$(tx0[t])..  dvOvf2dPop[ovf,t]  =E=  vOvfSats[ovf,t] * dnOvf2dPop[ovf,t];
EQUATION E_dvOvf2dPop_hh[t];
E_dvOvf2dPop_hh[t]$(tx0[t])..  dvOvf2dPop['hh',t]  =E=  sum(ovfhh, dvOvf2dPop[ovfhh,t]);
EQUATION E_fHhOvf[t];
E_fHhOvf[t]$(tx0[t] and t.val > 2015)..  vOvf['hh',t]  =E=  sum(a, vHhOvf[a,t] * nPop[a,t]);
EQUATION E_vOvfUbeskat_tot[t];
E_vOvfUbeskat_tot[t]$(tx0[t] and t.val > 2000)..  vOvfUbeskat['tot',t]  =E=  sum(ovfhh$(ubeskat[ovfhh]), vOvf[ovfhh,t]);
EQUATION E_vOvfUbeskat[a,t];
E_vOvfUbeskat[a,t]$(a.val <= 100 and tx0[t] and t.val > 2015).. 
    
    vOvfUbeskat[a,t]  =E=  uOvfUbeskat[a,t] * vOvfUbeskat['tot',t] / sum(aa, uOvfUbeskat[aa,t] * nPop[aa,t]);
EQUATION E_vOvfSkatPl_tot[t];
E_vOvfSkatPl_tot[t]$(tx0[t] and t.val > 2015)..  vOvfSkatPl[aTot,t]  =E=  sum(a, vOvfSkatPl[a,t] * nPop[a,t]);
EQUATION E_vOvfSkatPl[a,t];
E_vOvfSkatPl[a,t]$(tx0[t] and t.val > 2015)..  vOvfSkatPl[a,t]  =E=  vHhOvf[a,t] - vOvfUbeskat[a,t];
EQUATION E_vOffInv[t];
E_vOffInv[t]$(tx0[t])..  vOffInv[t]  =E=  vI_s[iTot,'off',t];
EQUATION E_vOffSub[t];
E_vOffSub[t]$(tx0[t])..   vOffSub[t]   =E=  vPunktSub[t] + vSubY[t] - vSubEU[t];
EQUATION E_vSubYRes[t];
E_vSubYRes[t]$(tx0[t])..  vSubYRes[t]  =E=  rvYsubRest2BVT[t] * vBVT['tot',t];
EQUATION E_vSubY[t];
E_vSubY[t]$(tx0[t])..     vSubY[t]     =E=  vtSubLoen['tot',t] + vSubYRes[t];
EQUATION E_vSubEU[t];
E_vSubEU[t]$(tx0[t])..    vSubEU[t]    =E=  vBNP[t] * rSubEU2BNP[t];
EQUATION E_vOffUdRest[t];
E_vOffUdRest[t]$(tx0[t])..  
    vOffUdRest[t]  =E=  vOffLandKoeb[t] + vOffTilUdl[t] + vOffTilHh[t] + vOffTilVirk[t];
EQUATION E_vOffTilHh[t];
E_vOffTilHh[t]$(tx0[t])..     vOffTilHh[t]     =E=  vOffTilHhKap[t] + vOffTilHhOev[t];
EQUATION E_vOffLandKoeb[t];
E_vOffLandKoeb[t]$(tx0[t])..  vOffLandKoeb[t]  =E=  vBNP[t] * rOffLandKoeb2BNP[t];
EQUATION E_vOffTilUdl[t];
E_vOffTilUdl[t]$(tx0[t])..    vOffTilUdl[t]    =E=  vBNP[t] * rOffTilUdl2BNP[t];
EQUATION E_vOffTilHhKap[t];
E_vOffTilHhKap[t]$(tx0[t])..  vOffTilHhKap[t]  =E=  vBNP[t] * rOffTilHhKap2BNP[t];
EQUATION E_vOffTilHhOev[t];
E_vOffTilHhOev[t]$(tx0[t])..  vOffTilHhOev[t]  =E=  vBNP[t] * rOffTilHhOev2BNP[t];
EQUATION E_vOffTilVirk[t];
E_vOffTilVirk[t]$(tx0[t])..   vOffTilVirk[t]   =E=  vBNP[t] * rOffTilVirk2BNP[t];

# ----------------------------------------------------------------------------------------------------
#  Define B_GovExpenses model
# ----------------------------------------------------------------------------------------------------
Model B_GovExpenses /
E_vGxAfskr, E_qGxAfskr, E_pGxAfskr, E_qG_tot, E_qG, E_vGLukning, E_vOffPrimUd, E_vOvfSats_satsreg, E_vOvfSats_groen, E_nOvf, E_nOvf_a0t17, E_nOvf_a18t100, E_vOvf, E_vOvf_tot, E_vOvf_hh, E_vOvf_a18t100, E_vHhOvf, E_dnOvf2dBesk, E_dnOvf2dPop, E_dvOvf2dBesk, E_dvOvf2dBesk_hh, E_dvOvf2dPop, E_dvOvf2dPop_hh, E_fHhOvf, E_vOvfUbeskat_tot, E_vOvfUbeskat, E_vOvfSkatPl_tot, E_vOvfSkatPl, E_vOffInv, E_vOffSub, E_vSubYRes, E_vSubY, E_vSubEU, E_vOffUdRest, E_vOffTilHh, E_vOffLandKoeb, E_vOffTilUdl, E_vOffTilHhKap, E_vOffTilHhOev, E_vOffTilVirk
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\aggregates.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Aggregates
# - This module calculates objects with ties to many other modules
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# --------------------------------------------B_aggregates--------------------------------------------
#  Initialize B_aggregates equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_vVirkBVT5aarSnit[t];
E_vVirkBVT5aarSnit[t]$(tx0[t] and t.val < tend.val-1).. 
      vVirkBVT5aarSnit[t]  =E=  sum(sp, vBVT[sp,t-2]/fv/fv + vBVT[sp,t-1]/fv + vBVT[sp,t] + vBVT[sp,t+1]*fv + vBVT[sp,t+2]*fv*fv) / 5;
EQUATION E_vVirkBVT5aarSnit_t1End[t];
E_vVirkBVT5aarSnit_t1End[t]$(t.val = tend.val-1).. 
      vVirkBVT5aarSnit[t]  =E=  sum(sp, vBVT[sp,t-2]/fv/fv + vBVT[sp,t-1]/fv + vBVT[sp,t] + vBVT[sp,t+1]*fv + vBVT[sp,t+1]*fv*fv) / 5;
EQUATION E_vVirkBVT5aarSnit_tEnd[t];
E_vVirkBVT5aarSnit_tEnd[t]$(tend[t]).. 
      vVirkBVT5aarSnit[t]  =E=  sum(sp, vBVT[sp,t-2]/fv/fv + vBVT[sp,t-1]/fv + vBVT[sp,t] + vBVT[sp,t]*fv   + vBVT[sp,t]*fv*fv) / 5;
EQUATION E_vBVT2hL[t];
E_vBVT2hL[t]$(tx0[t])..  vBVT2hL[t]  =E=  vBVT[sTot,t] / hL[t];
EQUATION E_vBVT2hLsnit[t];
E_vBVT2hLsnit[t]$(tx0[t]).. 
      vBVT2hLsnit[t]  =E=  vBVT2hLsnit[t-1] * 0.8 + 0.2 * vBVT2hL[t];
EQUATION E_qBVT2hL[t];
E_qBVT2hL[t]$(tx0[t])..  qBVT2hL[t]  =E=  qBVT[sTot,t] / hL[t];
EQUATION E_qBVT2hLsnit[t];
E_qBVT2hLsnit[t]$(tx0[t]).. 
      qBVT2hLsnit[t]  =E=  qBVT2hLsnit[t-1] * 0.8 + 0.2 * qBVT2hL[t];
EQUATION E_pCsnit[t];
E_pCsnit[t]$(tx0[t]).. 
      pCInflSnit[t]  =E=  0.8 * pCInflSnit[t-1] + 0.2 * (pC['cIkkeBol',t] / (pC['cIkkeBol',t-1]/fp) -1);
EQUATION E_vBFI[t];
E_vBFI[t]$(tx0[t]).. 
      vBFI[t]  =E=  vBNP[t]                               
                - vtEU[t] + vSubEU[t]  
                - vWUdl[t]  
                - vUdlRenter[t]  
                + jvBFI[t];
EQUATION E_vUdl_IndlAktier[t];
E_vUdl_IndlAktier[t]$(tx0[t] and t.val > 1992).. 
      vUdl['IndlAktier',t]  =E=  vAktie[t] - vHh['IndlAktier',aTot,t] - vOff['IndlAktier',t] - vVirk['IndlAktier',t] - vPension['IndlAktier',t];
EQUATION E_vUdl_Pension[t];
E_vUdl_Pension[t]$(tx0[t] and t.val > 1992).. 
      vUdl['Pens',t]  =E=  - vPension['Pens',t] - vHh['Pens',aTot,t];
EQUATION E_vUdl_UdlAktier[t];
E_vUdl_UdlAktier[t]$(tx0[t] and t.val > 1992).. 
      vUdl['UdlAktier',t]  =E=  - vHh['UdlAktier',aTot,t] - vOff['UdlAktier',t] - vVirk['UdlAktier',t] - vPension['UdlAktier',t];
EQUATION E_vUdl_Bank[t];
E_vUdl_Bank[t]$(tx0[t] and t.val > 1992).. 
      vUdl['Bank',t]  =E=  vHh['BankGaeld',aTot,t] - vHh['Bank',aTot,t] - vOff['Bank',t] - vVirk['Bank',t];
EQUATION E_vUdl_Obl[t];
E_vUdl_Obl[t]$(tx0[t] and t.val > 1992).. 
      vUdl['Obl',t]  =E=  vHh['RealKred',aTot,t] + vOff['RealKred',t] + vVirk['RealKred',t] + vUdl['RealKred',t]
                        - (vHh['Obl',aTot,t] + vOff['Obl',t] + vVirk['Obl',t] + vPension['Obl',t]);
EQUATION E_vUdl_NetFin[t];
E_vUdl_NetFin[t]$(tx0[t] and t.val > 1992).. 
      vUdl['NetFin',t]  =E=  sum(akt, vUdl[akt,t]) - vUdl['RealKred',t];
EQUATION E_vUdl_realkred[t];
E_vUdl_realkred[t]$(tx0[t] and t.val > 1992)..  vUdl['realkred',t]  =E=  rUdlRealkred[t] * vHh['realkred',aTot,t];
EQUATION E_vUdlRenter[t];
E_vUdlRenter[t]$(tx0[t] and t.val > 1992).. 
      vUdlRenter[t]  =E=  sum(akt, rRente[akt,t] * vUdl[akt,t-1]/fv)
                      - rRente['RealKred',t] * vUdl['RealKred',t-1]/fv
                      - vOffVirk[t] 
                      - jvHhRenter[t] - jvVirkRenter[t] 
                      - sum(akt, jrHhRente[akt,t] * vHh[akt,atot,t-1]/fv) + sum(pas, jrHhRente[pas,t] * vHh[pas,atot,t-1]/fv)
                      - jrOffRenteInd[t] * vOffAkt[t-1]/fv
                      + jrOffRenteUd[t] * vOffPas[t-1]/fv
                      + rOffRenteInd[t] * vOffFonde[t-1]/fv  
                      
                      + sum(akt, rRente[akt,t] * vPension[akt,t-1]/fv);
EQUATION E_vUdlOmv[t];
E_vUdlOmv[t]$(tx0[t] and t.val > 1992).. 
      vUdlOmv[t]  =E=  sum(akt, rOmv[akt,t] * vUdl[akt,t-1]/fv) 
                   - rOmv['RealKred',t] * vUdl['RealKred',t-1]/fv
                   - jvHhOmv[t] - jvVirkOmv[t] - jvOffOmv[t]
                   - sum(akt, jrHhOmv[akt,t] * vHh[akt,atot,t-1]/fv) + sum(pas, jrHhOmv[pas,t] * vHh[pas,atot,t-1]/fv)
                   + vVirk['Guld',t] - vVirk['Guld',t-1]/fv
                   
                   + sum(akt, rOmv[akt,t] * vPension[akt,t-1]/fv);
EQUATION E_vUdlNFE[t];
E_vUdlNFE[t]$(tx0[t] and t.val > 1992)..  vUdlNFE[t]  =E=  vUdl['NetFin',t] - vUdl['NetFin',t-1]/fv - vUdlOmv[t];
EQUATION E_rArbProd[t];
E_rArbProd[t]$(tx0[t])..  rArbProd[t]  =E=  qBVT[sTot,t] / nLHh[aTot,t];
EQUATION E_rBVTGab[t];
E_rBVTGab[t]$(tx0[t])..  rBVTGab[t]  =E=  qBVT[sTot,t] / sqBVT[t] - 1;
EQUATION E_rBeskGab[t];
E_rBeskGab[t]$(tx0[t])..  rBeskGab[t]  =E=  nLHh[aTot,t] / snLHh[aTot,t] - 1;

# ----------------------------------------------------------------------------------------------------
#  Define B_aggregates model
# ----------------------------------------------------------------------------------------------------
Model B_aggregates /
E_vVirkBVT5aarSnit, E_vVirkBVT5aarSnit_t1End, E_vVirkBVT5aarSnit_tEnd, E_vBVT2hL, E_vBVT2hLsnit, E_qBVT2hL, E_qBVT2hLsnit, E_pCsnit, E_vBFI, E_vUdl_IndlAktier, E_vUdl_Pension, E_vUdl_UdlAktier, E_vUdl_Bank, E_vUdl_Obl, E_vUdl_NetFin, E_vUdl_realkred, E_vUdlRenter, E_vUdlOmv, E_vUdlNFE, E_rArbProd, E_rBVTGab, E_rBeskGab
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\HHincome.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Household income and portfolio accounting
# - See consumers.gms for consumption decisions and budget constraint
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------


# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# ---------------------------------------------B_HHincome---------------------------------------------
#  Initialize B_HHincome equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_vDispInd[t];
E_vDispInd[t]$(tx0[t] and t.val > 1994)..  vDispInd[t]  =E=  vWHh[aTot,t] 
                                                            + vSelvstKapInd[aTot,t]
                                                            + vOvf['hh',t]
                                                            - vtHh[aTot,t] + vtArv[aTot,t]
                                                            + vHhRenter['NetFin',t] - vKolPensRenter[t]
                                                            + vNetKolPensUdb[t]
                                                            + vLejeAfEjerBolig[t]
                                                            + vOffTilHhOev[t] - vOffFraHh[t]
                                                            + vHhFraVirkOev[t] - vHhTilUdl[t];
EQUATION E_vLejeAfEjerBolig[t];
E_vLejeAfEjerBolig[t]$(tx0[t]).. 
      vLejeAfEjerBolig[t]  =E=  pC['cBol',t] * qC['cBol',t]
                            - vCLejeBolig[aTot,t]
                            - rBoligOmkRest[t] * vBolig[aTot,t-1]/fv;
EQUATION E_vNetKolPensUdb[t];
E_vNetKolPensUdb[t]$(tx0[t]).. 
      vNetKolPensUdb[t]  =E=  sum(pens, rKolPens[pens,t] * (vPensUdb[pens,aTot,t] - vPensIndb[pens,aTot,t]))
                          + jvNetKolPensUdb[t];
EQUATION E_vNetIndPensUdb[t];
E_vNetIndPensUdb[t]$(tx0[t]).. 
      vNetIndPensUdb[t]  =E=  vPensUdb['Pens',aTot,t] - vPensIndb['Pens',aTot,t] - vNetKolPensUdb[t];
EQUATION E_vKolPensRenter[t];
E_vKolPensRenter[t]$(tx0[t]).. 
      vKolPensRenter[t]  =E=  sum(pens, rKolPens[pens,t] * vHh[pens,aTot,t-1]/fv)
                          * (1 - tPAL[t] * ftPAL[t]) * rRente['Pens',t] + jvKolPensRenter[t];
EQUATION E_vHhInd_aTot[t];
E_vHhInd_aTot[t]$(tx0[t]).. 
      vHhInd[aTot,t]  =E=  vWHh[aTot,t]
                       + vOvf['hh',t]
                       + (vPensUdb['Pens',aTot,t]  - vPensArv['Pens',aTot,t]) - vPensIndb['Pens',aTot,t]
                       - vtHhx[aTot,t]
                       + vArv[aTot,t] + vArvKorrektion[aTot,t]
                       + vHhNFErest[aTot,t];
EQUATION E_vHhInd[a,t];
E_vHhInd[a,t]$(tx0[t] and a0t100[a] and t.val > 2015).. 
      vHhInd[a,t]  =E=  vWHh[a,t] * nLHh[a,t] / nPop[a,t]
                    + vHhOvf[a,t]
                    + vPensUdb['Pens',a,t] - vPensIndb['Pens',a,t]
                    - vtHhx[a,t]
                    + vArv[a,t] + vArvKorrektion[a,t]
                    + vHhNFErest[a,t];
EQUATION E_vtHh_aTot[t];
E_vtHh_aTot[t]$(tx0[t])..  vtHh[aTot,t]  =E=  vtKilde[t] 
                                             + vtHhAM[aTot,t]
                                             + vtPersRest[aTot,t]
                                             + vtHhVaegt[aTot,t]                
                                             + vtPAL[t]
                                             + vtMedie[t]
                                             + vtArv[aTot,t]
                                             + vBidrag[aTot,t]
                                             + vtKirke[aTot,t]
                                             + vtDirekteRest[t] + vtLukning[aTot,t];
EQUATION E_rBoligOmkRest[t];
E_rBoligOmkRest[t]$(tx0[t]).. 
      rBoligOmkRest[t]  =E=  (vR['bol',t] + vLoensum['bol',t] + vSelvstLoen['bol',t] + vtGrund['bol',t])
                           * qKBolig[t-1] / qK['iB','bol',t-1] / (vBolig[aTot,t-1]/fv) 
                           + rBoligOmkRestRes[t];
EQUATION E_vHhFraVirkKap[t];
E_vHhFraVirkKap[t]$(tx0[t]).. 
      vHhFraVirkKap[t]  =E=  rHhFraVirkKap[t] * vBNP[t];
EQUATION E_vHhFraVirkOev[t];
E_vHhFraVirkOev[t]$(tx0[t]).. 
      vHhFraVirkOev[t]  =E=  rHhFraVirkOev[t] * vBNP[t];
EQUATION E_vHhFraVirk[t];
E_vHhFraVirk[t]$(tx0[t]).. 
      vHhFraVirk[t]  =E=  vHhFraVirkKap[t] + vHhFraVirkOev[t];
EQUATION E_vHhTilUdl[t];
E_vHhTilUdl[t]$(tx0[t]).. 
      vHhTilUdl[t]  =E=  rHhTilUdl[t] * vBNP[t];
EQUATION E_mrHhAfk[t];
E_mrHhAfk[t]$(tx0[t] and t.val > 2015).. 
      mrHhxAfk[t]  =E=  
      ( dvHh2dvHhx['IndlAktier',t-1] * rHhAfk['IndlAktier',t]
        + dvHh2dvHhx['UdlAktier',t-1] * rHhAfk['UdlAktier',t]
      ) * (1-tAktie[t])  
      + ( dvHh2dvHhx['Obl',t-1] * rHhAfk['obl',t]
        + dvHh2dvHhx['Bank',t-1] * rHhAfk['Bank',t]
        - dvHh2dvHhx['BankGaeld',t-1] * rHhAfk['BankGaeld',t]
      ) * (1 - tKommune[t] - mrNet2KapIndPos[t] * (tBund[t] + tTop[t] * rtTopRenter[t]))
      + jmrHhAfk[t];
EQUATION E_mrRealKredAfk[t];
E_mrRealKredAfk[t]$(tx0[t] and t.val > 2015).. 
      mrRealKredAfk[t]  =E=  rHhAfk['RealKred',t]
                           * (1 - tKommune[t] - mrNet2KapIndPos[t] * (tBund[t] + tTop[t] * rtTopRenter[t]));
EQUATION E_mtAktie[t];
E_mtAktie[t]$(tx0[t] and t.val > 2015)..  mtAktie[t]  =E=  tAktie[t] + cmtAktie[t];
EQUATION E_rHhAfk[portf,t];
E_rHhAfk[portf,t]$(tx0[t] and t.val > 1994).. 
      rHhAfk[portf,t]  =E=  rRente[portf,t] + jrHhRente[portf,t] + rOmv[portf,t] + jrHhOmv[portf,t];
EQUATION E_vHhxAfk[a,t];
E_vHhxAfk[a,t]$(a.val > 0 and tx0[t] and t.val > 2015).. 
      vHhxAfk[a,t]  =E=  sum(akt$(not sameas[akt,'Pens']), rHhAfk[akt,t] * vHh[akt,a-1,t-1]/fv)
                     - rHhAfk['BankGaeld',t] * vHh['BankGaeld',a-1,t-1]/fv 
                     + jvHhxAfk[a,t];
EQUATION E_vHhxAfk_aTot[t];
E_vHhxAfk_aTot[t]$(tx0[t] and t.val > 1994).. 
      vHhxAfk[aTot,t]  =E=  sum(akt$(not sameas[akt,'Pens']), rHhAfk[akt,t] * vHh[akt,aTot,t-1]/fv)
                        - rHhAfk['BankGaeld',t] * vHh['BankGaeld',aTot,t-1]/fv 
                        + jvHhxAfk[aTot,t];
EQUATION E_jvHhxAfk_aTot[t];
E_jvHhxAfk_aTot[t]$(tx0[t] and t.val > 2015).. 
      jvHhxAfk[aTot,t]  =E=  sum(a$(a.val > 0), jvHhxAfk[a,t] * nPop[a-1,t-1]);
EQUATION E_vHhRenter_akt[akt,t];
E_vHhRenter_akt[akt,t]$(tx0[t] and t.val > 1994).. 
      vHhRenter[akt,t]  =E=  (rRente[akt,t] + jrHhRente[akt,t]) * vHh[akt,atot,t-1]/fv;
EQUATION E_vHhRenter_pas[pas,t];
E_vHhRenter_pas[pas,t]$(tx0[t] and t.val > 1994).. 
      vHhRenter[pas,t]  =E=  (rRente[pas,t] + jrHhRente[pas,t]) * vHh[pas,atot,t-1]/fv;
EQUATION E_vHhRenter_NetFin[t];
E_vHhRenter_NetFin[t]$(tx0[t] and t.val > 1994).. 
      vHhRenter['NetFin',t]  =E=  sum(akt, vHhRenter[akt,t]) - sum(pas, vHhRenter[pas,t]) + jvHhRenter[t];
EQUATION E_vHhOmv_akt[akt,t];
E_vHhOmv_akt[akt,t]$(tx0[t] and t.val > 1994).. 
      vHhOmv[akt,t]  =E=  (rOmv[akt,t] + jrHhOmv[akt,t]) * vHh[akt,atot,t-1]/fv;
EQUATION E_vHhOmv_pas[pas,t];
E_vHhOmv_pas[pas,t]$(tx0[t] and t.val > 1994).. 
      vHhOmv[pas,t]  =E=  (rOmv[pas,t] + jrHhOmv[pas,t]) * vHh[pas,atot,t-1]/fv;
EQUATION E_vHhOmv_NetFin[t];
E_vHhOmv_NetFin[t]$(tx0[t] and t.val > 1994).. 
      vHhOmv['NetFin',t]  =E=  sum(akt, vHhOmv[akt,t]) - sum(pas, vHhOmv[pas,t]) + jvHhOmv[t];
EQUATION E_vHh_NetFin[a,t];
E_vHh_NetFin[a,t]$(tx0[t] and t.val > 2015).. 
      vHh['NetFin',a,t]  =E=  vHhx[a,t] + vHh['Pens',a,t] - vHh['RealKred',a,t];
EQUATION E_vHh_NetFin_aTot[t];
E_vHh_NetFin_aTot[t]$(tx0[t] and t.val > 2015).. 
      vHh['NetFin',aTot,t]  =E=  vHh['NetFin',aTot,t-1]/fv 
                             + vHhRenter['NetFin',t] + vHhOmv['NetFin',t]
                             + vWHh[aTot,t]
                             + vOvf['hh',t]
                             + vHhNFErest[aTot,t]
                             - vtHh[aTot,t]
                             - (vC[cTot,t] - vLejeAfEjerBolig[t]) 
                             - vIBolig[t]    
                             + jvHh[t];
EQUATION E_jvHh[t];
E_jvHh[t]$(tx0[t] and t.val > 2015).. 
      vHh['NetFin',aTot,t]  =E=  sum(a, vHh['NetFin',a,t] * nPop[a,t]);
EQUATION E_pBoligRigid_a18[a,t];
E_pBoligRigid_a18[a,t]$(a.val = 18 and tx0[t] and t.val > 2015).. 
      pBoligRigid[a,t]  =E=  (1-rRealKredTraeg) * pBolig[t] + rRealKredTraeg * pBoligRigid[a,t-1]/fp;
EQUATION E_pBoligRigid[a,t];
E_pBoligRigid[a,t]$(18 < a.val and a.val <= 100 and tx0[t] and t.val > 2015).. 
      pBoligRigid[a,t]  =E=  (1 - qBolig[a-1,t-1]/fq / qBolig[a,t]) * pBolig[t]
                         + qBolig[a-1,t-1]/fq / qBolig[a,t]
                         * ((1-rRealKredTraeg) * pBolig[t] + rRealKredTraeg * pBoligRigid[a-1,t-1]/fp);
EQUATION E_vHh_RealKred[a,t];
E_vHh_RealKred[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      vHh['RealKred',a,t]  =E=  rRealKred2Bolig[a,t] * vBolig[a,t];
EQUATION E_vHh_RealKred_aTot[t];
E_vHh_RealKred_aTot[t]$(tx0[t] and t.val > 2015).. 
      vHh['RealKred',aTot,t]  =E=  rRealKred2Bolig[aTot,t] * vBolig[aTot,t];
EQUATION E_rRealKred2Bolig[a,t];
E_rRealKred2Bolig[a,t]$(a18t100[a] and tx0[t] and t.val > 2015).. 
      rRealKred2Bolig[a,t]  =E=  (rRealKred2Bolig_a[a,t] + rRealKred2Bolig_t[t]) * pBoligRigid[a,t] / pBolig[t];
EQUATION E_rRealKred2Bolig_aTot[t];
E_rRealKred2Bolig_aTot[t]$(tx0[t] and t.val > 2015).. 
      rRealKred2Bolig[aTot,t]  =E=  sum(a, vHh['RealKred',a,t] * nPop[a,t]) / vBolig[aTot,t];
EQUATION E_vHhPensAfk[pens,a,t];
E_vHhPensAfk[pens,a,t]$(a.val >= 15 and tx0[t] and t.val > 2015).. 
      vHhPensAfk[pens,a,t]  =E=  (1 - tPAL[t] * ftPAL[t]) * rHhAfk['Pens',t] * vHh[pens,a-1,t-1]/fv 
                             + jvHhPensAfk[pens,a,t];
EQUATION E_vHhPensAfk_aTot[pens,t];
E_vHhPensAfk_aTot[pens,t]$(tx0[t] and t.val > 2015).. 
      vHhPensAfk[pens,aTot,t]  =E=  (1 - tPAL[t] * ftPAL[t]) * rHhAfk['Pens',t] * vHh[pens,aTot,t-1]/fv
                                + jvHhPensAfk[pens,aTot,t];
EQUATION E_jvHhPensAfk_aTot[pens,t];
E_jvHhPensAfk_aTot[pens,t]$(tx0[t] and t.val > 2015).. 
      jvHhPensAfk[pens,aTot,t]  =E=  sum(a, jvHhPensAfk[pens,a,t] * nPop[a-1,t-1]);
EQUATION E_jvHhPensAfk_pens[a,t];
E_jvHhPensAfk_pens[a,t]$(tx0[t] and t.val > 2015).. 
      jvHhPensAfk['Pens',a,t]  =E=  sum(pens, jvHhPensAfk[pens,a,t]);
EQUATION E_jvHhPensAfk_pens_atot[t];
E_jvHhPensAfk_pens_atot[t]$(tx0[t] and t.val > 2015).. 
      jvHhPensAfk['Pens',aTot,t]  =E=  sum(pens, jvHhPensAfk[pens,aTot,t]);
EQUATION E_vHh_pens[pens,a,t];
E_vHh_pens[pens,a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vHh[pens,a,t]  =E=  (vHh[pens,a-1,t-1]/fv + vHhPensAfk[pens,a,t] - vPensArv[pens,a,t] * (1-rOverlev[a-1,t-1]))
                      * nPop[a-1,t-1] / nPop[a,t]
                      + vPensIndb[pens,a,t] - vPensUdb[pens,a,t];
EQUATION E_vHh_pens_aTot[pens,t];
E_vHh_pens_aTot[pens,t]$(tx0[t] and t.val > 2015).. 
      vHh[pens,aTot,t]  =E=  vHh[pens,aTot,t-1]/fv 
                         + vHhPensAfk[pens,aTot,t]
                         + vPensIndb[pens,aTot,t]
                         - vPensUdb[pens,aTot,t];
EQUATION E_vPensIndb[pens,a,t];
E_vPensIndb[pens,a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vPensIndb[pens,a,t]  =E=  rPensIndb[pens,a,t] * vWHh[a,t] * nLHh[a,t] / nPop[a,t];
EQUATION E_vPensIndb_aTot[pens,t];
E_vPensIndb_aTot[pens,t]$(tx0[t] and t.val > 2015).. 
      vPensIndb[pens,aTot,t]  =E=  rPensIndb[pens,aTot,t] * vWHh[aTot,t];
EQUATION E_rPensIndb_aTot[pens,t];
E_rPensIndb_aTot[pens,t]$(tx0[t] and t.val > 2015).. 
      rPensIndb[pens,aTot,t] * vWHh[aTot,t]  =E=  sum(a, vPensIndb[pens,a,t] * nPop[a,t]);
EQUATION E_vPensUdb[pens,a,t];
E_vPensUdb[pens,a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vPensUdb[pens,a,t] * (1-rPensUdb[pens,a,t])  =E=  rPensUdb[pens,a,t] * vHh[pens,a,t];
EQUATION E_vPensArv[pens,a,t];
E_vPensArv[pens,a,t]$(a.val >= 15 and tx0[t] and t.val > 2015).. 
      vPensArv[pens,a,t]  =E=  rPensArv[pens,a,t] * (vHh[pens,a-1,t-1]/fv + vHhPensAfk[pens,a,t]);
EQUATION E_vPensArv_aTot[pens,t];
E_vPensArv_aTot[pens,t]$(tx0[t] and t.val > 2015).. 
      vPensArv[pens,aTot,t]  =E=  sum(a, vPensArv[pens,a,t] * nPop[a-1,t-1] * (1-rOverlev[a-1,t-1]));
EQUATION E_vPensUdb_aTot[pens,t];
E_vPensUdb_aTot[pens,t]$(tx0[t] and t.val > 2015).. 
      vPensUdb[pens,aTot,t] * (1-rPensUdb[pens,aTot,t])  =E=  rPensUdb[pens,aTot,t] * vHh[pens,aTot,t];
EQUATION E_rPensUdb_aTot[pens,t];
E_rPensUdb_aTot[pens,t]$(tx0[t] and not (sameas['alder',pens] and t.val < 2014) and t.val > 2015)..   
      vPensUdb[pens,aTot,t]  =E=  sum(a, vPensUdb[pens,a,t] * nPop[a,t]) + vPensArv[pens,aTot,t];
EQUATION E_vHh_pension[a,t];
E_vHh_pension[a,t]$(a15t100[a] and tx0[t] and t.val > 2015)..  vHh['Pens',a,t]  =E=  sum(pens, vHh[pens,a,t]);
EQUATION E_vHh_pension_aTot[t];
E_vHh_pension_aTot[t]$(tx0[t] and t.val > 2015)..  vHh['Pens',aTot,t]  =E=  sum(pens, vHh[pens,aTot,t]);
EQUATION E_vPensIndb_pension[a,t];
E_vPensIndb_pension[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vPensIndb['Pens',a,t]  =E=  sum(pens, vPensIndb[pens,a,t]);
EQUATION E_vPensIndb_pension_aTot[t];
E_vPensIndb_pension_aTot[t]$(tx0[t] and t.val > 2015).. 
      vPensIndb['Pens',aTot,t]  =E=  sum(pens, vPensIndb[pens,aTot,t]);
EQUATION E_vPensUdb_pension[a,t];
E_vPensUdb_pension[a,t]$(a15t100[a] and tx0[t] and t.val > 2015).. 
      vPensUdb['Pens',a,t]  =E=  sum(pens, vPensUdb[pens,a,t]);
EQUATION E_vPensUdb_pension_aTot[t];
E_vPensUdb_pension_aTot[t]$(tx0[t] and t.val > 2015).. 
      vPensUdb['Pens',aTot,t]    =E=  sum(pens, vPensUdb[pens,aTot,t]);
EQUATION E_vPensArv_pension[a,t];
E_vPensArv_pension[a,t]$(a.val >= 15 and tx0[t] and t.val > 2015).. 
      vPensArv['Pens',a,t]  =E=  sum(pens, vPensArv[pens,a,t]);
EQUATION E_vPensArv_pension_aTot[t];
E_vPensArv_pension_aTot[t]$(tx0[t] and t.val > 2015).. 
      vPensArv['Pens',aTot,t]    =E=  sum(pens, vPensArv[pens,aTot,t]);
EQUATION E_vHhPensAfk_pension[a,t];
E_vHhPensAfk_pension[a,t]$(a.val >= 15 and tx0[t] and t.val > 2015).. 
      vHhPensAfk['Pens',a,t]  =E=  sum(pens, vHhPensAfk[pens,a,t]);
EQUATION E_vHhPensAfk_pension_aTot[t];
E_vHhPensAfk_pension_aTot[t]$(tx0[t] and t.val > 2015).. 
      vHhPensAfk['Pens',aTot,t]  =E=  sum(pens, vHhPensAfk[pens,aTot,t]);
EQUATION E_vHh_BankGaeld[a,t];
E_vHh_BankGaeld[a,t]$(tx0[t] and t.val > 2015).. 
      vHh['BankGaeld',a,t]  =E=  vHhFinAkt[a,t] - vHhx[a,t];
EQUATION E_vHh_BankGaeld_aTot[t];
E_vHh_BankGaeld_aTot[t]$(tx0[t]).. 
      vHh['BankGaeld',aTot,t]  =E=  vHhFinAkt[aTot,t] - vHhx[aTot,t];
EQUATION E_vHhFinAkt[a,t];
E_vHhFinAkt[a,t]$(tx0[t] and t.val > 2015).. 
      vHhFinAkt[a,t]  =E=  vHh['Bank',a,t] + vHh['IndlAktier',a,t] + vHh['UdlAktier',a,t] + vHh['obl',a,t];
EQUATION E_vHhFinAkt_aTot[t];
E_vHhFinAkt_aTot[t]$(tx0[t]).. 
      vHhFinAkt[aTot,t]  =E=  vHh['Bank',aTot,t] + vHh['IndlAktier',aTot,t] + vHh['UdlAktier',aTot,t] + vHh['obl',aTot,t];
EQUATION E_vHh_akt[akt,a,t];
E_vHh_akt[akt,a,t]$(tx0[t] and fin_akt[akt] and t.val > 2015).. 
      vHh[akt,a,t]  =E=  (cHh_a[akt,a,t] + cHh_t[akt,t]) * vBVT2hLsnit[t]
                     + dvHh2dvHhx[akt,t] * vHhx[a,t]
                     + dvHh2dvBolig[akt,t]  * (vHhx[aTot,t]/vBolig[aTot,t]) * pBoligRigid[a,t] * qBoligR[a,t]
                     + dvHh2dvPensIndb[akt,t] * vHhx[aTot,t]/vPensIndb['Pens',aTot,t] * vPensIndb['Pens',a,t];
EQUATION E_vHh_aTot[akt,t];
E_vHh_aTot[akt,t]$(tx0[t] and fin_akt[akt] and t.val > 2015).. 
      vHh[akt,aTot,t]  =E=  sum(a, vHh[akt,a,t] * nPop[a,t]);
EQUATION E_vHhNFE[t];
E_vHhNFE[t]$(tx0[t]).. 
      vHhNFE[t]  =E=  vHh['NetFin',aTot,t] - vHh['NetFin',aTot,t-1]/fv - vHhOmv['NetFin',t];

# ----------------------------------------------------------------------------------------------------
#  Define B_HHincome model
# ----------------------------------------------------------------------------------------------------
Model B_HHincome /
E_vDispInd, E_vLejeAfEjerBolig, E_vNetKolPensUdb, E_vNetIndPensUdb, E_vKolPensRenter, E_vHhInd_aTot, E_vHhInd, E_vtHh_aTot, E_rBoligOmkRest, E_vHhFraVirkKap, E_vHhFraVirkOev, E_vHhFraVirk, E_vHhTilUdl, E_mrHhAfk, E_mrRealKredAfk, E_mtAktie, E_rHhAfk, E_vHhxAfk, E_vHhxAfk_aTot, E_jvHhxAfk_aTot, E_vHhRenter_akt, E_vHhRenter_pas, E_vHhRenter_NetFin, E_vHhOmv_akt, E_vHhOmv_pas, E_vHhOmv_NetFin, E_vHh_NetFin, E_vHh_NetFin_aTot, E_jvHh, E_pBoligRigid_a18, E_pBoligRigid, E_vHh_RealKred, E_vHh_RealKred_aTot, E_rRealKred2Bolig, E_rRealKred2Bolig_aTot, E_vHhPensAfk, E_vHhPensAfk_aTot, E_jvHhPensAfk_aTot, E_jvHhPensAfk_pens, E_jvHhPensAfk_pens_atot, E_vHh_pens, E_vHh_pens_aTot, E_vPensIndb, E_vPensIndb_aTot, E_rPensIndb_aTot, E_vPensUdb, E_vPensArv, E_vPensArv_aTot, E_vPensUdb_aTot, E_rPensUdb_aTot, E_vHh_pension, E_vHh_pension_aTot, E_vPensIndb_pension, E_vPensIndb_pension_aTot, E_vPensUdb_pension, E_vPensUdb_pension_aTot, E_vPensArv_pension, E_vPensArv_pension_aTot, E_vHhPensAfk_pension, E_vHhPensAfk_pension_aTot, E_vHh_BankGaeld, E_vHh_BankGaeld_aTot, E_vHhFinAkt, E_vHhFinAkt_aTot, E_vHh_akt, E_vHh_aTot, E_vHhNFE
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;  
  
# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\post_model.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Module for calculating pure output variables not present in the model
# - This model is run after the main model only
# ======================================================================================================================

# ======================================================================================================================
# Variable definition
# - Define variables and group them based on endogeneity, inflation or growth adjustment, and how they should be forecast (if exogenous)
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "variables":
# ----------------------------------------------------------------------------------------------------
# If condition evaluated to false
# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------



# ======================================================================================================================
# Equations
# ======================================================================================================================

# ----------------------------------------------------------------------------------------------------
#  IF "equations" == "equations":
# ----------------------------------------------------------------------------------------------------

  
# -----------------------------------------------B_post-----------------------------------------------
#  Initialize B_post equation block
# ----------------------------------------------------------------------------------------------------
EQUATION E_vW_spTot[t];
E_vW_spTot[t]$(tx0[t])..  vW[spTot,t] * nL[spTot,t] =E=  sum(sp, vW[sp,t] * nL[sp,t]);
EQUATION E_vW_sTot[t];
E_vW_sTot[t]$(tx0[t])..  vW[sTot,t] * nL[sTot,t]  =E=  sum(s, vW[s,t] * nL[s,t]);
EQUATION E_qLxUdn[s,t];
E_qLxUdn[s,t]$(tx0[t])..  qLxUdn[s,t]  =E=  qL[s,t] / rLUdn[s,t];
EQUATION E_pLxUdn[sp,t];
E_pLxUdn[sp,t]$(tx0[t])..  pLxUdn[sp,t]  =E=  pL[sp,t] * rLUdn[sp,t];
EQUATION E_nSoegBase[t];
E_nSoegBase[t]$(tx0[t] and t.val > 2015)..  nSoegBase[t]  =E=  nSoegBaseHh[aTot,t] + nSoegBaseUdl[t];
EQUATION E_pI_s_spTot[i,t];
E_pI_s_spTot[i,t]$(tx0[t] and not sameas[i,'il'])..  pI_s[i,spTot,t] * qI_s[i,spTot,t]  =E=  vI_s[i,spTot,t];
EQUATION E_qI_s_spTot[i,t];
E_qI_s_spTot[i,t]$(tx0[t] and not sameas[i,'il']).. 
      qI_s[i,spTot,t] * pI_s[i,spTot,t-1]/fp  =E=  sum(sp, pI_s[i,sp,t-1]/fp * qI_s[i,sp,t]) - sameas[i,'iB'] * (pI_s[i,'bol',t-1]/fp * qIBolig[t]);
EQUATION E_vI_s_spTot[i,t];
E_vI_s_spTot[i,t]$(tx0[t] and not sameas[i,'il'])..  vI_s[i,spTot,t]  =E=  sum(sp, vI_s[i,sp,t]) - sameas[i,'iB'] * vIBolig[t];
EQUATION E_vhWVirk[t];
E_vhWVirk[t]$(tx0[t])..  vhWVirk[t]  =E=  sum(sp, vLoensum[sp,t] + vSelvstLoen[sp,t]) / (hVirk[t] * sum(sp, nL[sp,t]));
EQUATION E_vOffLoen[t];
E_vOffLoen[t]$(tx0[t])..  vOffLoen[t]  =E=  (1 + tL['off',t]) * vLoensum['off',t] / (hOff[t] * nL['off',t]);
EQUATION E_qI_iTot_s[s,t];
E_qI_iTot_s[s,t]$(tx0[t])..  qI_s[iTot,s,t] * pI_s[iTot,s,t-1]/fp  =E=  sum(i, pI_s[i,s,t-1]/fp * qI_s[i,s,t]);
EQUATION E_pI_iTot_s[s,t];
E_pI_iTot_s[s,t]$(tx0[t])..  pI_s[iTot,s,t] * qI_s[iTot,s,t]  =E=  vI_s[iTot,s,t];
EQUATION E_vHhFormue[a,t];
E_vHhFormue[a,t]$(a0t100[a] and tx0[t] and t.val > 2015).. 
      vHhFormue[a,t]  =E=  vHh['NetFin',a,t] + vBolig[a,t] - tPensKor[t] * (vHh['pensx',a,t] + vHh['kap',a,t]);
EQUATION E_vHhFormue_tot[t];
E_vHhFormue_tot[t]$(tx0[t]).. 
      vHhFormue[aTot,t]  =E=  vHh['NetFin',aTot,t] + vBolig[aTot,t] - tPensKor[t] * (vHh['pensx',aTot,t] + vHh['kap',aTot,t]);
EQUATION E_vHhPens[a,t];
E_vHhPens[a,t]$(a0t100[a] and tx0[t]).. 
      vHhPens[a,t]  =E=  vHh['pens',a,t] - tPensKor[t] * (vHh['pensx',a,t] + vHh['kap',a,t]);
EQUATION E_vHhPens_tot[t];
E_vHhPens_tot[t]$(tx0[t])..  vHhPens[aTot,t]  =E=  sum(a, vHhPens[a,t] * nPop[a,t]);
EQUATION E_vHhFormueR[a,t];
E_vHhFormueR[a,t]$(a0t100[a] and tx0[t]).. 
      vHhFormueR[a,t]  =E=  (vHhFormue[a,t]
                           - rHtM * (1- tPensKor[t]) * vHh['pensx',a,t]
                           - rHtM * (1-rRealKred2Bolig[a,t]) * pBolig[t] * qBoligHtM[a,t]) / (1-rHtM);
EQUATION E_vHhFormueR_tot[t];
E_vHhFormueR_tot[t]$(tx0[t])..  vHhFormueR[aTot,t]  =E=  sum(a, (1-rHtM) * vHhFormueR[a,t] * nPop[a,t]);
EQUATION E_vHhxR[a,t];
E_vHhxR[a,t]$(a0t100[a] and tx0[t]).. 
      vHhxR[a,t]  =E=  (vHhx[a,t]) / (1-rHtM);
EQUATION E_vHhxR_tot[t];
E_vHhxR_tot[t]$(tx0[t])..  vHhxR[aTot,t]  =E=  sum(a, (1-rHtM) * vHhxR[a,t] * nPop[a,t]);
EQUATION E_vHhPensR[a,t];
E_vHhPensR[a,t]$(a0t100[a] and tx0[t]).. 
      vHhPensR[a,t]  =E=  ((1 - tPensKor[t]) * (vHh['kap',a,t] + ( 1 - rHtM) * vHh['pensx',a,t]) + vHh['alder',a,t]) / (1-rHtM);
EQUATION E_vHhPensR_tot[t];
E_vHhPensR_tot[t]$(tx0[t])..  vHhPensR[aTot,t]  =E=  sum(a, (1-rHtM) * vHhPensR[a,t] * nPop[a,t]);
EQUATION E_vFrivaerdiR[a,t];
E_vFrivaerdiR[a,t]$(a0t100[a] and tx0[t]).. 
      vFrivaerdiR[a,t]  =E=  (pBolig[t] * (1-rRealKred2Bolig[a,t]) * qBoligR[a,t]);
EQUATION E_vFrivaerdiR_tot[t];
E_vFrivaerdiR_tot[t]$(tx0[t])..  vFrivaerdiR[aTot,t]  =E=  sum(a, (1-rHtM) * vFrivaerdiR[a,t] * nPop[a,t]);
EQUATION E_vHhIndR[a,t];
E_vHhIndR[a,t]$(a0t100[a] and tx0[t]).. 
      vHhIndR[a,t]  =E=  (vHhInd[a,t] - rHtM * vHhIndHtM[a,t]) / (1-rHtM);
EQUATION E_vHhIndR_tot[t];
E_vHhIndR_tot[t]$(tx0[t])..  vHhIndR[aTot,t]  =E=  sum(a, (1-rHtM) * vHhIndR[a,t] * nPop[a,t]);
EQUATION E_vHhIndMvR[a,t];
E_vHhIndMvR[a,t]$(a0t100[a] and tx0[t]).. 
      vHhIndMvR[a,t]  =E=  vHhIndR[a,t] + (rRealKred2Bolig[a,t] * pBolig[t] - rRealKred2Bolig[a-1,t-1] * pBolig[t-1]) 
                                        * qBoligR[a-1,t-1]/fv * fMigration[a,t];
EQUATION E_vHhIndMvR_tot[t];
E_vHhIndMvR_tot[t]$(tx0[t])..  vHhIndMvR[aTot,t]  =E=  sum(a, (1-rHtM) * vHhIndMvR[a,t] * nPop[a,t]);
EQUATION E_vCR_NR[a,t];
E_vCR_NR[a,t]$(a0t100[a] and tx0[t]).. 
      vCR_NR[a,t]  =E=  pC['cikkebol',t] * qCR[a,t] 
                    + pC['cbol',t] * qC['cbol',t] * (qKLejebolig[t-1] * (vCLejebolig[a,t] / vCLejebolig[aTot,t])
                                                     + (qKBolig[t-1]-qKLejebolig[t-1]) * (qBoligR[a,t] / qBolig[aTot,t]) )/qKBolig[t-1];
EQUATION E_vCR_NR_tot[t];
E_vCR_NR_tot[t]$(tx0[t])..  vCR_NR[aTot,t]  =E=  sum(a, (1-rHtM) * vCR_NR[a,t] * nPop[a,t]);
EQUATION E_qCR_NR[a,t];
E_qCR_NR[a,t]$(a0t100[a] and tx0[t]).. 
      qCR_NR[a,t]  =E=  vCR_NR[a,t] / pC['ctot',t];
EQUATION E_qCR_NR_tot[t];
E_qCR_NR_tot[t]$(tx0[t])..  qCR_NR[aTot,t]  =E=  vCR_NR[aTot,t] / pC['ctot',t];
EQUATION E_vHhNetFinR[a,t];
E_vHhNetFinR[a,t]$(a0t100[a] and tx0[t]).. 
      vHhNetFinR[a,t]  =E=  vHh['NetFin',a,t] - vHhNetFinHtM[a,t] * rHtM / (1-rHtM);
EQUATION E_vHhNetFinR_tot[t];
E_vHhNetFinR_tot[t]$(tx0[t])..  vHhNetFinR[aTot,t]  =E=  sum(a,  rHtM * vHhNetFinR[a,t] * nPop[a,t]);
EQUATION E_vBoligUdgiftR[a,t];
E_vBoligUdgiftR[a,t]$(tx0[t])..  vBoligUdgift[a,t]  =E=  rHtM * vBoligUdgiftHtM[a,t] + vBoligUdgiftR[a,t] * (1-rHtM);
EQUATION E_vBoligUdgiftR_tot[t];
E_vBoligUdgiftR_tot[t]$(tx0[t])..  vBoligUdgift[aTot,t]  =E=  vBoligUdgiftHtM[aTot,t] + vBoligUdgiftR[aTot,t] + vBoligUdgiftArv[t];
EQUATION E_vBoligR[a,t];
E_vBoligR[a,t]$(a18t100[a] and tx0[t] and t.val > 2015)..  vBoligR[a,t]  =E=  pBolig[t] * qBoligR[a,t];
EQUATION E_vBoligR_tot[t];
E_vBoligR_tot[t]$(tx0[t] and t.val > 2015)..  vBoligR[aTot,t]  =E=  pBolig[t] * qBoligR[aTot,t];
EQUATION E_vHhFormueHtM[a,t];
E_vHhFormueHtM[a,t]$(a0t100[a] and tx0[t]).. 
      vHhFormueHtM[a,t]  =E=   (1 - tPensKor[t]) * vHh['pensx',a,t] + pBolig[t] * (1-rRealKred2Bolig[a,t]) * qBoligHtM[a,t];
EQUATION E_vHhFormueHtM_tot[t];
E_vHhFormueHtM_tot[t]$(tx0[t])..  vHhFormueHtM[aTot,t]  =E=  sum(a, rHtM * vHhFormueHtM[a,t] * nPop[a,t]);
EQUATION E_vHhPensHtM[a,t];
E_vHhPensHtM[a,t]$(a0t100[a] and tx0[t]).. 
      vHhPensHtM[a,t]  =E=  (1 - tPensKor[t]) * vHh['pensx',a,t];
EQUATION E_vHhPensHtM_tot[t];
E_vHhPensHtM_tot[t]$(tx0[t])..  vHhPensHtM[aTot,t]  =E=  sum(a, rHtM * vHhPensHtM[a,t] * nPop[a,t]);
EQUATION E_vFrivaerdiHtM[a,t];
E_vFrivaerdiHtM[a,t]$(a0t100[a] and tx0[t]).. 
      vFrivaerdiHtM[a,t]  =E=  (pBolig[t] * (1-rRealKred2Bolig[a,t]) * qBoligHtM[a,t]);
EQUATION E_vFrivaerdiHtM_tot[t];
E_vFrivaerdiHtM_tot[t]$(tx0[t])..  vFrivaerdiHtM[aTot,t]  =E=  sum(a, rHtM * vFrivaerdiHtM[a,t] * nPop[a,t]);
EQUATION E_vHhIndHtM[a,t];
E_vHhIndHtM[a,t]$(a0t100[a] and tx0[t]).. 
      vHhIndHtM[a,t]  =E=  vHhInd[a,t] - (vPensUdb['Pens',a,t] - vPensIndb['Pens',a,t]) 
                         + vPensUdb['PensX',a,t] - vPensIndb['PensX',a,t] + vtAktie[a,t] - vArvKorrektion[a,t];
EQUATION E_vHhIndHtM_tot[t];
E_vHhIndHtM_tot[t]$(tx0[t])..  vHhIndHtM[aTot,t]  =E=  sum(a, rHtM * vHhIndHtM[a,t] * nPop[a,t]);
EQUATION E_vHhIndMvHtM[a,t];
E_vHhIndMvHtM[a,t]$(a0t100[a] and tx0[t]).. 
      vHhIndMvHtM[a,t]  =E=  vHhIndR[a,t] + (rRealKred2Bolig[a,t] * pBolig[t] - rRealKred2Bolig[a-1,t-1] * pBolig[t-1]) 
                                        * qBoligHtM[a-1,t-1]/fv * fMigration[a,t];
EQUATION E_vHhIndMvHtM_tot[t];
E_vHhIndMvHtM_tot[t]$(tx0[t])..  vHhIndMvHtM[aTot,t]  =E=  sum(a, rHtM * vHhIndMvHtM[a,t] * nPop[a,t]);
EQUATION E_vCHtM_NR[a,t];
E_vCHtM_NR[a,t]$(a0t100[a] and tx0[t]).. 
      vCHtM_NR[a,t]  =E=  pC['cikkebol',t] * qCHtM[a,t] 
                      + pC['cbol',t] * qC['cbol',t] * (qKLejebolig[t-1] * (vCLejebolig[a,t] / vCLejebolig[aTot,t])
                                                       + (qKBolig[t-1]-qKLejebolig[t-1]) * (qBoligHtM[a,t] / qBolig[aTot,t]) )/qKBolig[t-1];
EQUATION E_vCHtM_NR_tot[t];
E_vCHtM_NR_tot[t]$(tx0[t])..  vCHtM_NR[aTot,t]  =E=  sum(a, rHtM * vCHtM_NR[a,t] * nPop[a,t]);
EQUATION E_qCHtM_NR[a,t];
E_qCHtM_NR[a,t]$(a0t100[a] and tx0[t]).. 
      qCHtM_NR[a,t]  =E=  vCHtM_NR[a,t] / pC['ctot',t];
EQUATION E_qCHtM_NR_tot[t];
E_qCHtM_NR_tot[t]$(tx0[t])..  qCHtM_NR[aTot,t]  =E=  vCHtM_NR[aTot,t] / pC['ctot',t];
EQUATION E_vHhNetFinHtM[a,t];
E_vHhNetFinHtM[a,t]$(a0t100[a] and tx0[t]).. 
      vHhNetFinHtM[a,t]  =E=  vHh['PensX',a,t] - pBolig[t] * rRealKred2Bolig[a,t] * qBoligHtM[a,t];
EQUATION E_vHhNetFinHtM_tot[t];
E_vHhNetFinHtM_tot[t]$(tx0[t])..  vHhNetFinHtM[aTot,t]  =E=  sum(a,  rHtM * vHhNetFinHtM[a,t] * nPop[a,t]);
EQUATION E_vC_NR[a,t];
E_vC_NR[a,t]$(a0t100[a] and tx0[t]).. 
      vC_NR[a,t]  =E=  (1-rHtM) * vCR_NR[a,t] + rHtM * vCHtM_NR[a,t];
EQUATION E_vC_NR_tot[t];
E_vC_NR_tot[t]$(tx0[t])..  vC_NR[aTot,t]  =E=  sum(a, vC_NR[a,t] * nPop[a,t]);
EQUATION E_qC_NR[a,t];
E_qC_NR[a,t]$(a0t100[a] and tx0[t]).. 
      qC_NR[a,t]  =E=  vC_NR[a,t] / pC['cTot',t];
EQUATION E_qC_NR_tot[t];
E_qC_NR_tot[t]$(tx0[t])..  qC_NR[aTot,t]  =E=  vC_NR[aTot,t] / pC['cTot',t];
EQUATION E_vHhIndMv[a,t];
E_vHhIndMv[a,t]$(a0t100[a] and tx0[t]).. 
      vHhIndMv[a,t]  =E=  vHhInd[a,t] + (rRealKred2Bolig[a,t] * pBolig[t] - rRealKred2Bolig[a-1,t-1] * pBolig[t-1]) 
                                      * qBolig[a-1,t-1]/fv * fMigration[a,t];
EQUATION E_vHhIndMv_tot[t];
E_vHhIndMv_tot[t]$(tx0[t])..  vHhIndMv[aTot,t]  =E=  sum(a, vHhIndMv[a,t] * nPop[a,t]);

# ----------------------------------------------------------------------------------------------------
#  Define B_post model
# ----------------------------------------------------------------------------------------------------
Model B_post /
E_vW_spTot, E_vW_sTot, E_qLxUdn, E_pLxUdn, E_nSoegBase, E_pI_s_spTot, E_qI_s_spTot, E_vI_s_spTot, E_vhWVirk, E_vOffLoen, E_qI_iTot_s, E_pI_iTot_s, E_vHhFormue, E_vHhFormue_tot, E_vHhPens, E_vHhPens_tot, E_vHhFormueR, E_vHhFormueR_tot, E_vHhxR, E_vHhxR_tot, E_vHhPensR, E_vHhPensR_tot, E_vFrivaerdiR, E_vFrivaerdiR_tot, E_vHhIndR, E_vHhIndR_tot, E_vHhIndMvR, E_vHhIndMvR_tot, E_vCR_NR, E_vCR_NR_tot, E_qCR_NR, E_qCR_NR_tot, E_vHhNetFinR, E_vHhNetFinR_tot, E_vBoligUdgiftR, E_vBoligUdgiftR_tot, E_vBoligR, E_vBoligR_tot, E_vHhFormueHtM, E_vHhFormueHtM_tot, E_vHhPensHtM, E_vHhPensHtM_tot, E_vFrivaerdiHtM, E_vFrivaerdiHtM_tot, E_vHhIndHtM, E_vHhIndHtM_tot, E_vHhIndMvHtM, E_vHhIndMvHtM_tot, E_vCHtM_NR, E_vCHtM_NR_tot, E_qCHtM_NR, E_qCHtM_NR_tot, E_vHhNetFinHtM, E_vHhNetFinHtM_tot, E_vC_NR, E_vC_NR_tot, E_qC_NR, E_qC_NR_tot, E_vHhIndMv, E_vHhIndMv_tot
/;


# ----------------------------------------------------------------------------------------------------
#  ENDIF
# ----------------------------------------------------------------------------------------------------
;  


# ----------------------------------------------------------------------------------------------------------------------
# Main model
# ----------------------------------------------------------------------------------------------------------------------
# We define the model as the combination of equation blocks from each imported module

# -----------------------------------------------G_Endo-----------------------------------------------
#  Initialize G_Endo group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting


# ----------------------------------------------------------------------------------------------------
#  Define M_base model
# ----------------------------------------------------------------------------------------------------
Model M_base /
E_tIOy, E_tIOm, E_tNetAfg_y, E_tNetAfg_m, E_vtMoms, E_vtNetAfg, E_vtAfg, E_vtReg_i, E_vtReg_c, E_vtReg_g, E_vPunktSub, E_vtTold, E_vtGrund, E_vtVirkVaegt, E_vtVirkAM, E_vtAUB, E_vtSubLoen, E_vtNetLoenAfg, E_tL, E_vtNetYAfgRest, E_vtNetYAfg, E_vtMoms_sTot, E_vtNetAfg_sTot, E_vtAfg_sTot, E_vtTold_sTot, E_vtGrund_tot, E_vtVirkVaegt_tot, E_vtVirkAM_tot, E_vtAUB_tot, E_vtSubLoen_tot, E_vtNetLoenAfg_tot, E_vtNetYAfgRest_tot, E_vtNetYAfg_tot, E_vtMoms_cTot, E_vtMoms_gTot, E_vtMoms_xTot, E_vtMoms_rTot, E_vtMoms_iTot, E_vtMoms_dTot, E_vtNetAfg_cTot, E_vtNetAfg_gTot, E_vtNetAfg_xTot, E_vtNetAfg_rTot, E_vtNetAfg_iTot, E_vtNetAfg_dTot, E_vtAfg_cTot, E_vtAfg_gTot, E_vtAfg_xTot, E_vtAfg_rTot, E_vtAfg_iTot, E_vtAfg_dTot, E_vtReg_dTot, E_vtTold_rTot, E_vtTold_iTot, E_vtTold_gTot, E_vtTold_cTot, E_vtTold_xtot, E_vtTold_dTot, E_qXy, E_qXm, E_qX_xTur, E_qX, E_rpXy2pXUdl, E_rpXy2pXUdl_tEnd, E_rpXy2pXUdl_xTur, E_rpXy2pXUdl_xTur_tEnd, E_rpM2pXm, E_qXTraek, E_qXSkala, E_qCTurist, E_uCturisme, E_qKLBR, E_pKLBR, E_qKLB, E_qR, E_pKLB, E_qKL, E_qK_ib, E_pKL, E_qK_im, E_nL, E_nL_xiM, E_qL, E_qKInstOmk_kTot, E_qKInstOmk, E_dqKInstOmk2dqK, E_dqKInstOmk2dqI_s, E_dqKInstOmkLead2dqI_s, E_rKUdn, E_rKUdn_tEnd, E_rKUdn_sTot, E_rKUdnSpBy, E_rLUdn, E_rLUdn_tEnd, E_rLUdn_sTot, E_pK, E_qK_tEnd, E_pTobinsQ, E_pTobinsQ_tEnd, E_ErSkatAfskr, E_ErSkatAfskr_tEnd, E_qI_sp, E_qI_s_iL_private, E_rOffK2Y, E_vI_off, E_qK_off, E_pOffAfskr, E_qOffAfskr, E_vOffAfskr, E_vOffAfskr_tot, E_qOffAfskr_tot, E_pOffAfskr_tot, E_vOffLR, E_qR_off, E_nL_off, E_pKLBR_off, E_vOffIndirInv, E_vOffNyInv, E_vOffDirInv, E_rvOffDirInv2BNP, E_pOffNyInv, E_qOffNyInv, E_rAfkastKrav, E_rAfkastKrav_sTot, E_rVirkDisk, E_rFinAccelPrem, E_rFinAccelPrem_tEnd, E_vFCFxRef, E_rOmv_IndlAktier, E_vAktie, E_vAktieRes, E_vVirkx, E_vAktiex, E_vAktiex_tEnd, E_vAktiex_sTot, E_vAktiex_sTot_tEnd, E_rIndlAktiePrem_sTot, E_rOmv_UdlAktier, E_vFCF_sTot, E_vFCF, E_vEBITDA, E_vEBITDA_tot, E_vEBT_sTot, E_vEBT, E_vEBTx_sTot, E_vEBTx, E_vtSelskabx_sTot, E_vtSelskabx, E_vDividender, E_vUdstedelser, E_vKskat, E_vKskat_kTot, E_vAfskrFradrag, E_vAfskrFradrag_sTot, E_vVirk, E_vVirk_obl, E_vVirk_RealKred, E_rLaan2K, E_vVirkK, E_vVirkK_sTot, E_vVirk_NetFin, E_vVirkLaan_sTot, E_vVirkLaan, E_vVirkFinInd, E_rVirkxAfk, E_vVirkNFE, E_vVirkRenter, E_vVirkOmv, E_rRente_Pension, E_rOmv_Pension, E_vPension_pension, E_vPension_akt, E_rRente_RealKred, E_rRente_Bank, E_rRente_BankGaeld, E_rMarkup, E_pY_sMarkup, E_pY_sMarkup_tEnd, E_pY_zero_markup, E_pY_off, E_jrMarkup, E_srMarkup_udv, E_srMarkup_soe, E_pY_bol, E_pM, E_pXUdl, E_hL, E_hLHh_aTot, E_hLUdl, E_rL2nL, E_nL_spTot, E_nL_tot, E_nOpslag_sTot, E_vWHh, E_fProdHh_tot, E_fProdHh, E_vWHh_tot, E_vWUdl, E_mtInd, E_fDeltag, E_nSoegBaseHh_tot, E_nSoegBaseHh, E_nSoegBaseHh_tEnd, E_nSoegBaseHh_aEND, E_hLHh, E_fZh, E_cZh, E_rOpslag2soeg, E_rJobFinding, E_rMatch, E_nLHh_tot, E_nSoegHh_Tot, E_nLUdl, E_nSoegUdl, E_rSeparation_Tot, E_nLHh_a, E_nSoegHh_a, E_pL, E_pL_tEnd, E_dqLdnL, E_dqLLeaddnL, E_rOpslagOmk, E_rOpslagOmk_sTot, E_dOpslagOmk2dnL, E_dOpslagOmk2dnLLag, E_nOpslag, E_vW, E_vSelvstLoen, E_vSelvstLoen_tot, E_vLoensum, E_vLoensum_sTot, E_vLoensum_spTot, E_fW, E_vhW, E_vhWNy, E_vFFLoenPos0, E_vFFLoenPos, E_vFFLoenPos_tEnd, E_vFFLoenNeg0, E_vFFLoenNeg, E_vFFLoenNeg_tEnd, E_vVirkLoenPos0, E_vVirkLoenPos, E_vVirkLoenPos_tEnd, E_vVirkLoenNeg0, E_vVirkLoenNeg, E_vVirkLoenNeg_tEnd, E_vhWForhandlet, E_nSoc, E_nSoc_bruttoled, E_nSoc_arbsty, E_nSoc_nettoled, E_nSoc_nettoarbsty, E_nPop_aTot, E_nPop_a15t100, E_nPop_a0t17, E_nPop_a18t100, E_rLedig, E_rLedigGab, E_vHhx, E_jvHhx_aTot, E_vHhx_aTot, E_vtHhx, E_vtHhx_tot, E_vBoligUdgift, E_fBoligUdgift, E_vBoligUdgift_tot, E_vBoligUdgiftArv, E_vHhNFErest, E_vHhNFErest_tot, E_jvHhNFErest_tot, E_vHhInvestx_tot, E_vSelvstKapInd_tot, E_vCLejeBolig_tot, E_vCLejeBolig, E_rvCLejeBolig_tot, E_qCR, E_qCR_tEnd, E_qCR_tot, E_qCRxRef, E_qCRxRef_a18, E_qCRxRef_2016, E_qCRxRef_a18_2016, E_mUC, E_qNytte, E_EmUC, E_EmUC_tEnd, E_EmUC_aEnd, E_EmUC_aEnd_tEnd, E_mUC_unge, E_EpC, E_EpC_tEnd, E_qCHtM, E_qCHtM_tot, E_qCHtMxRef, E_qCHtMxRef_a18, E_qBoligHtMxRef, E_qBoligHtMxRef_a18, E_qBoligHtM, E_vBoligUdgiftHtM, E_vBoligUdgiftHtM_tot, E_vBoligHtM, E_vBoligHtM_tot, E_qC_a, E_vC_a, E_qBolig, E_vBolig, E_qBoligR_tot, E_qBoligHtM_tot, E_qBolig_tot, E_vBolig_tot, E_qC_cIkkeBol, E_pC_nests, E_qC, E_uC, E_qBoligR, E_qBoligRxRef, E_qBoligRxRef_a18, E_pBoligUC, E_EpLand, E_EpBolig, E_qLandSalg, E_mUBolig, E_mUBolig_tEnd, E_qYBolig, E_qIBoligInstOmk, E_dqIBoligInstOmk, E_dqIBoligInstOmk_tEnd, E_qIBolig, E_pLand, E_pBolig, E_vIBolig, E_qKBolig, E_vKBolig, E_qK_bol, E_rKLeje2Bolig, E_vArvGivet, E_vArvKorrektion, E_vArv_aTot, E_vArvKorrektion_aTot, E_vArv, E_qArvBase, E_qFormueBase, E_dFormue, E_dArv, E_dArv_tEnd, E_vtArv, E_vtArv_tot, E_vBoernFraHh, E_vHhTilBorn_aTot, E_vHhTilBoern, E_qBiler, E_rDisk, E_uBolig, E_fHh, E_uBoligHtM, E_uBoernFraHh, E_fMigration, E_fMigration_aEnd, E_fMigration_tot, E_vSatsIndeks, E_vPrimSaldo, E_vSaldo, E_vOff_NetFin, E_vOffNetFormue, E_vOffAkt, E_vOffPas, E_vOffNetRenter, E_vOffRenteInd, E_vOffRenteUd, E_vNROffNetRenter, E_rOffRenteInd, E_rOffRenteUd, E_vOffOmv, E_vOff_akt, E_vOff_RealKred, E_vOff_Obl, E_rHBI, E_fHBIDisk, E_nvPrimSaldo, E_nvPrimSaldo_tEnd, E_nvtLukning, E_nvtLukning_tEnd, E_nvGLukning, E_nvGLukning_tEnd, E_nvBNP, E_nvBNP_tEnd, E_vOffY2C, E_vOffPrimInd, E_vtDirekte, E_vtKilde, E_vtBund, E_ftBund_tot, E_vtBund_tot, E_vtTop, E_rTopSkatInd_tot, E_vtTop_tot, E_vtKommune, E_ftKommune_tot, E_vtKommune_tot, E_vtEjd, E_fvtEjd_tot, E_vtEjd_tot, E_vtAktie, E_fvtAktie_tot, E_vRealiseretAktieOmv, E_vRealiseretAktieOmv_aTot, E_vRealiseretAktieOmv_aTot_x2015, E_vUrealiseretAktieOmv, E_vtAktie_tot, E_vtVirksomhed, E_vtVirksomhed_tot, E_vtDoedsbo, E_vtDoedsbo_tot, E_fvtDoedsbo_tot, E_vtHhAM, E_vtHhAM_tot, E_vtPersRest, E_vtPersRest_tot, E_vtKapPens, E_vtKapPens_tot, E_vtKapPensArv, E_vtKapPensArv_tot, E_vtHhVaegt, E_vtHhVaegt_tot, E_vtSelskab_sTot, E_vtSelskabRest_sTot, E_vtSelskabNord, E_vtSelskab, E_vtSelskabRest, E_mtVirk, E_vtPAL, E_vtMedie_tot, E_vtLukning, E_tLukning, E_vtIndirekte, E_vtEU, E_vtAfgEU, E_vtYRest, E_vtY, E_vOffIndRest, E_vBidrag_tot, E_vBidrag, E_vBidragAK, E_vBidragTjmp, E_vBidragEL, E_vBidragFri, E_vBidragOblTjm, E_vBidragATP, E_vBidragOblRest, E_vBidragObl, E_vOffFraUdl, E_vOffFraHh, E_vOffFraVirk, E_vtKirke, E_vtKirke_tot, E_vJordrente, E_vOffVirk, E_vPersInd, E_vSkatteplInd, E_vPersInd_tot, E_vPersIndRest, E_rPersIndRest_a2PersInd, E_rPersIndRest_t2PersInd, E_vPersIndRest_tot, E_vSkatteplInd_tot, E_vKapIndPos, E_vKapIndNeg, E_vNetKapInd, E_vNetKapIndPos, E_jvKapIndPos_tot, E_vKapIndPos_tot, E_jvKapIndNeg_tot, E_vKapIndNeg_tot, E_vNetKapIndPos_tot, E_vNetKapInd_tot, E_vPersFradrag, E_uvPersFradrag_tot, E_vPersFradrag_tot, E_vAKFradrag_tot, E_vELFradrag_tot, E_vRestFradrag_tot, E_vBeskFradrag_tot, E_vAKFradrag, E_vELFradrag, E_vRestFradrag, E_vBeskFradrag, E_rRestFradragSats2SatsIndeks, E_vGxAfskr, E_qGxAfskr, E_pGxAfskr, E_qG_tot, E_qG, E_vGLukning, E_vOffPrimUd, E_vOvfSats_satsreg, E_vOvfSats_groen, E_nOvf, E_nOvf_a0t17, E_nOvf_a18t100, E_vOvf, E_vOvf_tot, E_vOvf_hh, E_vOvf_a18t100, E_vHhOvf, E_dnOvf2dBesk, E_dnOvf2dPop, E_dvOvf2dBesk, E_dvOvf2dBesk_hh, E_dvOvf2dPop, E_dvOvf2dPop_hh, E_fHhOvf, E_vOvfUbeskat_tot, E_vOvfUbeskat, E_vOvfSkatPl_tot, E_vOvfSkatPl, E_vOffInv, E_vOffSub, E_vSubYRes, E_vSubY, E_vSubEU, E_vOffUdRest, E_vOffTilHh, E_vOffLandKoeb, E_vOffTilUdl, E_vOffTilHhKap, E_vOffTilHhOev, E_vOffTilVirk, E_qY, E_qM, E_vY, E_vM, E_pBNP, E_qBNP, E_vBNP, E_qBVT, E_pBVT, E_vBVT, E_qBVT_tot, E_pBVT_tot, E_vBVT_tot, E_qBVT_spTot, E_pBVT_spTot, E_vBVT_spTot, E_qCDK, E_pCDK, E_uIO0_c_pub, E_pI, E_qI, E_vI_iTot_s, E_vI_s_iTot_spTot, E_pR, E_pCTurist, E_vCTurist, E_pC, E_vI_sp, E_pI_s, E_fpI, E_pI_s_inventory, E_vR, E_vI, E_vC, E_vG, E_vX, E_vX_xTur, E_qIO_r, E_qIO_c, E_qIO_i, E_qIO_iL, E_qIO_g, E_uIO0_i_pub, E_pIO, E_qIOy_x, E_qIOm_x, E_pIOy, E_pIOm, E_rpIOm2pIOy, E_rpIOm2pIOy_ingen_historik, E_fqMKortsigt, E_vIO, E_vIOy, E_vIOm, E_qIOm, E_qIOm_NoLag, E_qIOy, E_qIOy_il, E_qIOy_NoM, E_qIOy_e0, E_qIOm_NoY, E_qIOm_e0, E_uIO, E_uIOy, E_uIOm, E_uIOy_NoM, E_uIOm_NoY, E_uIOXy, E_uIOXm, E_juIOm_udv, E_pY_tot, E_qY_tot, E_vY_tot, E_pY_spTot, E_qY_spTot, E_vY_spTot, E_vM_tot, E_pM_tot, E_qM_tot, E_pXUdl_tot, E_pXy, E_pXm, E_pX, E_vXy, E_pX_tot, E_vX_tot, E_qX_tot, E_qI_iTot_sTot, E_vI_iTot_sTot, E_pI_iTot_sTot, E_pR_tot, E_qR_tot, E_vR_tot, E_pR_spTot, E_qR_spTot, E_vR_spTot, E_pC_tot, E_qC_tot, E_vC_tot, E_pG, E_vG_dgu, E_vIOy_sTot, E_vIOm_sTot, E_vVirkBVT5aarSnit, E_vVirkBVT5aarSnit_t1End, E_vVirkBVT5aarSnit_tEnd, E_vBVT2hL, E_vBVT2hLsnit, E_qBVT2hL, E_qBVT2hLsnit, E_pCsnit, E_vBFI, E_vUdl_IndlAktier, E_vUdl_Pension, E_vUdl_UdlAktier, E_vUdl_Bank, E_vUdl_Obl, E_vUdl_NetFin, E_vUdl_realkred, E_vUdlRenter, E_vUdlOmv, E_vUdlNFE, E_rArbProd, E_rBVTGab, E_rBeskGab, E_vDispInd, E_vLejeAfEjerBolig, E_vNetKolPensUdb, E_vNetIndPensUdb, E_vKolPensRenter, E_vHhInd_aTot, E_vHhInd, E_vtHh_aTot, E_rBoligOmkRest, E_vHhFraVirkKap, E_vHhFraVirkOev, E_vHhFraVirk, E_vHhTilUdl, E_mrHhAfk, E_mrRealKredAfk, E_mtAktie, E_rHhAfk, E_vHhxAfk, E_vHhxAfk_aTot, E_jvHhxAfk_aTot, E_vHhRenter_akt, E_vHhRenter_pas, E_vHhRenter_NetFin, E_vHhOmv_akt, E_vHhOmv_pas, E_vHhOmv_NetFin, E_vHh_NetFin, E_vHh_NetFin_aTot, E_jvHh, E_pBoligRigid_a18, E_pBoligRigid, E_vHh_RealKred, E_vHh_RealKred_aTot, E_rRealKred2Bolig, E_rRealKred2Bolig_aTot, E_vHhPensAfk, E_vHhPensAfk_aTot, E_jvHhPensAfk_aTot, E_jvHhPensAfk_pens, E_jvHhPensAfk_pens_atot, E_vHh_pens, E_vHh_pens_aTot, E_vPensIndb, E_vPensIndb_aTot, E_rPensIndb_aTot, E_vPensUdb, E_vPensArv, E_vPensArv_aTot, E_vPensUdb_aTot, E_rPensUdb_aTot, E_vHh_pension, E_vHh_pension_aTot, E_vPensIndb_pension, E_vPensIndb_pension_aTot, E_vPensUdb_pension, E_vPensUdb_pension_aTot, E_vPensArv_pension, E_vPensArv_pension_aTot, E_vHhPensAfk_pension, E_vHhPensAfk_pension_aTot, E_vHh_BankGaeld, E_vHh_BankGaeld_aTot, E_vHhFinAkt, E_vHhFinAkt_aTot, E_vHh_akt, E_vHh_aTot, E_vHhNFE, E_sqBVT, E_uY, E_qKspBy, E_pKspBy, E_qLspBy, E_sqLspBy, E_snL, E_snL_tje, E_snL_xspBy, E_snL_spTot, E_sqL, E_sqL_spTot, E_sfW, E_snOpslag, E_snOpslag_tEnd, E_srOpslagOmk, E_sdOpslagOmk2dnL, E_sdOpslagOmk2dnLLag, E_srJobFinding, E_srMatch, E_srOpslag2soeg, E_shL, E_snL_tot, E_srL2nL, E_shLUdl, E_snLUdl, E_snSoegUdl, E_shLHh_aTot, E_snLHh_tot, E_srSeparation, E_snSoegHh_aTot, E_snSoegBaseHh_tot, E_sfProdHh, E_shLHh, E_snLHh, E_snSoegHh, E_snSoegBaseHh, E_snSoegBaseHh_tEnd, E_snSoegBaseHh_aEnd, E_sfDeltag, E_snSoc, E_dSoc2dPop_boern, E_snSoc_bruttoled, E_snSoc_arbsty, E_snSoc_nettoled, E_snSoc_nettoarbsty, E_srLedig
/;


# ======================================================================================================================
# Read baseline and parameters from GDX file
# ======================================================================================================================
execute_load "Gdx\stiliseret_grundforloeb.gdx"
  
# ----------------------------------------------------------------------------------------------------
#  Loop over All
# ----------------------------------------------------------------------------------------------------
, qX , qXy , qXm , qCTurist , qXSkala , qXTraek , empty_group_dummy , rpXUdl2pXy , rpXy2pXUdl , uXy , uCturisme , rpM2pXm , dqLdnL , dqLLeaddnL , vWHh , vhW , vhWNy , vWUdl , vhWForhandlet , vVirkLoenPos , vVirkLoenPos0 , vVirkLoenNeg , vVirkLoenNeg0 , vFFLoenPos , vFFLoenPos0 , vFFLoenNeg , vFFLoenNeg0 , vW , vSelvstLoen , vLoensum , pL , rL2nL , dOpslagOmk2dnL , dOpslagOmk2dnLLag , nSoegBaseHh , nLHh , nSoegHh , fDeltag , nLUdl , nSoegUdl , hLHh , hL , hLUdl , rJobFinding , rMatch , rOpslag2soeg , nOpslag , rOpslagOmk , rSeparation , fZh , cZh , nL , nPop , nSoc , rLedig , rLedigGab , fProdHh , fW , mtInd , pY , pXUdl , pM , jrMarkup , rMarkup , srMarkup , rLUdn , rKUdn , rKUdnSpBy , ErSkatAfskr , qL , dKInstOmk2dK , dKInstOmk2dI , dKInstOmkLead2dI , pKL , pKLB , pKLBR , pK , pTobinsQ , qKInstOmk , qKLBR , qKLB , qKL , qR , qK , qI_s , qY , pOffAfskr , pOffNyInv , qOffAfskr , qOffNyInv , vOffAfskr , vOffLR , vI_s , vOffDirInv , vOffIndirInv , vOffNyInv , srvOffL2LR , rOffK2Y , rvOffDirInv2BNP , vAktie , vAktiex , vAktieRes , vEBT , vEBTx , vEBITDA , vFCF , vVirkRenter , vVirkOmv , vVirkNFE , vKskat , vAfskrFradrag , vDividender , vUdstedelser , vVirkK , vVirk , vVirkLaan , vVirkx , vPension , vtSelskabx , vVirkFinInd , rVirkDisk , rAfkastKrav , rVirkxAfk , rRente , rOmv , rLaan2K , rIndlAktiePrem , rFinAccelPrem , vFCFxRef , EpC , pBolig , pLand , pC , EpBolig , EpLand , pBoligUC , qC , qC_a , qCR , qCHtM , qCRxRef , qCHtMxRef , qBiler , qBoligHtM , qBoligHtMxRef , qBoligR , qBolig , qBoligRxRef , qYBolig , qIBoligInstOmk , qLandSalg , qKBolig , qIBolig , qNytte , qArvBase , qFormueBase , vC_a , vHhx , vCLejeBolig , vArvGivet , vArv , vtArv , vtHhx , vBoligUdgift , vBoligUdgiftHtM , vBoligUdgiftArv , vHhNFErest , jvHhNFErest , vBoernFraHh , vHhTilBoern , vBolig , vBoligHtM , vKBolig , vIBolig , vHhInvestx , vSelvstKapInd , vArvKorrektion , rDisk , rKLeje2Bolig , rvCLejeBolig , fHh , uBolig , uBoligHtM , fBoligUdgift , mUBolig , dqIBoligInstOmk , mUC , EmUC , uC , fMigration , uBoernFraHh , dArv , dFormue , jvHhx , vPrimSaldo , vSaldo , vOff , vOffOmv , vOffNetRenter , vNROffNetRenter , vOffRenteInd , vOffRenteUd , vOffNetFormue , vOffPas , vOffY2C , vSatsIndeks , rOffRenteUd , nvBNP , nvPrimSaldo , nvtLukning , nvGLukning , rHBI , fHBIDisk , rOffRenteInd , rOffAkt2BNP , vOffPrimInd , vtY , vtYRest , vtDirekte , vtKilde , vtBund , vtTop , vtKommune , vtEjd , vtAktie , vtVirksomhed , vtDoedsbo , vtHhAM , vtPersRest , vtKapPens , vtKapPensArv , vtSelskab , vtSelskabRest , vtSelskabNord , vtPAL , vtMedie , vtHhVaegt , vtAfgEU , vtLukning , vtIndirekte , vtEU , vBidrag , vBidragAK , vBidragEL , vBidragFri , vBidragObl , vBidragOblTjm , vBidragATP , vBidragOblRest , vBidragTjmp , vOffIndRest , vtKirke , vJordrente , vPersInd , vPersIndRest , vSkatteplInd , vNetKapIndPos , vNetKapInd , vKapIndPos , vKapIndNeg , vPersFradrag , vAKFradrag , vELFradrag , vRestFradrag , vBeskFradrag , vRealiseretAktieOmv , vUrealiseretAktieOmv , ftBund , rTopSkatInd , ftKommune , fvtEjd , fvtAktie , fvtDoedsbo , jvKapIndPos , jvKapIndneg , uvPersFradrag , rOffFraUdl2BNP , rOffFraHh2BNP , rOffFraVirk2BNP , rOffVirk2BNP , rPersIndRest_a2PersInd , rPersIndRest_t2PersInd , rRestFradragSats2SatsIndeks , mtVirk , tLukning , pGxAfskr , qGxAfskr , qG , vGxAfskr , vOffPrimUd , vOffInv , vOffSub , vSubY , vSubYRes , vOffUdRest , vOffTilHh , vOvf , vHhOvf , vOvfSkatPl , vOvfSats , vOvfUbeskat , vGLukning , uvGxAfskr , nOvf , fHhOvf , dnOvf2dBesk , dnOvf2dPop , dvOvf2dBesk , dvOvf2dPop , rOffLandKoeb2BNP , rOffTilUdl2BNP , rOffTilVirk2BNP , rOffTilHhKap2BNP , rOffTilHhOev2BNP , rSubEU2BNP , vtMoms , vtNetAfg , vtAfg , vtReg , vPunktSub , vtTold , vtGrund , vtVirkVaegt , vtVirkAM , vtAUB , vtSubLoen , vtNetLoenAfg , vtNetYAfg , vtNetYAfgRest , tNetAfg_y , tNetAfg_m , tL , tIOy , tIOm , vVirkBVT5aarSnit , vBVT2hL , vBVT2hLsnit , qBVT2hL , qBVT2hLsnit , vBFI , vUdl , vUdlRenter , vUdlOmv , vUdlNFE , rArbProd , rBVTGab , rBeskGab , pCInflSnit , pBNP , pBVT , pIO , pIOy , pIOm , pX , pXm , pXy , pR , pCDK , pCTurist , pG , pI , pI_s , vY , vM , vBNP , vBVT , vIO , vIOy , vIOm , vX , vXy , vR , vC , vCTurist , vG , vI , qM , qBNP , qBVT , qIO , qIOy , qIOm , qCDK , qI , juIOm , juIOXy , uIO , uIOy , uIOm , uIOXy , uIOXm , fpI_s , uIO0 , rpIOm2pIOy , fqMKortsigt , pBoligRigid , vtHh , vDispInd , vHhInd , vHhxAfk , vHhFinAkt , vHh , vHhRenter , vHhOmv , vHhPensAfk , vHhNFE , vPensIndb , vPensUdb , vPensArv , vNetIndPensUdb , vNetKolPensUdb , vKolPensRenter , vLejeAfEjerBolig , vHhFraVirkKap , vHhFraVirkOev , vHhFraVirk , vHhTilUdl , mrHhxAfk , mrRealKredAfk , rRealKred2Bolig , rPensIndb , rPensUdb , rBoligOmkRest , rHhAfk , jvHhxAfk , jvHhPensAfk , jvHh , mtAktie , pKspBy , sqBVT , sdqLdnL , sdOpslagOmk2dnLLag , sqL , qKspBy , qLspBy , sqLspBy , uY , shL , srL2nL , sfW , sdOpslagOmk2dnL , sfProdHh , snSoegBaseHh , snLHh , snSoegHh , sfDeltag , srJobFinding , srMatch , srOpslag2soeg , shLHh , srOpslagOmk , snOpslag , srSeparation , snLUdl , shLUdl , snL , snSoegUdl , snSoc , dSoc2dPop , srLedig , pUdl , pOlie , pLxUdn , uR , uKLB , uL , uK , uKL , uh , vVirkIndRest , vOffAkt , vOffFonde , vtPALGab , vtSelskabNordGab , vtSelskabRestGab , vtRegGab , vOffNetRenterGab , vtRestGab , vEngangsForholdGab , jvOffPrimInd , vtKildeRest , vtDirekteRest , vOffFraUdl , vOffFraHh , vOffFraVirk , vOffVirk , vPersIndRest_a , vPersIndRest_t , vHhOvfRest , vOffLandKoeb , vOffTilUdl , vOffTilVirk , vOffTilHhKap , vOffTilHhOev , vSubEU , vhWVirk , vOffLoen , vHhFormueR , vHhFormueHtM , vHhxR , vHhPensR , vHhPensHtM , vHhPens , vFrivaerdiR , vFrivaerdiHtM , vHhIndHtM , vHhIndR , vHhNetFinR , vHhNetFinHtM , vHhNetFin , vHhIndMvHtM , vHhIndMvR , vHhIndMv , vCR_NR , vCHtM_NR , vC_NR , vHhFormue , vBoligUdgiftR , vBoligR , qXMarked , qProd , qLand , qKLejeBolig , qGrus , qLxUdn , qCR_NR , qCHtM_NR , qC_NR , hVirk , hOff , tPensKor , nSoegBase , rtTopRenter , mrNet2KapIndPos , rKolPens , rHhFraVirkKap , rHhFraVirkOev , rHhTilUdl , cHh_a , cHh_t , dvHh2dvHhx , dvHh2dvBolig , dvHh2dvPensIndb , rBoligOmkRestRes , rRealKredTraeg , rRealKred2Bolig_a , rRealKred2Bolig_t , cmtAktie , ErAktieAfk_static , rPensArv , jvHhOmv , jvHhRenter , jvNetKolPensUdb , jvKolPensRenter , jmrHhAfk , jrHhRente , jrHhOmv , rUdlRealkred , jvBFI , fDemoTraek , uHhOvfPop , uOvfUbeskat , jvOvf , uvOvfSats , eG , rGLukning , uG , rvYsubRest2BVT , tEjd , tPersRestxKapPens , tSelskabNord , tVirksomhed , tDoedsbo , tAktie , tJordRente , tHhVaegt , tbeskfradrag , ftAMBidrag , ftKapPens , ftSelskab , ftPAL , ftKirke , jfvSkatteplInd , rNet2KapIndPos , rtKirke , vRestFradragSats , rAKFradrag2Bidrag , rELFradrag2Bidrag , uBidragOblTjm , uBidragATP , uBidragOblRest , uBidragEL , uBidragFri , uBidragAK , uBidragTjmp , utMedie , rRealiseringAktieOmv , rvtAfgEU2vtAfg , tBund , tTop , tKommune , tAMbidrag , tKapPens , tSelskab , tPAL , tKirke , rOffRealKred2Pas , rOffAkt , jvOffOmv , jrOffRenteInd , jrOffRenteUd , jfSatsIndeks , rOffY2C , rDisk_t , rDisk_a , uBolig_a , uBolig_t , uBoligHtM_a , uBoligHtM_t , uBoligHtM_match , uBoernFraHh_t , uBoernFraHh_a , eHh , rRef , rRef_2016 , rRefHtM , rRefBolig , rHtM , eBolig , uIBoligInstOmk , fIBoligInstOmk , fBoligGevinst , EpLandInfl , EpBoligInfl , eC , uLand , uIBolig , rArv , rArv_a , uFormue , cFormue , rMaxRealkred , uArv , cArv , tArv , rSelvstKapInd , eNytte , rArvKorrektion , uC0 , fuCnest , rBilAfskr , rHhInvestx , nArvinger , rBoern , rOverlev , ErOverlev , rBoligPrem , jfEpC , srLUdn , jshLHh , jsfDeltag , juY , dSoc2dBesk , fProdHh_a , fProdHh_t , fDiskpL , fDiskDeltag , mrKomp , eDeltag , emrKomp , eMatching , nSoegBaseUdl , uDeltag , eh , fhLUdl , fProdUdl , fW0 , uOpslagOmk , uMatchOmk , uMatchOmkSqr , rLoenTraeghed , rLoenIndeksering , cmtInd , rfZhTraeghed , rAMDisk , rFFLoenAlternativ , cMatchOmkSqr , jvhW , rLoenNash , rSelvst , jnSoc , upYTraeghed , eY , epM2pOlie , epXUdl2pOlie , upXSoe , upXUdl , upM , upYUdv , jpY_bol , rSkatAfskr , rAktieRes2BVT , rvOblLaan2K , rvVirkx , rPensAkt , rFinAccel , cFinAccel , uFinAccel , rFinAccelTraeghed , rvRealKred2K , crRenteBank , rUdlAktiePrem , rVirkDiskPrem , jvVirkRenter , jvVirkOmv , jrRente_pension , jrOmv_pension , jrOmv_UdlAktier , jvVirkx , uKInstOmk , fKInstOmk , eKUdn , eKUdnPersistens , eLUdn , eLUdnPersistens , eKLBR , eKLB , eKL , rAfskr_static , gpI_s_static , rAfskr , rIL2y , fProd , jrLUdn , jrKUdn , jfqI_s_iL , jpK , rOffIB2NyInv , rOffLTraeghed , rvOffIndirInv2vBVT , jrpOffAfskr , jrqOffAfskr , jrpOffNyInv , uXTur , uXm , fuCturisme , uCturisme0 , rXTraeghed , upXyTraeghed , rXSkalaTraeghed , eXUdl , cpXyTraeghed , tYsub_y0 , tYsub_m0 , tTold , tMoms_y , tMoms_m , tK , tLoensum , tVirkAM , tLoenSub , tYsub0 , tReg , tNetYRest , tAfg_y , tAfg_m , tYsub_y , tYsub_m , eIO , rMerPris , rvIO2vOffNyInv , rvIO2vPublicSales , rpMTraeghed , rMKortsigt , uIOm0 , uIOXy0 , uIOXm0 , fuIO , fuIOym , fuXm , fuXy , upI_s , fpCTurist 
  
# ----------------------------------------------------------------------------------------------------
#  Loop over pG_dummies
# ----------------------------------------------------------------------------------------------------
, d1IO , d1IOy , d1IOm , d1Xm , d1xy , d1CTurist , d1X , d1I_s , d1K , d1R , d1C , d1G 
  , snSocFraBesk, snSocResidual
;

# ======================================================================================================================
# Tests
# ======================================================================================================================
set_time_periods(2025, 2099);

# Aggregation tests

# ----------------------------------------------------------------------------------------------------
#  Import file: C:\Users\B031441\Desktop\MAKRO-main\Model\tests.gms
# ----------------------------------------------------------------------------------------------------

# ======================================================================================================================
# Aggregerings tests
# ======================================================================================================================
# ------------------------------------------------------------------------------------------------------------------
# Pension
# ------------------------------------------------------------------------------------------------------------------
parameter vPensIndb_sumtest[portf_,t]; vPensIndb_sumtest[pens,t]$tx0[t] = vPensIndb.l[pens,aTot,t] - sum(a, vPensIndb.l[pens,a,t] * nPop.l[a,t]);
abort$(smax(pens, smax(t, abs(vPensIndb_sumtest[pens,t]))) > 1e-7) "vPensIndb[#pens,tot] does not match sum of components", vPensIndb_sumtest;

parameter vHhPensAfk_sumtest[pens,t]; vHhPensAfk_sumtest[pens,t]$tx0[t] = vHhPensAfk.l[pens,aTot,t] - sum(a, vHhPensAfk.l[pens,a,t] * nPop.l[a-1,t-1]);
abort$(smax([pens,t], abs(vHhPensAfk_sumtest[pens,t])) > 1e-4) "Aldersfordelt vHhPensAfk summerer ikke til total.", vHhPensAfk_sumtest;


# ------------------------------------------------------------------------------------------------------------------
# HH indkomst
# ------------------------------------------------------------------------------------------------------------------
parameter vHhxAfk_sumtest[t]; vHhxAfk_sumtest[t]$tx0[t] = vHhxAfk.l[aTot,t] - sum(a, vHhxAfk.l[a,t] * nPop.l[a-1,t-1]);
abort$(smax(t, abs(vHhxAfk_sumtest[t])) > 1e-5) "vHhxAfk[tot] does not match sum of components", vHhxAfk_sumtest;

parameter vOvf_sumtest[t]; vOvf_sumtest[t]$tx0[t] = vOvf.l['hh',t] - sum(a, vHhOvf.l[a,t] * nPop.l[a,t]);
abort$(smax(t, abs(vOvf_sumtest[t])) > 1e-7) "vOvf[hh] does not match sum of vHhOvf[#a]", vOvf_sumtest;

parameter vHhNFErest_sumtest[t]; vHhNFErest_sumtest[t]$tx0[t] = vHhNFErest.l[aTot,t] - sum(a, vHhNFErest.l[a,t] * nPop.l[a,t]);
abort$(smax(t, abs(vHhNFErest_sumtest[t])) > 1e-6) "vHhNFErest[tot] does not match sum of components", vHhNFErest_sumtest;

parameter vtHhx_sumtest[t]; vtHhx_sumtest[t]$tx0[t] = vtHhx.l[aTot,t] - sum(a, vtHhx.l[a,t] * nPop.l[a,t]);
abort$(smax(t, abs(vtHhx_sumtest[t])) > 1e-4) "vtHhx[tot] does not match sum of components", vtHhx_sumtest;

parameter vUdlRenter_sumtest[t]; vUdlRenter_sumtest[t]$tx1[t] = vUdlRenter.l[t] + vVirkRenter.l[t] + vHhRenter.l['NetFin',t] + vNROffNetRenter.l[t];
abort$(smax(t, abs(vUdlRenter_sumtest[t])) > 0.01) "vUdlRenter does not match sum of components", vUdlRenter_sumtest;

parameter vUdlOmv_sumtest[t]; vUdlOmv_sumtest[t]$tx0[t] = vUdlOmv.l[t] + vHhOmv.l['NetFin',t] + vVirkOmv.l[t] + vOffOmv.l[t] - vVirk.l['Guld',t] + vVirk.l['Guld',t-1]/fv;
abort$(smax(t, abs(vUdlOmv_sumtest[t])) > 0.01) "vUdlOmv does not match sum of components", vUdlOmv_sumtest;

parameter vHhInd_sumtest[t]; vHhInd_sumtest[t]$tx0[t] = vHhInd.l[aTot,t] - sum(a, vHhInd.l[a,t] * nPop.l[a,t]);
abort$(smax(t, abs(vHhInd_sumtest[t])) > 1e-6) "vHhInd[tot] does not match sum of components", vHhInd_sumtest;

parameter vHhFinAkt_sumtest[t]; vHhFinAkt_sumtest[t]$tx0[t] = sum(a, nPop.l[a,t] * vHhFinAkt.l[a,t])-vHh.l['Bank',atot,t]-vHh.l['IndlAktier',atot,t]-vHh.l['UdlAktier',atot,t]-vHh.l['obl',atot,t];
abort$(smax(t, abs(vHhFinAkt_sumtest[t])) > 1e-6) "vHhFinAkt does not match sum of components", vHhFinAkt_sumtest;

abort$(smax(t, abs(jvHhNFErest.l[aTot,t])) > 0.005) "jvHhNFErest does not sum to 0", jvHhNFErest.l;

parameter vHhx_sumtest[t]; vHhx_sumtest[t]$tx0[t] = vHhx.l[aTot,t] - sum(a, vHhx.l[a,t] * nPop.l[a,t]);
abort$(smax(t, abs(vHhx_sumtest[t])) > 1e-4) "vHhx[tot] does not match sum of components", vHhx_sumtest;

parameter jvHhx_sumtest[t]; jvHhx_sumtest[t]$tx0[t] = jvHhx.l[aTot,t] - sum(a, jvHhx.l[a,t] * nPop.l[a,t]);
abort$(smax(t, abs(jvHhx_sumtest[t])) > 1e-4) "jvHhx[tot] does not match sum of components - i.e. E_jvHhx_aTot not consistent with E_vHhx_aTot", jvHhx_sumtest;

abort$(smax(t, abs(jvHh.l[t])) > 1e-3) "Top-down og buttom-up bestemmelse af vHh[NetFin,tot] stemmer ikke.", jvHh.l;

parameter vRealiseretAktieOmv_sumtest[t]; vRealiseretAktieOmv_sumtest[t]$tx0[t] = vRealiseretAktieOmv.l[aTot,t] - sum(a, vRealiseretAktieOmv.l[a,t] * nPop.l[a,t]);
abort$(smax(t, abs(vRealiseretAktieOmv_sumtest[t])) > 1e-4) "vRealiseretAktieOmv[tot] does not match sum of components", vRealiseretAktieOmv_sumtest;

# ------------------------------------------------------------------------------------------------------------------
# Overførsler mellem kohorter
# ------------------------------------------------------------------------------------------------------------------
parameter vArv_test[t]; vArv_test[t]$tx0[t] = sum(a, vArv.l[a,t] * nPop.l[a,t]) - vArv.l[aTot,t];
abort$(smax(t, abs(vArv_test[t])) > 1e-7) "Arv pr aldersgruppe summerer ikke til total.", vArv_test;

parameter vBoernFraHh_test[t]; vBoernFraHh_test[t]$tx0[t] = sum(a, vBoernFraHh.l[a,t] * nPop.l[a,t]) - sum(aa, vHhTilBoern.l[aa,t] * nPop.l[aa,t]);
abort$(smax(t, abs(vBoernFraHh_test[t])) > 1e-7) "Transfers received by children do not match transfers paid by parents.", vBoernFraHh_test;

abort$(smax(t$tx0[t],
        abs(sum(a$(a.val < 18), vBoernFraHh.l[a,t] * nPop.l[a,t]) - sum(aa, vHhTilBoern.l[aa,t] * nPop.l[aa,t]))
      ) > 1e-9) "Transfers received by children do not match transfers paid by parents.";

# ------------------------------------------------------------------------------------------------------------------
# vHh
# ------------------------------------------------------------------------------------------------------------------
parameter vHh_sumtest[portf_,t];
vHh_sumtest['NetFin',t]$tx0[t] = vHh.l['NetFin',aTot,t] - sum(a, vHh.l['NetFin',a,t] * nPop.l[a,t]);
vHh_sumtest['RealKred',t]$tx0[t] = vHh.l['RealKred',aTot,t] - sum(a, vHh.l['RealKred',a,t] * nPop.l[a,t]);
vHh_sumtest['BankGaeld',t]$tx0[t] = vHh.l['BankGaeld',aTot,t] - sum(a, vHh.l['BankGaeld',a,t] * nPop.l[a,t]);
vHh_sumtest['Pens',t]$tx0[t] = vHh.l['Pens',aTot,t] - sum(a, vHh.l['Pens',a,t] * nPop.l[a,t]);
vHh_sumtest[akt,t]$tx0[t] = vHh.l[akt,aTot,t] - sum(a, vHh.l[akt,a,t] * nPop.l[a,t]);
abort$(smax(t, abs(vHh_sumtest['NetFin',t])) > 1e-4) "vHh[NetFin,tot] does not match sum of components", vHh_sumtest;
abort$(smax(t, abs(vHh_sumtest['RealKred',t])) > 1e-7) "vHh[RealKred,tot] does not match sum of components", vHh_sumtest;
abort$(smax(t, abs(vHh_sumtest['BankGaeld',t])) > 1e-4) "vHh[BankGaeld,tot] does not match sum of components", vHh_sumtest;
abort$(smax(pens, smax(t, abs(vHh_sumtest[pens,t]))) > 1e-7) "vHh[#pens,tot] does not match sum of components", vHh_sumtest;
abort$(smax(akt, smax(t, abs(vHh_sumtest[akt,t]))) > 1e-6) "vHh[#akt,tot] does not match sum of components", vHh_sumtest;

parameter vHhFinAkt_sumtest[t]; vHhFinAkt_sumtest[t]$tx1[t] = vHhFinAkt.l[aTot,t] - sum(a, vHhFinAkt.l[a,t] * nPop.l[a,t]);
abort$(smax(t, abs(vHhFinAkt_sumtest[t])) > 1e-7) "vHhFinAkt[tot] does not match sum of components", vHhFinAkt_sumtest;


# ------------------------------------------------------------------------------------------------------------------
# Labor_market
# ------------------------------------------------------------------------------------------------------------------
parameter nLHh_sumtest[t]; nLHh_sumtest[t]$tx0[t] = sum(a, nLHh.l[a,t]) - nLHh.l[aTot,t];
abort$(smax(t, abs(nLHh_sumtest[t])) > 1e-6) "nLHh summerer ikke til total.", nLHh_sumtest;

parameter nL_sumtest[t]; nL_sumtest[t]$tx0[t] = sum(s, nL.l[s,t]) - nL.l[sTot,t];
abort$(smax(t, abs(nL_sumtest[t])) > 1e-6) "nL summerer ikke til total.", nL_sumtest;

parameter nSoeg_sumtest[t]; nSoeg_sumtest[t]$tx0[t] = sum(a, nSoegHh.l[a,t]) - nSoegHh.l[aTot,t];
abort$(smax(t, abs(nSoeg_sumtest[t])) > 1e-6) "nSoegHh summerer ikke til total.", nSoeg_sumtest;

parameter nSoegBase_sumtest[t]; nSoegBase_sumtest[t]$tx0[t] = sum(a, nSoegBaseHh.l[a,t]) - nSoegBaseHh.l[aTot,t];
abort$(smax(t, abs(nSoegBase_sumtest[t])) > 1e-6) "nSoegBaseHh summerer ikke til total.", nSoegBase_sumtest;

# ------------------------------------------------------------------------------------------------------------------
# Struk
# ------------------------------------------------------------------------------------------------------------------
parameter snLHh_sumtest[t]; snLHh_sumtest[t]$tx0[t] = sum(a, snLHh.l[a,t]) - snLHh.l[aTot,t];
abort$(smax(t, abs(snLHh_sumtest[t])) > 1e-6) "Strukturel beskæftigelse summerer ikke til total.", snLHh_sumtest;

parameter snSoegHh_sumtest[t]; snSoegHh_sumtest[t]$tx0[t] = sum(a, snSoegHh.l[a,t]) - snSoegHh.l[aTot,t];
abort$(smax(t, abs(snSoegHh_sumtest[t])) > 1e-6) "Strukturel nSoegHh summerer ikke til total.", snSoegHh_sumtest;

parameter snSoegBaseHh_sumtest[t]; snSoegBaseHh_sumtest[t]$tx0[t] = sum(a, snSoegBaseHh.l[a,t]) - snSoegBaseHh.l[aTot,t];
abort$(smax(t, abs(snSoegBaseHh_sumtest[t])) > 1e-6) "Strukturel nSoegBaseHh summerer ikke til total.", snSoegBaseHh_sumtest;


# ------------------------------------------------------------------------------------------------------------------
# Sociogrupper 
# ------------------------------------------------------------------------------------------------------------------
abort$(smax(t$tx0[t], 
        abs(1 - sum(soc_$besktot[soc_], dSoc2dBesk.l[soc_,t]))
      ) > 1e-7) "dSoc2dBesk[besktot] does sum to 1";

abort$(smax(t$tx0[t], 
        abs(sum(soc, dSoc2dBesk.l[soc,t]))
      ) > 1e-7) "dSoc2dBesk[tot] does not sum to 0";

abort$(smax(t$tx1[t], 
        abs(vHhFinAkt.l[aTot,t] - sum(a, vHhFinAkt.l[a,t] * nPop.l[a,t]))
      ) > 1e-7) "vHhFinAkt[tot] does not match sum of components";


# ------------------------------------------------------------------------------------------------------------------
# Betalingsbalance
# ------------------------------------------------------------------------------------------------------------------
parameter betalingsbalance[t]; betalingsbalance[t]$tx1[t] =
  # Nettofordringserhvervelse (Tfn_e)                           
    vUdlNFE.l[t]
  # Net exports = Exports - Imports -(M-E)
  + vX.l[xTot,t] - vM.l[sTot,t] 
  # Wages going to foreign cross-border workers and undeclared work -(Ywn_e)
  - vWUdl.l[t]
  # Customs going to EU and subsidies from EU -(Spteu - Spueu)
  - vtEU.l[t] + vSubEU.l[t]
  # Net foreign return excl. capital gains -(Tin_e)
  - vUdlRenter.l[t]
  # Net foreign transfer to government -(Tro_e-Tre_o+tK_o_e-tK_e_o)   
  + vOffFraUdl.l[t] - vOffTilUdl.l[t]
  # Overførsler til pensionister i udlandet
  - vOvf.l['UdlFortid',t] - vOvf.l['UdlPens',t]
  # Residual foreign transfer to households
  # Rest: Syn_e + Tpc_h_e - Tpc_e_z + (Ty_o_e + Typc_cf_e-Typc_e_h) + (Tr_hc_e - Tr_e_hc) + (Tknr_e) - Ikn_e - Izn_e  
  - vhhTilUdl.l[t]
  + jvHhNFErest.l[aTot,t]
  + vVirkIndRest.l[t]
;
abort$(smax(t, abs(betalingsbalance[t])) > 0.015) "Fejl i betalingsbalancen", betalingsbalance;


# ------------------------------------------------------------------------------------------------------------------
# Produktionsfunktion
# ------------------------------------------------------------------------------------------------------------------
parameter test_qKL[sp,t], test_qKLB[sp,t], test_qKLBR[sp,t];

test_qKLBR[sp,t]$(tx0[t] and eKLBR.l[sp]>0) = ( (uR.l[sp,t])**(1/eKLBR.l[sp]) * qR.l[sp,t]**(1-1/eKLBR.l[sp])
                 + (uKLB.l[sp,t])**(1/eKLBR.l[sp]) * qKLB.l[sp,t]**(1-1/eKLBR.l[sp]) )**(1/(1-1/eKLBR.l[sp]))
                 - qKLBR.l[sp,t];

test_qKLB[sp,t]$(tx0[t] and eKLB.l[sp]>0) = ( (uK.l['iB',sp,t])**(1/eKLB.l[sp]) * (rKUdn.l['iB',sp,t] * qK.l['iB',sp,t-1]/fq)**(1-1/eKLB.l[sp])
                + (uKL.l[sp,t])**(1/eKLB.l[sp]) * qKL.l[sp,t]**(1-1/eKLB.l[sp]) )**(1/(1-1/eKLB.l[sp]))
                - qKLB.l[sp,t];

test_qKL[sp,t]$(tx0[t] and eKL.l[sp]>0) = ( (uK.l['iM',sp,t])**(1/eKL.l[sp]) * (rKUdn.l['iM',sp,t] * qK.l['iM',sp,t-1]/fq)**(1-1/eKL.l[sp])
               + (uL.l[sp,t])**(1/eKL.l[sp]) * (qL.l[sp,t])**(1-1/eKL.l[sp]) )**(1/(1-1/eKL.l[sp]))
               - qKL.l[sp,t];

test_qKLBR[sp,t]$(tx0[t] and eKLBR.l[sp]=0)
  = qR.l[sp,t] / uR.l[sp,t] + qKLB.l[sp,t] / uKLB.l[sp,t] - 2 * qKLBR.l[sp,t];
test_qKLB[sp,t]$(tx0[t] and eKLB.l[sp]=0)
  = qK.l['iB',sp,t-1]/fq * rKUdn.l['iB',sp,t] / uK.l['iB',sp,t] + qKL.l[sp,t] / uKL.l[sp,t] - 2 * qKLB.l[sp,t];
test_qKL[sp,t]$(tx0[t] and eKL.l[sp]=0 and d1K['iM',sp,t])
  = qK.l['iM',sp,t-1]/fq * rKUdn.l['iM',sp,t] / uK.l['iM',sp,t]
  + qL.l[sp,t] / uL.l[sp,t]
  - 2 * qKL.l[sp,t];
test_qKL[sp,t]$(tx0[t] and not d1K['iM',sp,t]) =
  qL.l[sp,t] / uL.l[sp,t] - qKL.l[sp,t];

abort$(smax([sp,t], abs(test_qKLBR[sp,t])) > 1e-6) "KLBR stemmer ikke med produktionsfunktion", test_qKLBR;
abort$(smax([sp,t], abs(test_qKLB[sp,t])) > 1e-6) "KLB stemmer ikke med produktionsfunktion", test_qKLB;
abort$(smax([sp,t], abs(test_qKL[sp,t])) > 1e-6) "KL stemmer ikke med produktionsfunktion", test_qKL;

# ------------------------------------------------------------------------------------------------------------------
# Finance
# ------------------------------------------------------------------------------------------------------------------
parameter vEBITDA_sumtest[t]; vEBITDA_sumtest[t]$tx0[t] = sum(s, vEBITDA.l[s,t]) - vEBITDA.l[sTot,t];
abort$(smax(t, abs(vEBITDA_sumtest[t])) > 1e-6) "vEBITDA summerer ikke til total.", vEBITDA_sumtest;

parameter vFCF_sumtest[t]; vFCF_sumtest[t]$tx0[t] = sum(s, vFCF.l[s,t]) - vFCF.l[sTot,t];
abort$(smax(t, abs(vFCF_sumtest[t])) > 1e-6) "vFCF summerer ikke til total.", vFCF_sumtest;

# ------------------------------------------------------------------------------------------------------------------
# Negative tal
# ------------------------------------------------------------------------------------------------------------------
#  $GROUP G_negative_allowed
#    vVirkNFE
#  ;
#  $GROUP G_no_negatives G_prices, G_quantities, G_values, -G_negative_allowed;
#  $GROUP G_no_negatives G_no_negatives$(tx0[t]);
#  $LOOP G_no_negatives:
#    abort$sum({sets}${conditions}, {name}.l{sets} < 0) "{name} er negativ", {name}.l;
#  $ENDLOOP;

# ----------------------------------------------------------------------------------------------------------------------
# Zero shock  -  Abort if a zero shock changes any variables significantly
# ----------------------------------------------------------------------------------------------------------------------

# -------------------------------------------G_ZeroShockTest------------------------------------------
#  Initialize G_ZeroShockTest group
# ----------------------------------------------------------------------------------------------------
$offlisting
$onlisting
$offlisting
    
# ----------------------------------------------------------------------------------------------------
#  Loop over G_ZeroShockTest
# ----------------------------------------------------------------------------------------------------

      parameter qX_saved[x_,t];
      qX_saved[x_,t]$(1) = qX.l[x_,t];
    
      parameter qXy_saved[x,t];
      qXy_saved[x,t]$(1) = qXy.l[x,t];
    
      parameter qXm_saved[x,t];
      qXm_saved[x,t]$(1) = qXm.l[x,t];
    
      parameter qCTurist_saved[c,t];
      qCTurist_saved[c,t]$(1) = qCTurist.l[c,t];
    
      parameter qXSkala_saved[x,t];
      qXSkala_saved[x,t]$(1) = qXSkala.l[x,t];
    
      parameter qXTraek_saved[x,t];
      qXTraek_saved[x,t]$(1) = qXTraek.l[x,t];
    
      parameter empty_group_dummy_saved[t];
      empty_group_dummy_saved[t]$(1) = empty_group_dummy.l[t];
    
      parameter rpXUdl2pXy_saved[x,t];
      rpXUdl2pXy_saved[x,t]$(1) = rpXUdl2pXy.l[x,t];
    
      parameter rpXy2pXUdl_saved[x,t];
      rpXy2pXUdl_saved[x,t]$(1) = rpXy2pXUdl.l[x,t];
    
      parameter uXy_saved[x,t];
      uXy_saved[x,t]$(1) = uXy.l[x,t];
    
      parameter uCturisme_saved[c,t];
      uCturisme_saved[c,t]$(1) = uCturisme.l[c,t];
    
      parameter rpM2pXm_saved[x,t];
      rpM2pXm_saved[x,t]$(1) = rpM2pXm.l[x,t];
    
      parameter dqLdnL_saved[s_,t];
      dqLdnL_saved[s_,t]$(1) = dqLdnL.l[s_,t];
    
      parameter dqLLeaddnL_saved[sp,t];
      dqLLeaddnL_saved[sp,t]$(1) = dqLLeaddnL.l[sp,t];
    
      parameter vWHh_saved[a_,t];
      vWHh_saved[a_,t]$(1) = vWHh.l[a_,t];
    
      parameter vhW_saved[t];
      vhW_saved[t]$(1) = vhW.l[t];
    
      parameter vhWNy_saved[t];
      vhWNy_saved[t]$(1) = vhWNy.l[t];
    
      parameter vWUdl_saved[t];
      vWUdl_saved[t]$(1) = vWUdl.l[t];
    
      parameter vhWForhandlet_saved[t];
      vhWForhandlet_saved[t]$(1) = vhWForhandlet.l[t];
    
      parameter vVirkLoenPos_saved[t];
      vVirkLoenPos_saved[t]$(1) = vVirkLoenPos.l[t];
    
      parameter vVirkLoenPos0_saved[t];
      vVirkLoenPos0_saved[t]$(1) = vVirkLoenPos0.l[t];
    
      parameter vVirkLoenNeg_saved[t];
      vVirkLoenNeg_saved[t]$(1) = vVirkLoenNeg.l[t];
    
      parameter vVirkLoenNeg0_saved[t];
      vVirkLoenNeg0_saved[t]$(1) = vVirkLoenNeg0.l[t];
    
      parameter vFFLoenPos_saved[t];
      vFFLoenPos_saved[t]$(1) = vFFLoenPos.l[t];
    
      parameter vFFLoenPos0_saved[t];
      vFFLoenPos0_saved[t]$(1) = vFFLoenPos0.l[t];
    
      parameter vFFLoenNeg_saved[t];
      vFFLoenNeg_saved[t]$(1) = vFFLoenNeg.l[t];
    
      parameter vFFLoenNeg0_saved[t];
      vFFLoenNeg0_saved[t]$(1) = vFFLoenNeg0.l[t];
    
      parameter vW_saved[s_,t];
      vW_saved[s_,t]$(1) = vW.l[s_,t];
    
      parameter vSelvstLoen_saved[s_,t];
      vSelvstLoen_saved[s_,t]$(1) = vSelvstLoen.l[s_,t];
    
      parameter vLoensum_saved[s_,t];
      vLoensum_saved[s_,t]$(1) = vLoensum.l[s_,t];
    
      parameter pL_saved[sp,t];
      pL_saved[sp,t]$(1) = pL.l[sp,t];
    
      parameter rL2nL_saved[t];
      rL2nL_saved[t]$(1) = rL2nL.l[t];
    
      parameter dOpslagOmk2dnL_saved[sp,t];
      dOpslagOmk2dnL_saved[sp,t]$(1) = dOpslagOmk2dnL.l[sp,t];
    
      parameter dOpslagOmk2dnLLag_saved[sp,t];
      dOpslagOmk2dnLLag_saved[sp,t]$(1) = dOpslagOmk2dnLLag.l[sp,t];
    
      parameter nSoegBaseHh_saved[a_,t];
      nSoegBaseHh_saved[a_,t]$(1) = nSoegBaseHh.l[a_,t];
    
      parameter nLHh_saved[a_,t];
      nLHh_saved[a_,t]$(1) = nLHh.l[a_,t];
    
      parameter nSoegHh_saved[a_,t];
      nSoegHh_saved[a_,t]$(1) = nSoegHh.l[a_,t];
    
      parameter fDeltag_saved[a,t];
      fDeltag_saved[a,t]$(1) = fDeltag.l[a,t];
    
      parameter nLUdl_saved[t];
      nLUdl_saved[t]$(1) = nLUdl.l[t];
    
      parameter nSoegUdl_saved[t];
      nSoegUdl_saved[t]$(1) = nSoegUdl.l[t];
    
      parameter hLHh_saved[a_,t];
      hLHh_saved[a_,t]$(1) = hLHh.l[a_,t];
    
      parameter hL_saved[t];
      hL_saved[t]$(1) = hL.l[t];
    
      parameter hLUdl_saved[t];
      hLUdl_saved[t]$(1) = hLUdl.l[t];
    
      parameter rJobFinding_saved[t];
      rJobFinding_saved[t]$(1) = rJobFinding.l[t];
    
      parameter rMatch_saved[t];
      rMatch_saved[t]$(1) = rMatch.l[t];
    
      parameter rOpslag2soeg_saved[t];
      rOpslag2soeg_saved[t]$(1) = rOpslag2soeg.l[t];
    
      parameter nOpslag_saved[s_,t];
      nOpslag_saved[s_,t]$(1) = nOpslag.l[s_,t];
    
      parameter rOpslagOmk_saved[s_,t];
      rOpslagOmk_saved[s_,t]$(1) = rOpslagOmk.l[s_,t];
    
      parameter rSeparation_saved[a_,t];
      rSeparation_saved[a_,t]$(1) = rSeparation.l[a_,t];
    
      parameter fZh_saved[a,t];
      fZh_saved[a,t]$(1) = fZh.l[a,t];
    
      parameter cZh_saved[a,t];
      cZh_saved[a,t]$(1) = cZh.l[a,t];
    
      parameter nL_saved[s_,t];
      nL_saved[s_,t]$(1) = nL.l[s_,t];
    
      parameter nPop_saved[a_,t];
      nPop_saved[a_,t]$(1) = nPop.l[a_,t];
    
      parameter nSoc_saved[soc_,t];
      nSoc_saved[soc_,t]$(1) = nSoc.l[soc_,t];
    
      parameter rLedig_saved[t];
      rLedig_saved[t]$(1) = rLedig.l[t];
    
      parameter rLedigGab_saved[t];
      rLedigGab_saved[t]$(1) = rLedigGab.l[t];
    
      parameter fProdHh_saved[a_,t];
      fProdHh_saved[a_,t]$(1) = fProdHh.l[a_,t];
    
      parameter fW_saved[s_,t];
      fW_saved[s_,t]$(1) = fW.l[s_,t];
    
      parameter mtInd_saved[a_,t];
      mtInd_saved[a_,t]$(1) = mtInd.l[a_,t];
    
      parameter pY_saved[s_,t];
      pY_saved[s_,t]$(1) = pY.l[s_,t];
    
      parameter pXUdl_saved[x_,t];
      pXUdl_saved[x_,t]$(1) = pXUdl.l[x_,t];
    
      parameter pM_saved[s_,t];
      pM_saved[s_,t]$(1) = pM.l[s_,t];
    
      parameter jrMarkup_saved[s_,t];
      jrMarkup_saved[s_,t]$(1) = jrMarkup.l[s_,t];
    
      parameter rMarkup_saved[s_,t];
      rMarkup_saved[s_,t]$(1) = rMarkup.l[s_,t];
    
      parameter srMarkup_saved[s_,t];
      srMarkup_saved[s_,t]$(1) = srMarkup.l[s_,t];
    
      parameter rLUdn_saved[s_,t];
      rLUdn_saved[s_,t]$(1) = rLUdn.l[s_,t];
    
      parameter rKUdn_saved[k,s_,t];
      rKUdn_saved[k,s_,t]$(1) = rKUdn.l[k,s_,t];
    
      parameter rKUdnSpBy_saved[t];
      rKUdnSpBy_saved[t]$(1) = rKUdnSpBy.l[t];
    
      parameter ErSkatAfskr_saved[k,sp,t];
      ErSkatAfskr_saved[k,sp,t]$(1) = ErSkatAfskr.l[k,sp,t];
    
      parameter qL_saved[s_,t];
      qL_saved[s_,t]$(1) = qL.l[s_,t];
    
      parameter dKInstOmk2dK_saved[k,sp,t];
      dKInstOmk2dK_saved[k,sp,t]$(1) = dKInstOmk2dK.l[k,sp,t];
    
      parameter dKInstOmk2dI_saved[k,sp,t];
      dKInstOmk2dI_saved[k,sp,t]$(1) = dKInstOmk2dI.l[k,sp,t];
    
      parameter dKInstOmkLead2dI_saved[k,sp,t];
      dKInstOmkLead2dI_saved[k,sp,t]$(1) = dKInstOmkLead2dI.l[k,sp,t];
    
      parameter pKL_saved[sp,t];
      pKL_saved[sp,t]$(1) = pKL.l[sp,t];
    
      parameter pKLB_saved[sp,t];
      pKLB_saved[sp,t]$(1) = pKLB.l[sp,t];
    
      parameter pKLBR_saved[s_,t];
      pKLBR_saved[s_,t]$(1) = pKLBR.l[s_,t];
    
      parameter pK_saved[k,sp,t];
      pK_saved[k,sp,t]$(1) = pK.l[k,sp,t];
    
      parameter pTobinsQ_saved[k,sp,t];
      pTobinsQ_saved[k,sp,t]$(1) = pTobinsQ.l[k,sp,t];
    
      parameter qKInstOmk_saved[i_,sp,t];
      qKInstOmk_saved[i_,sp,t]$(1) = qKInstOmk.l[i_,sp,t];
    
      parameter qKLBR_saved[sp,t];
      qKLBR_saved[sp,t]$(1) = qKLBR.l[sp,t];
    
      parameter qKLB_saved[sp,t];
      qKLB_saved[sp,t]$(1) = qKLB.l[sp,t];
    
      parameter qKL_saved[sp,t];
      qKL_saved[sp,t]$(1) = qKL.l[sp,t];
    
      parameter qR_saved[r_,t];
      qR_saved[r_,t]$(1) = qR.l[r_,t];
    
      parameter qK_saved[k,s_,t];
      qK_saved[k,s_,t]$(1) = qK.l[k,s_,t];
    
      parameter qI_s_saved[i_,s_,t];
      qI_s_saved[i_,s_,t]$(1) = qI_s.l[i_,s_,t];
    
      parameter qY_saved[s_,t];
      qY_saved[s_,t]$(1) = qY.l[s_,t];
    
      parameter pOffAfskr_saved[i_,t];
      pOffAfskr_saved[i_,t]$(1) = pOffAfskr.l[i_,t];
    
      parameter pOffNyInv_saved[t];
      pOffNyInv_saved[t]$(1) = pOffNyInv.l[t];
    
      parameter qOffAfskr_saved[i_,t];
      qOffAfskr_saved[i_,t]$(1) = qOffAfskr.l[i_,t];
    
      parameter qOffNyInv_saved[t];
      qOffNyInv_saved[t]$(1) = qOffNyInv.l[t];
    
      parameter vOffAfskr_saved[i_,t];
      vOffAfskr_saved[i_,t]$(1) = vOffAfskr.l[i_,t];
    
      parameter vOffLR_saved[t];
      vOffLR_saved[t]$(1) = vOffLR.l[t];
    
      parameter vI_s_saved[i_,s_,t];
      vI_s_saved[i_,s_,t]$(1) = vI_s.l[i_,s_,t];
    
      parameter vOffDirInv_saved[t];
      vOffDirInv_saved[t]$(1) = vOffDirInv.l[t];
    
      parameter vOffIndirInv_saved[t];
      vOffIndirInv_saved[t]$(1) = vOffIndirInv.l[t];
    
      parameter vOffNyInv_saved[t];
      vOffNyInv_saved[t]$(1) = vOffNyInv.l[t];
    
      parameter srvOffL2LR_saved[t];
      srvOffL2LR_saved[t]$(1) = srvOffL2LR.l[t];
    
      parameter rOffK2Y_saved[k,t];
      rOffK2Y_saved[k,t]$(1) = rOffK2Y.l[k,t];
    
      parameter rvOffDirInv2BNP_saved[t];
      rvOffDirInv2BNP_saved[t]$(1) = rvOffDirInv2BNP.l[t];
    
      parameter vAktie_saved[t];
      vAktie_saved[t]$(1) = vAktie.l[t];
    
      parameter vAktiex_saved[s_,t];
      vAktiex_saved[s_,t]$(1) = vAktiex.l[s_,t];
    
      parameter vAktieRes_saved[t];
      vAktieRes_saved[t]$(1) = vAktieRes.l[t];
    
      parameter vEBT_saved[s_,t];
      vEBT_saved[s_,t]$(1) = vEBT.l[s_,t];
    
      parameter vEBTx_saved[s_,t];
      vEBTx_saved[s_,t]$(1) = vEBTx.l[s_,t];
    
      parameter vEBITDA_saved[s_,t];
      vEBITDA_saved[s_,t]$(1) = vEBITDA.l[s_,t];
    
      parameter vFCF_saved[s_,t];
      vFCF_saved[s_,t]$(1) = vFCF.l[s_,t];
    
      parameter vVirkRenter_saved[t];
      vVirkRenter_saved[t]$(1) = vVirkRenter.l[t];
    
      parameter vVirkOmv_saved[t];
      vVirkOmv_saved[t]$(1) = vVirkOmv.l[t];
    
      parameter vVirkNFE_saved[t];
      vVirkNFE_saved[t]$(1) = vVirkNFE.l[t];
    
      parameter vKskat_saved[i_,s_,t];
      vKskat_saved[i_,s_,t]$(1) = vKskat.l[i_,s_,t];
    
      parameter vAfskrFradrag_saved[s_,t];
      vAfskrFradrag_saved[s_,t]$(1) = vAfskrFradrag.l[s_,t];
    
      parameter vDividender_saved[t];
      vDividender_saved[t]$(1) = vDividender.l[t];
    
      parameter vUdstedelser_saved[t];
      vUdstedelser_saved[t]$(1) = vUdstedelser.l[t];
    
      parameter vVirkK_saved[s_,t];
      vVirkK_saved[s_,t]$(1) = vVirkK.l[s_,t];
    
      parameter vVirk_saved[portf_,t];
      vVirk_saved[portf_,t]$(1) = vVirk.l[portf_,t];
    
      parameter vVirkLaan_saved[s_,t];
      vVirkLaan_saved[s_,t]$(1) = vVirkLaan.l[s_,t];
    
      parameter vVirkx_saved[t];
      vVirkx_saved[t]$(1) = vVirkx.l[t];
    
      parameter vPension_saved[akt,t];
      vPension_saved[akt,t]$(1) = vPension.l[akt,t];
    
      parameter vtSelskabx_saved[s_,t];
      vtSelskabx_saved[s_,t]$(1) = vtSelskabx.l[s_,t];
    
      parameter vVirkFinInd_saved[t];
      vVirkFinInd_saved[t]$(1) = vVirkFinInd.l[t];
    
      parameter rVirkDisk_saved[sp,t];
      rVirkDisk_saved[sp,t]$(1) = rVirkDisk.l[sp,t];
    
      parameter rAfkastKrav_saved[s_,t];
      rAfkastKrav_saved[s_,t]$(1) = rAfkastKrav.l[s_,t];
    
      parameter rVirkxAfk_saved[t];
      rVirkxAfk_saved[t]$(1) = rVirkxAfk.l[t];
    
      parameter rRente_saved[portf,t];
      rRente_saved[portf,t]$(1) = rRente.l[portf,t];
    
      parameter rOmv_saved[portf,t];
      rOmv_saved[portf,t]$(1) = rOmv.l[portf,t];
    
      parameter rLaan2K_saved[t];
      rLaan2K_saved[t]$(1) = rLaan2K.l[t];
    
      parameter rIndlAktiePrem_saved[s_,t];
      rIndlAktiePrem_saved[s_,t]$(1) = rIndlAktiePrem.l[s_,t];
    
      parameter rFinAccelPrem_saved[sp,t];
      rFinAccelPrem_saved[sp,t]$(1) = rFinAccelPrem.l[sp,t];
    
      parameter vFCFxRef_saved[sp,t];
      vFCFxRef_saved[sp,t]$(1) = vFCFxRef.l[sp,t];
    
      parameter EpC_saved[t];
      EpC_saved[t]$(1) = EpC.l[t];
    
      parameter pBolig_saved[t];
      pBolig_saved[t]$(1) = pBolig.l[t];
    
      parameter pLand_saved[t];
      pLand_saved[t]$(1) = pLand.l[t];
    
      parameter pC_saved[c_,t];
      pC_saved[c_,t]$(1) = pC.l[c_,t];
    
      parameter EpBolig_saved[t];
      EpBolig_saved[t]$(1) = EpBolig.l[t];
    
      parameter EpLand_saved[t];
      EpLand_saved[t]$(1) = EpLand.l[t];
    
      parameter pBoligUC_saved[a,t];
      pBoligUC_saved[a,t]$(1) = pBoligUC.l[a,t];
    
      parameter qC_saved[c_,t];
      qC_saved[c_,t]$(1) = qC.l[c_,t];
    
      parameter qC_a_saved[a,t];
      qC_a_saved[a,t]$(1) = qC_a.l[a,t];
    
      parameter qCR_saved[a_,t];
      qCR_saved[a_,t]$(1) = qCR.l[a_,t];
    
      parameter qCHtM_saved[a_,t];
      qCHtM_saved[a_,t]$(1) = qCHtM.l[a_,t];
    
      parameter qCRxRef_saved[a,t];
      qCRxRef_saved[a,t]$(1) = qCRxRef.l[a,t];
    
      parameter qCHtMxRef_saved[a_,t];
      qCHtMxRef_saved[a_,t]$(1) = qCHtMxRef.l[a_,t];
    
      parameter qBiler_saved[t];
      qBiler_saved[t]$(1) = qBiler.l[t];
    
      parameter qBoligHtM_saved[a_,t];
      qBoligHtM_saved[a_,t]$(1) = qBoligHtM.l[a_,t];
    
      parameter qBoligHtMxRef_saved[a_,t];
      qBoligHtMxRef_saved[a_,t]$(1) = qBoligHtMxRef.l[a_,t];
    
      parameter qBoligR_saved[a_,t];
      qBoligR_saved[a_,t]$(1) = qBoligR.l[a_,t];
    
      parameter qBolig_saved[a_,t];
      qBolig_saved[a_,t]$(1) = qBolig.l[a_,t];
    
      parameter qBoligRxRef_saved[a_,t];
      qBoligRxRef_saved[a_,t]$(1) = qBoligRxRef.l[a_,t];
    
      parameter qYBolig_saved[t];
      qYBolig_saved[t]$(1) = qYBolig.l[t];
    
      parameter qIBoligInstOmk_saved[t];
      qIBoligInstOmk_saved[t]$(1) = qIBoligInstOmk.l[t];
    
      parameter qLandSalg_saved[t];
      qLandSalg_saved[t]$(1) = qLandSalg.l[t];
    
      parameter qKBolig_saved[t];
      qKBolig_saved[t]$(1) = qKBolig.l[t];
    
      parameter qIBolig_saved[t];
      qIBolig_saved[t]$(1) = qIBolig.l[t];
    
      parameter qNytte_saved[a,t];
      qNytte_saved[a,t]$(1) = qNytte.l[a,t];
    
      parameter qArvBase_saved[a,t];
      qArvBase_saved[a,t]$(1) = qArvBase.l[a,t];
    
      parameter qFormueBase_saved[a,t];
      qFormueBase_saved[a,t]$(1) = qFormueBase.l[a,t];
    
      parameter vC_a_saved[a,t];
      vC_a_saved[a,t]$(1) = vC_a.l[a,t];
    
      parameter vHhx_saved[a_,t];
      vHhx_saved[a_,t]$(1) = vHhx.l[a_,t];
    
      parameter vCLejeBolig_saved[a_,t];
      vCLejeBolig_saved[a_,t]$(1) = vCLejeBolig.l[a_,t];
    
      parameter vArvGivet_saved[a,t];
      vArvGivet_saved[a,t]$(1) = vArvGivet.l[a,t];
    
      parameter vArv_saved[a_,t];
      vArv_saved[a_,t]$(1) = vArv.l[a_,t];
    
      parameter vtArv_saved[a_,t];
      vtArv_saved[a_,t]$(1) = vtArv.l[a_,t];
    
      parameter vtHhx_saved[a_,t];
      vtHhx_saved[a_,t]$(1) = vtHhx.l[a_,t];
    
      parameter vBoligUdgift_saved[a_,t];
      vBoligUdgift_saved[a_,t]$(1) = vBoligUdgift.l[a_,t];
    
      parameter vBoligUdgiftHtM_saved[a_,t];
      vBoligUdgiftHtM_saved[a_,t]$(1) = vBoligUdgiftHtM.l[a_,t];
    
      parameter vBoligUdgiftArv_saved[t];
      vBoligUdgiftArv_saved[t]$(1) = vBoligUdgiftArv.l[t];
    
      parameter vHhNFErest_saved[a_,t];
      vHhNFErest_saved[a_,t]$(1) = vHhNFErest.l[a_,t];
    
      parameter jvHhNFErest_saved[a_,t];
      jvHhNFErest_saved[a_,t]$(1) = jvHhNFErest.l[a_,t];
    
      parameter vBoernFraHh_saved[a,t];
      vBoernFraHh_saved[a,t]$(1) = vBoernFraHh.l[a,t];
    
      parameter vHhTilBoern_saved[a_,t];
      vHhTilBoern_saved[a_,t]$(1) = vHhTilBoern.l[a_,t];
    
      parameter vBolig_saved[a_,t];
      vBolig_saved[a_,t]$(1) = vBolig.l[a_,t];
    
      parameter vBoligHtM_saved[a_,t];
      vBoligHtM_saved[a_,t]$(1) = vBoligHtM.l[a_,t];
    
      parameter vKBolig_saved[t];
      vKBolig_saved[t]$(1) = vKBolig.l[t];
    
      parameter vIBolig_saved[t];
      vIBolig_saved[t]$(1) = vIBolig.l[t];
    
      parameter vHhInvestx_saved[a_,t];
      vHhInvestx_saved[a_,t]$(1) = vHhInvestx.l[a_,t];
    
      parameter vSelvstKapInd_saved[a_,t];
      vSelvstKapInd_saved[a_,t]$(1) = vSelvstKapInd.l[a_,t];
    
      parameter vArvKorrektion_saved[a_,t];
      vArvKorrektion_saved[a_,t]$(1) = vArvKorrektion.l[a_,t];
    
      parameter rDisk_saved[a,t];
      rDisk_saved[a,t]$(1) = rDisk.l[a,t];
    
      parameter rKLeje2Bolig_saved[t];
      rKLeje2Bolig_saved[t]$(1) = rKLeje2Bolig.l[t];
    
      parameter rvCLejeBolig_saved[a_,t];
      rvCLejeBolig_saved[a_,t]$(1) = rvCLejeBolig.l[a_,t];
    
      parameter fHh_saved[a,t];
      fHh_saved[a,t]$(1) = fHh.l[a,t];
    
      parameter uBolig_saved[a,t];
      uBolig_saved[a,t]$(1) = uBolig.l[a,t];
    
      parameter uBoligHtM_saved[a,t];
      uBoligHtM_saved[a,t]$(1) = uBoligHtM.l[a,t];
    
      parameter fBoligUdgift_saved[a,t];
      fBoligUdgift_saved[a,t]$(1) = fBoligUdgift.l[a,t];
    
      parameter mUBolig_saved[a,t];
      mUBolig_saved[a,t]$(1) = mUBolig.l[a,t];
    
      parameter dqIBoligInstOmk_saved[t];
      dqIBoligInstOmk_saved[t]$(1) = dqIBoligInstOmk.l[t];
    
      parameter mUC_saved[a,t];
      mUC_saved[a,t]$(1) = mUC.l[a,t];
    
      parameter EmUC_saved[a,t];
      EmUC_saved[a,t]$(1) = EmUC.l[a,t];
    
      parameter uC_saved[c_,t];
      uC_saved[c_,t]$(1) = uC.l[c_,t];
    
      parameter fMigration_saved[a_,t];
      fMigration_saved[a_,t]$(1) = fMigration.l[a_,t];
    
      parameter uBoernFraHh_saved[a,t];
      uBoernFraHh_saved[a,t]$(1) = uBoernFraHh.l[a,t];
    
      parameter dFormue_saved[a_,t];
      dFormue_saved[a_,t]$(1) = dFormue.l[a_,t];
    
      parameter jvHhx_saved[a_,t];
      jvHhx_saved[a_,t]$(1) = jvHhx.l[a_,t];
    
      parameter vPrimSaldo_saved[t];
      vPrimSaldo_saved[t]$(1) = vPrimSaldo.l[t];
    
      parameter vSaldo_saved[t];
      vSaldo_saved[t]$(1) = vSaldo.l[t];
    
      parameter vOff_saved[portf_,t];
      vOff_saved[portf_,t]$(1) = vOff.l[portf_,t];
    
      parameter vOffOmv_saved[t];
      vOffOmv_saved[t]$(1) = vOffOmv.l[t];
    
      parameter vOffNetRenter_saved[t];
      vOffNetRenter_saved[t]$(1) = vOffNetRenter.l[t];
    
      parameter vNROffNetRenter_saved[t];
      vNROffNetRenter_saved[t]$(1) = vNROffNetRenter.l[t];
    
      parameter vOffRenteInd_saved[t];
      vOffRenteInd_saved[t]$(1) = vOffRenteInd.l[t];
    
      parameter vOffRenteUd_saved[t];
      vOffRenteUd_saved[t]$(1) = vOffRenteUd.l[t];
    
      parameter vOffNetFormue_saved[t];
      vOffNetFormue_saved[t]$(1) = vOffNetFormue.l[t];
    
      parameter vOffPas_saved[t];
      vOffPas_saved[t]$(1) = vOffPas.l[t];
    
      parameter vOffY2C_saved[t];
      vOffY2C_saved[t]$(1) = vOffY2C.l[t];
    
      parameter vSatsIndeks_saved[t];
      vSatsIndeks_saved[t]$(1) = vSatsIndeks.l[t];
    
      parameter rOffRenteUd_saved[t];
      rOffRenteUd_saved[t]$(1) = rOffRenteUd.l[t];
    
      parameter nvBNP_saved[t];
      nvBNP_saved[t]$(1) = nvBNP.l[t];
    
      parameter nvPrimSaldo_saved[t];
      nvPrimSaldo_saved[t]$(1) = nvPrimSaldo.l[t];
    
      parameter nvtLukning_saved[t];
      nvtLukning_saved[t]$(1) = nvtLukning.l[t];
    
      parameter nvGLukning_saved[t];
      nvGLukning_saved[t]$(1) = nvGLukning.l[t];
    
      parameter rHBI_saved[t];
      rHBI_saved[t]$(1) = rHBI.l[t];
    
      parameter fHBIDisk_saved[t];
      fHBIDisk_saved[t]$(1) = fHBIDisk.l[t];
    
      parameter rOffRenteInd_saved[t];
      rOffRenteInd_saved[t]$(1) = rOffRenteInd.l[t];
    
      parameter rOffAkt2BNP_saved[t];
      rOffAkt2BNP_saved[t]$(1) = rOffAkt2BNP.l[t];
    
      parameter vOffPrimInd_saved[t];
      vOffPrimInd_saved[t]$(1) = vOffPrimInd.l[t];
    
      parameter vtY_saved[t];
      vtY_saved[t]$(1) = vtY.l[t];
    
      parameter vtYRest_saved[t];
      vtYRest_saved[t]$(1) = vtYRest.l[t];
    
      parameter vtDirekte_saved[t];
      vtDirekte_saved[t]$(1) = vtDirekte.l[t];
    
      parameter vtKilde_saved[t];
      vtKilde_saved[t]$(1) = vtKilde.l[t];
    
      parameter vtBund_saved[a_,t];
      vtBund_saved[a_,t]$(1) = vtBund.l[a_,t];
    
      parameter vtTop_saved[a_,t];
      vtTop_saved[a_,t]$(1) = vtTop.l[a_,t];
    
      parameter vtKommune_saved[a_,t];
      vtKommune_saved[a_,t]$(1) = vtKommune.l[a_,t];
    
      parameter vtEjd_saved[a_,t];
      vtEjd_saved[a_,t]$(1) = vtEjd.l[a_,t];
    
      parameter vtAktie_saved[a_,t];
      vtAktie_saved[a_,t]$(1) = vtAktie.l[a_,t];
    
      parameter vtVirksomhed_saved[a_,t];
      vtVirksomhed_saved[a_,t]$(1) = vtVirksomhed.l[a_,t];
    
      parameter vtDoedsbo_saved[a_,t];
      vtDoedsbo_saved[a_,t]$(1) = vtDoedsbo.l[a_,t];
    
      parameter vtHhAM_saved[a_,t];
      vtHhAM_saved[a_,t]$(1) = vtHhAM.l[a_,t];
    
      parameter vtPersRest_saved[a_,t];
      vtPersRest_saved[a_,t]$(1) = vtPersRest.l[a_,t];
    
      parameter vtKapPens_saved[a_,t];
      vtKapPens_saved[a_,t]$(1) = vtKapPens.l[a_,t];
    
      parameter vtKapPensArv_saved[a_,t];
      vtKapPensArv_saved[a_,t]$(1) = vtKapPensArv.l[a_,t];
    
      parameter vtSelskab_saved[s_,t];
      vtSelskab_saved[s_,t]$(1) = vtSelskab.l[s_,t];
    
      parameter vtSelskabRest_saved[s_,t];
      vtSelskabRest_saved[s_,t]$(1) = vtSelskabRest.l[s_,t];
    
      parameter vtSelskabNord_saved[t];
      vtSelskabNord_saved[t]$(1) = vtSelskabNord.l[t];
    
      parameter vtPAL_saved[t];
      vtPAL_saved[t]$(1) = vtPAL.l[t];
    
      parameter vtMedie_saved[t];
      vtMedie_saved[t]$(1) = vtMedie.l[t];
    
      parameter vtHhVaegt_saved[a_,t];
      vtHhVaegt_saved[a_,t]$(1) = vtHhVaegt.l[a_,t];
    
      parameter vtAfgEU_saved[t];
      vtAfgEU_saved[t]$(1) = vtAfgEU.l[t];
    
      parameter vtLukning_saved[a_,t];
      vtLukning_saved[a_,t]$(1) = vtLukning.l[a_,t];
    
      parameter vtIndirekte_saved[t];
      vtIndirekte_saved[t]$(1) = vtIndirekte.l[t];
    
      parameter vtEU_saved[t];
      vtEU_saved[t]$(1) = vtEU.l[t];
    
      parameter vBidrag_saved[a_,t];
      vBidrag_saved[a_,t]$(1) = vBidrag.l[a_,t];
    
      parameter vBidragAK_saved[t];
      vBidragAK_saved[t]$(1) = vBidragAK.l[t];
    
      parameter vBidragEL_saved[t];
      vBidragEL_saved[t]$(1) = vBidragEL.l[t];
    
      parameter vBidragFri_saved[t];
      vBidragFri_saved[t]$(1) = vBidragFri.l[t];
    
      parameter vBidragObl_saved[t];
      vBidragObl_saved[t]$(1) = vBidragObl.l[t];
    
      parameter vBidragOblTjm_saved[t];
      vBidragOblTjm_saved[t]$(1) = vBidragOblTjm.l[t];
    
      parameter vBidragATP_saved[t];
      vBidragATP_saved[t]$(1) = vBidragATP.l[t];
    
      parameter vBidragOblRest_saved[t];
      vBidragOblRest_saved[t]$(1) = vBidragOblRest.l[t];
    
      parameter vBidragTjmp_saved[t];
      vBidragTjmp_saved[t]$(1) = vBidragTjmp.l[t];
    
      parameter vOffIndRest_saved[t];
      vOffIndRest_saved[t]$(1) = vOffIndRest.l[t];
    
      parameter vtKirke_saved[a_,t];
      vtKirke_saved[a_,t]$(1) = vtKirke.l[a_,t];
    
      parameter vJordrente_saved[t];
      vJordrente_saved[t]$(1) = vJordrente.l[t];
    
      parameter vPersInd_saved[a_,t];
      vPersInd_saved[a_,t]$(1) = vPersInd.l[a_,t];
    
      parameter vPersIndRest_saved[a_,t];
      vPersIndRest_saved[a_,t]$(1) = vPersIndRest.l[a_,t];
    
      parameter vSkatteplInd_saved[a_,t];
      vSkatteplInd_saved[a_,t]$(1) = vSkatteplInd.l[a_,t];
    
      parameter vNetKapIndPos_saved[a_,t];
      vNetKapIndPos_saved[a_,t]$(1) = vNetKapIndPos.l[a_,t];
    
      parameter vNetKapInd_saved[a_,t];
      vNetKapInd_saved[a_,t]$(1) = vNetKapInd.l[a_,t];
    
      parameter vKapIndPos_saved[a_,t];
      vKapIndPos_saved[a_,t]$(1) = vKapIndPos.l[a_,t];
    
      parameter vKapIndNeg_saved[a_,t];
      vKapIndNeg_saved[a_,t]$(1) = vKapIndNeg.l[a_,t];
    
      parameter vPersFradrag_saved[a_,t];
      vPersFradrag_saved[a_,t]$(1) = vPersFradrag.l[a_,t];
    
      parameter vAKFradrag_saved[a_,t];
      vAKFradrag_saved[a_,t]$(1) = vAKFradrag.l[a_,t];
    
      parameter vELFradrag_saved[a_,t];
      vELFradrag_saved[a_,t]$(1) = vELFradrag.l[a_,t];
    
      parameter vRestFradrag_saved[a_,t];
      vRestFradrag_saved[a_,t]$(1) = vRestFradrag.l[a_,t];
    
      parameter vBeskFradrag_saved[a_,t];
      vBeskFradrag_saved[a_,t]$(1) = vBeskFradrag.l[a_,t];
    
      parameter vRealiseretAktieOmv_saved[a_,t];
      vRealiseretAktieOmv_saved[a_,t]$(1) = vRealiseretAktieOmv.l[a_,t];
    
      parameter vUrealiseretAktieOmv_saved[t];
      vUrealiseretAktieOmv_saved[t]$(1) = vUrealiseretAktieOmv.l[t];
    
      parameter ftBund_saved[a_,t];
      ftBund_saved[a_,t]$(1) = ftBund.l[a_,t];
    
      parameter rTopSkatInd_saved[a_,t];
      rTopSkatInd_saved[a_,t]$(1) = rTopSkatInd.l[a_,t];
    
      parameter ftKommune_saved[a_,t];
      ftKommune_saved[a_,t]$(1) = ftKommune.l[a_,t];
    
      parameter fvtEjd_saved[t];
      fvtEjd_saved[t]$(1) = fvtEjd.l[t];
    
      parameter fvtAktie_saved[t];
      fvtAktie_saved[t]$(1) = fvtAktie.l[t];
    
      parameter fvtDoedsbo_saved[t];
      fvtDoedsbo_saved[t]$(1) = fvtDoedsbo.l[t];
    
      parameter jvKapIndPos_saved[a_,t];
      jvKapIndPos_saved[a_,t]$(1) = jvKapIndPos.l[a_,t];
    
      parameter jvKapIndneg_saved[a_,t];
      jvKapIndneg_saved[a_,t]$(1) = jvKapIndneg.l[a_,t];
    
      parameter uvPersFradrag_saved[a_,t];
      uvPersFradrag_saved[a_,t]$(1) = uvPersFradrag.l[a_,t];
    
      parameter rOffFraUdl2BNP_saved[t];
      rOffFraUdl2BNP_saved[t]$(1) = rOffFraUdl2BNP.l[t];
    
      parameter rOffFraHh2BNP_saved[t];
      rOffFraHh2BNP_saved[t]$(1) = rOffFraHh2BNP.l[t];
    
      parameter rOffFraVirk2BNP_saved[t];
      rOffFraVirk2BNP_saved[t]$(1) = rOffFraVirk2BNP.l[t];
    
      parameter rOffVirk2BNP_saved[t];
      rOffVirk2BNP_saved[t]$(1) = rOffVirk2BNP.l[t];
    
      parameter rPersIndRest_a2PersInd_saved[a,t];
      rPersIndRest_a2PersInd_saved[a,t]$(1) = rPersIndRest_a2PersInd.l[a,t];
    
      parameter rPersIndRest_t2PersInd_saved[t];
      rPersIndRest_t2PersInd_saved[t]$(1) = rPersIndRest_t2PersInd.l[t];
    
      parameter rRestFradragSats2SatsIndeks_saved[t];
      rRestFradragSats2SatsIndeks_saved[t]$(1) = rRestFradragSats2SatsIndeks.l[t];
    
      parameter mtVirk_saved[s_,t];
      mtVirk_saved[s_,t]$(1) = mtVirk.l[s_,t];
    
      parameter tLukning_saved[t];
      tLukning_saved[t]$(1) = tLukning.l[t];
    
      parameter pGxAfskr_saved[t];
      pGxAfskr_saved[t]$(1) = pGxAfskr.l[t];
    
      parameter qGxAfskr_saved[t];
      qGxAfskr_saved[t]$(1) = qGxAfskr.l[t];
    
      parameter qG_saved[g_,t];
      qG_saved[g_,t]$(1) = qG.l[g_,t];
    
      parameter vGxAfskr_saved[t];
      vGxAfskr_saved[t]$(1) = vGxAfskr.l[t];
    
      parameter vOffPrimUd_saved[t];
      vOffPrimUd_saved[t]$(1) = vOffPrimUd.l[t];
    
      parameter vOffInv_saved[t];
      vOffInv_saved[t]$(1) = vOffInv.l[t];
    
      parameter vOffSub_saved[t];
      vOffSub_saved[t]$(1) = vOffSub.l[t];
    
      parameter vSubY_saved[t];
      vSubY_saved[t]$(1) = vSubY.l[t];
    
      parameter vSubYRes_saved[t];
      vSubYRes_saved[t]$(1) = vSubYRes.l[t];
    
      parameter vOffUdRest_saved[t];
      vOffUdRest_saved[t]$(1) = vOffUdRest.l[t];
    
      parameter vOffTilHh_saved[t];
      vOffTilHh_saved[t]$(1) = vOffTilHh.l[t];
    
      parameter vOvf_saved[ovf_,t];
      vOvf_saved[ovf_,t]$(1) = vOvf.l[ovf_,t];
    
      parameter vHhOvf_saved[a,t];
      vHhOvf_saved[a,t]$(1) = vHhOvf.l[a,t];
    
      parameter vOvfSkatPl_saved[a_,t];
      vOvfSkatPl_saved[a_,t]$(1) = vOvfSkatPl.l[a_,t];
    
      parameter vOvfSats_saved[ovf,t];
      vOvfSats_saved[ovf,t]$(1) = vOvfSats.l[ovf,t];
    
      parameter vOvfUbeskat_saved[a_,t];
      vOvfUbeskat_saved[a_,t]$(1) = vOvfUbeskat.l[a_,t];
    
      parameter vGLukning_saved[t];
      vGLukning_saved[t]$(1) = vGLukning.l[t];
    
      parameter uvGxAfskr_saved[t];
      uvGxAfskr_saved[t]$(1) = uvGxAfskr.l[t];
    
      parameter nOvf_saved[ovf,t];
      nOvf_saved[ovf,t]$(1) = nOvf.l[ovf,t];
    
      parameter fHhOvf_saved[t];
      fHhOvf_saved[t]$(1) = fHhOvf.l[t];
    
      parameter dnOvf2dBesk_saved[ovf,t];
      dnOvf2dBesk_saved[ovf,t]$(1) = dnOvf2dBesk.l[ovf,t];
    
      parameter dnOvf2dPop_saved[ovf,t];
      dnOvf2dPop_saved[ovf,t]$(1) = dnOvf2dPop.l[ovf,t];
    
      parameter dvOvf2dBesk_saved[ovf_,t];
      dvOvf2dBesk_saved[ovf_,t]$(1) = dvOvf2dBesk.l[ovf_,t];
    
      parameter dvOvf2dPop_saved[ovf_,t];
      dvOvf2dPop_saved[ovf_,t]$(1) = dvOvf2dPop.l[ovf_,t];
    
      parameter rOffLandKoeb2BNP_saved[t];
      rOffLandKoeb2BNP_saved[t]$(1) = rOffLandKoeb2BNP.l[t];
    
      parameter rOffTilUdl2BNP_saved[t];
      rOffTilUdl2BNP_saved[t]$(1) = rOffTilUdl2BNP.l[t];
    
      parameter rOffTilVirk2BNP_saved[t];
      rOffTilVirk2BNP_saved[t]$(1) = rOffTilVirk2BNP.l[t];
    
      parameter rOffTilHhKap2BNP_saved[t];
      rOffTilHhKap2BNP_saved[t]$(1) = rOffTilHhKap2BNP.l[t];
    
      parameter rOffTilHhOev2BNP_saved[t];
      rOffTilHhOev2BNP_saved[t]$(1) = rOffTilHhOev2BNP.l[t];
    
      parameter rSubEU2BNP_saved[t];
      rSubEU2BNP_saved[t]$(1) = rSubEU2BNP.l[t];
    
      parameter vtMoms_saved[d_,s_,t];
      vtMoms_saved[d_,s_,t]$(1) = vtMoms.l[d_,s_,t];
    
      parameter vtNetAfg_saved[d_,s_,t];
      vtNetAfg_saved[d_,s_,t]$(1) = vtNetAfg.l[d_,s_,t];
    
      parameter vtAfg_saved[d_,s_,t];
      vtAfg_saved[d_,s_,t]$(1) = vtAfg.l[d_,s_,t];
    
      parameter vtReg_saved[d_,t];
      vtReg_saved[d_,t]$(1) = vtReg.l[d_,t];
    
      parameter vPunktSub_saved[t];
      vPunktSub_saved[t]$(1) = vPunktSub.l[t];
    
      parameter vtTold_saved[d_,s_,t];
      vtTold_saved[d_,s_,t]$(1) = vtTold.l[d_,s_,t];
    
      parameter vtGrund_saved[s_,t];
      vtGrund_saved[s_,t]$(1) = vtGrund.l[s_,t];
    
      parameter vtVirkVaegt_saved[s_,t];
      vtVirkVaegt_saved[s_,t]$(1) = vtVirkVaegt.l[s_,t];
    
      parameter vtVirkAM_saved[s_,t];
      vtVirkAM_saved[s_,t]$(1) = vtVirkAM.l[s_,t];
    
      parameter vtAUB_saved[s_,t];
      vtAUB_saved[s_,t]$(1) = vtAUB.l[s_,t];
    
      parameter vtSubLoen_saved[s_,t];
      vtSubLoen_saved[s_,t]$(1) = vtSubLoen.l[s_,t];
    
      parameter vtNetLoenAfg_saved[s_,t];
      vtNetLoenAfg_saved[s_,t]$(1) = vtNetLoenAfg.l[s_,t];
    
      parameter vtNetYAfg_saved[s_,t];
      vtNetYAfg_saved[s_,t]$(1) = vtNetYAfg.l[s_,t];
    
      parameter vtNetYAfgRest_saved[s_,t];
      vtNetYAfgRest_saved[s_,t]$(1) = vtNetYAfgRest.l[s_,t];
    
      parameter tNetAfg_y_saved[d_,s,t];
      tNetAfg_y_saved[d_,s,t]$(1) = tNetAfg_y.l[d_,s,t];
    
      parameter tNetAfg_m_saved[d_,s,t];
      tNetAfg_m_saved[d_,s,t]$(1) = tNetAfg_m.l[d_,s,t];
    
      parameter tL_saved[s_,t];
      tL_saved[s_,t]$(1) = tL.l[s_,t];
    
      parameter tIOy_saved[d_,s,t];
      tIOy_saved[d_,s,t]$(1) = tIOy.l[d_,s,t];
    
      parameter tIOm_saved[d_,s,t];
      tIOm_saved[d_,s,t]$(1) = tIOm.l[d_,s,t];
    
      parameter vVirkBVT5aarSnit_saved[t];
      vVirkBVT5aarSnit_saved[t]$(1) = vVirkBVT5aarSnit.l[t];
    
      parameter vBVT2hL_saved[t];
      vBVT2hL_saved[t]$(1) = vBVT2hL.l[t];
    
      parameter vBVT2hLsnit_saved[t];
      vBVT2hLsnit_saved[t]$(1) = vBVT2hLsnit.l[t];
    
      parameter qBVT2hL_saved[t];
      qBVT2hL_saved[t]$(1) = qBVT2hL.l[t];
    
      parameter qBVT2hLsnit_saved[t];
      qBVT2hLsnit_saved[t]$(1) = qBVT2hLsnit.l[t];
    
      parameter vBFI_saved[t];
      vBFI_saved[t]$(1) = vBFI.l[t];
    
      parameter vUdl_saved[portf_,t];
      vUdl_saved[portf_,t]$(1) = vUdl.l[portf_,t];
    
      parameter vUdlRenter_saved[t];
      vUdlRenter_saved[t]$(1) = vUdlRenter.l[t];
    
      parameter vUdlOmv_saved[t];
      vUdlOmv_saved[t]$(1) = vUdlOmv.l[t];
    
      parameter vUdlNFE_saved[t];
      vUdlNFE_saved[t]$(1) = vUdlNFE.l[t];
    
      parameter rArbProd_saved[t];
      rArbProd_saved[t]$(1) = rArbProd.l[t];
    
      parameter rBVTGab_saved[t];
      rBVTGab_saved[t]$(1) = rBVTGab.l[t];
    
      parameter rBeskGab_saved[t];
      rBeskGab_saved[t]$(1) = rBeskGab.l[t];
    
      parameter pCInflSnit_saved[t];
      pCInflSnit_saved[t]$(1) = pCInflSnit.l[t];
    
      parameter pBNP_saved[t];
      pBNP_saved[t]$(1) = pBNP.l[t];
    
      parameter pBVT_saved[s_,t];
      pBVT_saved[s_,t]$(1) = pBVT.l[s_,t];
    
      parameter pIO_saved[d_,s,t];
      pIO_saved[d_,s,t]$(1) = pIO.l[d_,s,t];
    
      parameter pIOy_saved[d_,s,t];
      pIOy_saved[d_,s,t]$(1) = pIOy.l[d_,s,t];
    
      parameter pIOm_saved[d_,s,t];
      pIOm_saved[d_,s,t]$(1) = pIOm.l[d_,s,t];
    
      parameter pX_saved[x_,t];
      pX_saved[x_,t]$(1) = pX.l[x_,t];
    
      parameter pXm_saved[x,t];
      pXm_saved[x,t]$(1) = pXm.l[x,t];
    
      parameter pXy_saved[x,t];
      pXy_saved[x,t]$(1) = pXy.l[x,t];
    
      parameter pR_saved[r_,t];
      pR_saved[r_,t]$(1) = pR.l[r_,t];
    
      parameter pCDK_saved[c_,t];
      pCDK_saved[c_,t]$(1) = pCDK.l[c_,t];
    
      parameter pCTurist_saved[c,t];
      pCTurist_saved[c,t]$(1) = pCTurist.l[c,t];
    
      parameter pG_saved[g_,t];
      pG_saved[g_,t]$(1) = pG.l[g_,t];
    
      parameter pI_saved[i_,t];
      pI_saved[i_,t]$(1) = pI.l[i_,t];
    
      parameter pI_s_saved[i_,s_,t];
      pI_s_saved[i_,s_,t]$(1) = pI_s.l[i_,s_,t];
    
      parameter vY_saved[s_,t];
      vY_saved[s_,t]$(1) = vY.l[s_,t];
    
      parameter vM_saved[s_,t];
      vM_saved[s_,t]$(1) = vM.l[s_,t];
    
      parameter vBNP_saved[t];
      vBNP_saved[t]$(1) = vBNP.l[t];
    
      parameter vBVT_saved[s_,t];
      vBVT_saved[s_,t]$(1) = vBVT.l[s_,t];
    
      parameter vIO_saved[d_,s_,t];
      vIO_saved[d_,s_,t]$(1) = vIO.l[d_,s_,t];
    
      parameter vIOy_saved[d_,s_,t];
      vIOy_saved[d_,s_,t]$(1) = vIOy.l[d_,s_,t];
    
      parameter vIOm_saved[d_,s_,t];
      vIOm_saved[d_,s_,t]$(1) = vIOm.l[d_,s_,t];
    
      parameter vX_saved[x_,t];
      vX_saved[x_,t]$(1) = vX.l[x_,t];
    
      parameter vXy_saved[x,t];
      vXy_saved[x,t]$(1) = vXy.l[x,t];
    
      parameter vR_saved[r_,t];
      vR_saved[r_,t]$(1) = vR.l[r_,t];
    
      parameter vC_saved[c_,t];
      vC_saved[c_,t]$(1) = vC.l[c_,t];
    
      parameter vCTurist_saved[c,t];
      vCTurist_saved[c,t]$(1) = vCTurist.l[c,t];
    
      parameter vG_saved[g_,t];
      vG_saved[g_,t]$(1) = vG.l[g_,t];
    
      parameter vI_saved[i_,t];
      vI_saved[i_,t]$(1) = vI.l[i_,t];
    
      parameter qM_saved[s_,t];
      qM_saved[s_,t]$(1) = qM.l[s_,t];
    
      parameter qBNP_saved[t];
      qBNP_saved[t]$(1) = qBNP.l[t];
    
      parameter qBVT_saved[s_,t];
      qBVT_saved[s_,t]$(1) = qBVT.l[s_,t];
    
      parameter qIO_saved[d_,s_,t];
      qIO_saved[d_,s_,t]$(1) = qIO.l[d_,s_,t];
    
      parameter qIOy_saved[d_,s_,t];
      qIOy_saved[d_,s_,t]$(1) = qIOy.l[d_,s_,t];
    
      parameter qIOm_saved[d_,s_,t];
      qIOm_saved[d_,s_,t]$(1) = qIOm.l[d_,s_,t];
    
      parameter qCDK_saved[c,t];
      qCDK_saved[c,t]$(1) = qCDK.l[c,t];
    
      parameter qI_saved[i_,t];
      qI_saved[i_,t]$(1) = qI.l[i_,t];
    
      parameter juIOm_saved[s,t];
      juIOm_saved[s,t]$(1) = juIOm.l[s,t];
    
      parameter juIOXy_saved[s,t];
      juIOXy_saved[s,t]$(1) = juIOXy.l[s,t];
    
      parameter uIO_saved[d_,s,t];
      uIO_saved[d_,s,t]$(1) = uIO.l[d_,s,t];
    
      parameter uIOy_saved[dux,s,t];
      uIOy_saved[dux,s,t]$(1) = uIOy.l[dux,s,t];
    
      parameter uIOm_saved[dux,s,t];
      uIOm_saved[dux,s,t]$(1) = uIOm.l[dux,s,t];
    
      parameter uIOXy_saved[x,s,t];
      uIOXy_saved[x,s,t]$(1) = uIOXy.l[x,s,t];
    
      parameter uIOXm_saved[x,s,t];
      uIOXm_saved[x,s,t]$(1) = uIOXm.l[x,s,t];
    
      parameter fpI_s_saved[i,t];
      fpI_s_saved[i,t]$(1) = fpI_s.l[i,t];
    
      parameter uIO0_saved[dux,s_,t];
      uIO0_saved[dux,s_,t]$(1) = uIO0.l[dux,s_,t];
    
      parameter rpIOm2pIOy_saved[d_,s,t];
      rpIOm2pIOy_saved[d_,s,t]$(1) = rpIOm2pIOy.l[d_,s,t];
    
      parameter fqMKortsigt_saved[dux,s,t];
      fqMKortsigt_saved[dux,s,t]$(1) = fqMKortsigt.l[dux,s,t];
    
      parameter pBoligRigid_saved[a,t];
      pBoligRigid_saved[a,t]$(1) = pBoligRigid.l[a,t];
    
      parameter vtHh_saved[a_,t];
      vtHh_saved[a_,t]$(1) = vtHh.l[a_,t];
    
      parameter vDispInd_saved[t];
      vDispInd_saved[t]$(1) = vDispInd.l[t];
    
      parameter vHhInd_saved[a_,t];
      vHhInd_saved[a_,t]$(1) = vHhInd.l[a_,t];
    
      parameter vHhxAfk_saved[a_,t];
      vHhxAfk_saved[a_,t]$(1) = vHhxAfk.l[a_,t];
    
      parameter vHhFinAkt_saved[a_,t];
      vHhFinAkt_saved[a_,t]$(1) = vHhFinAkt.l[a_,t];
    
      parameter vHh_saved[portf_,a_,t];
      vHh_saved[portf_,a_,t]$(1) = vHh.l[portf_,a_,t];
    
      parameter vHhRenter_saved[portf_,t];
      vHhRenter_saved[portf_,t]$(1) = vHhRenter.l[portf_,t];
    
      parameter vHhOmv_saved[portf_,t];
      vHhOmv_saved[portf_,t]$(1) = vHhOmv.l[portf_,t];
    
      parameter vHhPensAfk_saved[portf_,a_,t];
      vHhPensAfk_saved[portf_,a_,t]$(1) = vHhPensAfk.l[portf_,a_,t];
    
      parameter vHhNFE_saved[t];
      vHhNFE_saved[t]$(1) = vHhNFE.l[t];
    
      parameter vPensIndb_saved[portf_,a_,t];
      vPensIndb_saved[portf_,a_,t]$(1) = vPensIndb.l[portf_,a_,t];
    
      parameter vPensUdb_saved[portf_,a_,t];
      vPensUdb_saved[portf_,a_,t]$(1) = vPensUdb.l[portf_,a_,t];
    
      parameter vPensArv_saved[portf_,a_,t];
      vPensArv_saved[portf_,a_,t]$(1) = vPensArv.l[portf_,a_,t];
    
      parameter vNetIndPensUdb_saved[t];
      vNetIndPensUdb_saved[t]$(1) = vNetIndPensUdb.l[t];
    
      parameter vNetKolPensUdb_saved[t];
      vNetKolPensUdb_saved[t]$(1) = vNetKolPensUdb.l[t];
    
      parameter vKolPensRenter_saved[t];
      vKolPensRenter_saved[t]$(1) = vKolPensRenter.l[t];
    
      parameter vLejeAfEjerBolig_saved[t];
      vLejeAfEjerBolig_saved[t]$(1) = vLejeAfEjerBolig.l[t];
    
      parameter vHhFraVirkKap_saved[t];
      vHhFraVirkKap_saved[t]$(1) = vHhFraVirkKap.l[t];
    
      parameter vHhFraVirkOev_saved[t];
      vHhFraVirkOev_saved[t]$(1) = vHhFraVirkOev.l[t];
    
      parameter vHhFraVirk_saved[t];
      vHhFraVirk_saved[t]$(1) = vHhFraVirk.l[t];
    
      parameter vHhTilUdl_saved[t];
      vHhTilUdl_saved[t]$(1) = vHhTilUdl.l[t];
    
      parameter mrHhxAfk_saved[t];
      mrHhxAfk_saved[t]$(1) = mrHhxAfk.l[t];
    
      parameter mrRealKredAfk_saved[t];
      mrRealKredAfk_saved[t]$(1) = mrRealKredAfk.l[t];
    
      parameter rRealKred2Bolig_saved[a_,t];
      rRealKred2Bolig_saved[a_,t]$(1) = rRealKred2Bolig.l[a_,t];
    
      parameter rPensIndb_saved[pens,a_,t];
      rPensIndb_saved[pens,a_,t]$(1) = rPensIndb.l[pens,a_,t];
    
      parameter rPensUdb_saved[pens,a_,t];
      rPensUdb_saved[pens,a_,t]$(1) = rPensUdb.l[pens,a_,t];
    
      parameter rBoligOmkRest_saved[t];
      rBoligOmkRest_saved[t]$(1) = rBoligOmkRest.l[t];
    
      parameter rHhAfk_saved[portf,t];
      rHhAfk_saved[portf,t]$(1) = rHhAfk.l[portf,t];
    
      parameter jvHhxAfk_saved[a_,t];
      jvHhxAfk_saved[a_,t]$(1) = jvHhxAfk.l[a_,t];
    
      parameter jvHhPensAfk_saved[portf_,a_,t];
      jvHhPensAfk_saved[portf_,a_,t]$(1) = jvHhPensAfk.l[portf_,a_,t];
    
      parameter jvHh_saved[t];
      jvHh_saved[t]$(1) = jvHh.l[t];
    
      parameter mtAktie_saved[t];
      mtAktie_saved[t]$(1) = mtAktie.l[t];
    
      parameter pKspBy_saved[t];
      pKspBy_saved[t]$(1) = pKspBy.l[t];
    
      parameter sqBVT_saved[t];
      sqBVT_saved[t]$(1) = sqBVT.l[t];
    
      parameter sdqLdnL_saved[s_,t];
      sdqLdnL_saved[s_,t]$(1) = sdqLdnL.l[s_,t];
    
      parameter sdOpslagOmk2dnLLag_saved[t];
      sdOpslagOmk2dnLLag_saved[t]$(1) = sdOpslagOmk2dnLLag.l[t];
    
      parameter sqL_saved[s_,t];
      sqL_saved[s_,t]$(1) = sqL.l[s_,t];
    
      parameter qKspBy_saved[t];
      qKspBy_saved[t]$(1) = qKspBy.l[t];
    
      parameter qLspBy_saved[t];
      qLspBy_saved[t]$(1) = qLspBy.l[t];
    
      parameter sqLspBy_saved[t];
      sqLspBy_saved[t]$(1) = sqLspBy.l[t];
    
      parameter uY_saved[t];
      uY_saved[t]$(1) = uY.l[t];
    
      parameter shL_saved[t];
      shL_saved[t]$(1) = shL.l[t];
    
      parameter srL2nL_saved[t];
      srL2nL_saved[t]$(1) = srL2nL.l[t];
    
      parameter sfW_saved[s_,t];
      sfW_saved[s_,t]$(1) = sfW.l[s_,t];
    
      parameter sdOpslagOmk2dnL_saved[t];
      sdOpslagOmk2dnL_saved[t]$(1) = sdOpslagOmk2dnL.l[t];
    
      parameter sfProdHh_saved[t];
      sfProdHh_saved[t]$(1) = sfProdHh.l[t];
    
      parameter snSoegBaseHh_saved[a_,t];
      snSoegBaseHh_saved[a_,t]$(1) = snSoegBaseHh.l[a_,t];
    
      parameter snLHh_saved[a_,t];
      snLHh_saved[a_,t]$(1) = snLHh.l[a_,t];
    
      parameter snSoegHh_saved[a_,t];
      snSoegHh_saved[a_,t]$(1) = snSoegHh.l[a_,t];
    
      parameter sfDeltag_saved[a,t];
      sfDeltag_saved[a,t]$(1) = sfDeltag.l[a,t];
    
      parameter srJobFinding_saved[t];
      srJobFinding_saved[t]$(1) = srJobFinding.l[t];
    
      parameter srMatch_saved[t];
      srMatch_saved[t]$(1) = srMatch.l[t];
    
      parameter srOpslag2soeg_saved[t];
      srOpslag2soeg_saved[t]$(1) = srOpslag2soeg.l[t];
    
      parameter shLHh_saved[a_,t];
      shLHh_saved[a_,t]$(1) = shLHh.l[a_,t];
    
      parameter srOpslagOmk_saved[t];
      srOpslagOmk_saved[t]$(1) = srOpslagOmk.l[t];
    
      parameter snOpslag_saved[t];
      snOpslag_saved[t]$(1) = snOpslag.l[t];
    
      parameter srSeparation_saved[t];
      srSeparation_saved[t]$(1) = srSeparation.l[t];
    
      parameter snLUdl_saved[t];
      snLUdl_saved[t]$(1) = snLUdl.l[t];
    
      parameter shLUdl_saved[t];
      shLUdl_saved[t]$(1) = shLUdl.l[t];
    
      parameter snL_saved[s_,t];
      snL_saved[s_,t]$(1) = snL.l[s_,t];
    
      parameter snSoegUdl_saved[t];
      snSoegUdl_saved[t]$(1) = snSoegUdl.l[t];
    
      parameter snSoc_saved[soc_,t];
      snSoc_saved[soc_,t]$(1) = snSoc.l[soc_,t];
    
      parameter dSoc2dPop_saved[soc_,t];
      dSoc2dPop_saved[soc_,t]$(1) = dSoc2dPop.l[soc_,t];
    
      parameter srLedig_saved[t];
      srLedig_saved[t]$(1) = srLedig.l[t];
    
      parameter pUdl_saved[t];
      pUdl_saved[t]$(1) = pUdl.l[t];
    
      parameter pOlie_saved[t];
      pOlie_saved[t]$(1) = pOlie.l[t];
    
      parameter pLxUdn_saved[sp,t];
      pLxUdn_saved[sp,t]$(1) = pLxUdn.l[sp,t];
    
      parameter uR_saved[sp,t];
      uR_saved[sp,t]$(1) = uR.l[sp,t];
    
      parameter uKLB_saved[sp,t];
      uKLB_saved[sp,t]$(1) = uKLB.l[sp,t];
    
      parameter uL_saved[sp,t];
      uL_saved[sp,t]$(1) = uL.l[sp,t];
    
      parameter uK_saved[k,sp,t];
      uK_saved[k,sp,t]$(1) = uK.l[k,sp,t];
    
      parameter uKL_saved[sp,t];
      uKL_saved[sp,t]$(1) = uKL.l[sp,t];
    
      parameter uh_saved[a,t];
      uh_saved[a,t]$(1) = uh.l[a,t];
    
      parameter vVirkIndRest_saved[t];
      vVirkIndRest_saved[t]$(1) = vVirkIndRest.l[t];
    
      parameter vOffAkt_saved[t];
      vOffAkt_saved[t]$(1) = vOffAkt.l[t];
    
      parameter vOffFonde_saved[t];
      vOffFonde_saved[t]$(1) = vOffFonde.l[t];
    
      parameter vtPALGab_saved[t];
      vtPALGab_saved[t]$(1) = vtPALGab.l[t];
    
      parameter vtSelskabNordGab_saved[t];
      vtSelskabNordGab_saved[t]$(1) = vtSelskabNordGab.l[t];
    
      parameter vtSelskabRestGab_saved[t];
      vtSelskabRestGab_saved[t]$(1) = vtSelskabRestGab.l[t];
    
      parameter vtRegGab_saved[t];
      vtRegGab_saved[t]$(1) = vtRegGab.l[t];
    
      parameter vOffNetRenterGab_saved[t];
      vOffNetRenterGab_saved[t]$(1) = vOffNetRenterGab.l[t];
    
      parameter vtRestGab_saved[t];
      vtRestGab_saved[t]$(1) = vtRestGab.l[t];
    
      parameter vEngangsForholdGab_saved[t];
      vEngangsForholdGab_saved[t]$(1) = vEngangsForholdGab.l[t];
    
      parameter jvOffPrimInd_saved[t];
      jvOffPrimInd_saved[t]$(1) = jvOffPrimInd.l[t];
    
      parameter vtKildeRest_saved[t];
      vtKildeRest_saved[t]$(1) = vtKildeRest.l[t];
    
      parameter vtDirekteRest_saved[t];
      vtDirekteRest_saved[t]$(1) = vtDirekteRest.l[t];
    
      parameter vOffFraUdl_saved[t];
      vOffFraUdl_saved[t]$(1) = vOffFraUdl.l[t];
    
      parameter vOffFraHh_saved[t];
      vOffFraHh_saved[t]$(1) = vOffFraHh.l[t];
    
      parameter vOffFraVirk_saved[t];
      vOffFraVirk_saved[t]$(1) = vOffFraVirk.l[t];
    
      parameter vOffVirk_saved[t];
      vOffVirk_saved[t]$(1) = vOffVirk.l[t];
    
      parameter vPersIndRest_a_saved[a_,t];
      vPersIndRest_a_saved[a_,t]$(1) = vPersIndRest_a.l[a_,t];
    
      parameter vPersIndRest_t_saved[t];
      vPersIndRest_t_saved[t]$(1) = vPersIndRest_t.l[t];
    
      parameter vHhOvfRest_saved[a,t];
      vHhOvfRest_saved[a,t]$(1) = vHhOvfRest.l[a,t];
    
      parameter vOffLandKoeb_saved[t];
      vOffLandKoeb_saved[t]$(1) = vOffLandKoeb.l[t];
    
      parameter vOffTilUdl_saved[t];
      vOffTilUdl_saved[t]$(1) = vOffTilUdl.l[t];
    
      parameter vOffTilVirk_saved[t];
      vOffTilVirk_saved[t]$(1) = vOffTilVirk.l[t];
    
      parameter vOffTilHhKap_saved[t];
      vOffTilHhKap_saved[t]$(1) = vOffTilHhKap.l[t];
    
      parameter vOffTilHhOev_saved[t];
      vOffTilHhOev_saved[t]$(1) = vOffTilHhOev.l[t];
    
      parameter vSubEU_saved[t];
      vSubEU_saved[t]$(1) = vSubEU.l[t];
    
      parameter vhWVirk_saved[t];
      vhWVirk_saved[t]$(1) = vhWVirk.l[t];
    
      parameter vOffLoen_saved[t];
      vOffLoen_saved[t]$(1) = vOffLoen.l[t];
    
      parameter vHhFormueR_saved[a_,t];
      vHhFormueR_saved[a_,t]$(1) = vHhFormueR.l[a_,t];
    
      parameter vHhFormueHtM_saved[a_,t];
      vHhFormueHtM_saved[a_,t]$(1) = vHhFormueHtM.l[a_,t];
    
      parameter vHhxR_saved[a_,t];
      vHhxR_saved[a_,t]$(1) = vHhxR.l[a_,t];
    
      parameter vHhPensR_saved[a_,t];
      vHhPensR_saved[a_,t]$(1) = vHhPensR.l[a_,t];
    
      parameter vHhPensHtM_saved[a_,t];
      vHhPensHtM_saved[a_,t]$(1) = vHhPensHtM.l[a_,t];
    
      parameter vHhPens_saved[a_,t];
      vHhPens_saved[a_,t]$(1) = vHhPens.l[a_,t];
    
      parameter vFrivaerdiR_saved[a_,t];
      vFrivaerdiR_saved[a_,t]$(1) = vFrivaerdiR.l[a_,t];
    
      parameter vFrivaerdiHtM_saved[a_,t];
      vFrivaerdiHtM_saved[a_,t]$(1) = vFrivaerdiHtM.l[a_,t];
    
      parameter vHhIndHtM_saved[a_,t];
      vHhIndHtM_saved[a_,t]$(1) = vHhIndHtM.l[a_,t];
    
      parameter vHhIndR_saved[a_,t];
      vHhIndR_saved[a_,t]$(1) = vHhIndR.l[a_,t];
    
      parameter vHhNetFinR_saved[a_,t];
      vHhNetFinR_saved[a_,t]$(1) = vHhNetFinR.l[a_,t];
    
      parameter vHhNetFinHtM_saved[a_,t];
      vHhNetFinHtM_saved[a_,t]$(1) = vHhNetFinHtM.l[a_,t];
    
      parameter vHhNetFin_saved[a_,t];
      vHhNetFin_saved[a_,t]$(1) = vHhNetFin.l[a_,t];
    
      parameter vHhIndMvHtM_saved[a_,t];
      vHhIndMvHtM_saved[a_,t]$(1) = vHhIndMvHtM.l[a_,t];
    
      parameter vHhIndMvR_saved[a_,t];
      vHhIndMvR_saved[a_,t]$(1) = vHhIndMvR.l[a_,t];
    
      parameter vHhIndMv_saved[a_,t];
      vHhIndMv_saved[a_,t]$(1) = vHhIndMv.l[a_,t];
    
      parameter vCR_NR_saved[a_,t];
      vCR_NR_saved[a_,t]$(1) = vCR_NR.l[a_,t];
    
      parameter vCHtM_NR_saved[a_,t];
      vCHtM_NR_saved[a_,t]$(1) = vCHtM_NR.l[a_,t];
    
      parameter vC_NR_saved[a_,t];
      vC_NR_saved[a_,t]$(1) = vC_NR.l[a_,t];
    
      parameter vHhFormue_saved[a_,t];
      vHhFormue_saved[a_,t]$(1) = vHhFormue.l[a_,t];
    
      parameter vBoligUdgiftR_saved[a_,t];
      vBoligUdgiftR_saved[a_,t]$(1) = vBoligUdgiftR.l[a_,t];
    
      parameter vBoligR_saved[a_,t];
      vBoligR_saved[a_,t]$(1) = vBoligR.l[a_,t];
    
      parameter qXMarked_saved[x,t];
      qXMarked_saved[x,t]$(1) = qXMarked.l[x,t];
    
      parameter qProd_saved[t];
      qProd_saved[t]$(1) = qProd.l[t];
    
      parameter qLand_saved[t];
      qLand_saved[t]$(1) = qLand.l[t];
    
      parameter qKLejeBolig_saved[t];
      qKLejeBolig_saved[t]$(1) = qKLejeBolig.l[t];
    
      parameter qGrus_saved[t];
      qGrus_saved[t]$(1) = qGrus.l[t];
    
      parameter qLxUdn_saved[s,t];
      qLxUdn_saved[s,t]$(1) = qLxUdn.l[s,t];
    
      parameter qCR_NR_saved[a_,t];
      qCR_NR_saved[a_,t]$(1) = qCR_NR.l[a_,t];
    
      parameter qCHtM_NR_saved[a_,t];
      qCHtM_NR_saved[a_,t]$(1) = qCHtM_NR.l[a_,t];
    
      parameter qC_NR_saved[a_,t];
      qC_NR_saved[a_,t]$(1) = qC_NR.l[a_,t];
    
      parameter hVirk_saved[t];
      hVirk_saved[t]$(1) = hVirk.l[t];
    
      parameter hOff_saved[t];
      hOff_saved[t]$(1) = hOff.l[t];
    
      parameter tPensKor_saved[t];
      tPensKor_saved[t]$(1) = tPensKor.l[t];
    
      parameter nSoegBase_saved[t];
      nSoegBase_saved[t]$(1) = nSoegBase.l[t];
    
      parameter rtTopRenter_saved[t];
      rtTopRenter_saved[t]$(1) = rtTopRenter.l[t];
    
      parameter mrNet2KapIndPos_saved[t];
      mrNet2KapIndPos_saved[t]$(1) = mrNet2KapIndPos.l[t];
    
      parameter rKolPens_saved[pens,t];
      rKolPens_saved[pens,t]$(1) = rKolPens.l[pens,t];
    
      parameter rHhFraVirkKap_saved[t];
      rHhFraVirkKap_saved[t]$(1) = rHhFraVirkKap.l[t];
    
      parameter rHhFraVirkOev_saved[t];
      rHhFraVirkOev_saved[t]$(1) = rHhFraVirkOev.l[t];
    
      parameter rHhTilUdl_saved[t];
      rHhTilUdl_saved[t]$(1) = rHhTilUdl.l[t];
    
      parameter cHh_a_saved[akt,a,t];
      cHh_a_saved[akt,a,t]$(1) = cHh_a.l[akt,a,t];
    
      parameter cHh_t_saved[akt,t];
      cHh_t_saved[akt,t]$(1) = cHh_t.l[akt,t];
    
      parameter dvHh2dvHhx_saved[portf_,t];
      dvHh2dvHhx_saved[portf_,t]$(1) = dvHh2dvHhx.l[portf_,t];
    
      parameter dvHh2dvBolig_saved[portf_,t];
      dvHh2dvBolig_saved[portf_,t]$(1) = dvHh2dvBolig.l[portf_,t];
    
      parameter dvHh2dvPensIndb_saved[portf_,t];
      dvHh2dvPensIndb_saved[portf_,t]$(1) = dvHh2dvPensIndb.l[portf_,t];
    
      parameter rBoligOmkRestRes_saved[t];
      rBoligOmkRestRes_saved[t]$(1) = rBoligOmkRestRes.l[t];
    
      parameter rRealKredTraeg_saved;
      rRealKredTraeg_saved$(1) = rRealKredTraeg.l;
    
      parameter rRealKred2Bolig_a_saved[a,t];
      rRealKred2Bolig_a_saved[a,t]$(1) = rRealKred2Bolig_a.l[a,t];
    
      parameter rRealKred2Bolig_t_saved[t];
      rRealKred2Bolig_t_saved[t]$(1) = rRealKred2Bolig_t.l[t];
    
      parameter cmtAktie_saved[t];
      cmtAktie_saved[t]$(1) = cmtAktie.l[t];
    
      parameter ErAktieAfk_static_saved[t];
      ErAktieAfk_static_saved[t]$(1) = ErAktieAfk_static.l[t];
    
      parameter rPensArv_saved[pens,a_,t];
      rPensArv_saved[pens,a_,t]$(1) = rPensArv.l[pens,a_,t];
    
      parameter jvHhOmv_saved[t];
      jvHhOmv_saved[t]$(1) = jvHhOmv.l[t];
    
      parameter jvHhRenter_saved[t];
      jvHhRenter_saved[t]$(1) = jvHhRenter.l[t];
    
      parameter jvNetKolPensUdb_saved[t];
      jvNetKolPensUdb_saved[t]$(1) = jvNetKolPensUdb.l[t];
    
      parameter jvKolPensRenter_saved[t];
      jvKolPensRenter_saved[t]$(1) = jvKolPensRenter.l[t];
    
      parameter jmrHhAfk_saved[t];
      jmrHhAfk_saved[t]$(1) = jmrHhAfk.l[t];
    
      parameter jrHhRente_saved[portf,t];
      jrHhRente_saved[portf,t]$(1) = jrHhRente.l[portf,t];
    
      parameter jrHhOmv_saved[portf,t];
      jrHhOmv_saved[portf,t]$(1) = jrHhOmv.l[portf,t];
    
      parameter rUdlRealkred_saved[t];
      rUdlRealkred_saved[t]$(1) = rUdlRealkred.l[t];
    
      parameter jvBFI_saved[t];
      jvBFI_saved[t]$(1) = jvBFI.l[t];
    
      parameter fDemoTraek_saved[t];
      fDemoTraek_saved[t]$(1) = fDemoTraek.l[t];
    
      parameter uHhOvfPop_saved[a,t];
      uHhOvfPop_saved[a,t]$(1) = uHhOvfPop.l[a,t];
    
      parameter uOvfUbeskat_saved[a,t];
      uOvfUbeskat_saved[a,t]$(1) = uOvfUbeskat.l[a,t];
    
      parameter jvOvf_saved[ovf,t];
      jvOvf_saved[ovf,t]$(1) = jvOvf.l[ovf,t];
    
      parameter uvOvfSats_saved[ovf,t];
      uvOvfSats_saved[ovf,t]$(1) = uvOvfSats.l[ovf,t];
    
      parameter eG_saved[g_];
      eG_saved[g_]$(1) = eG.l[g_];
    
      parameter rGLukning_saved[t];
      rGLukning_saved[t]$(1) = rGLukning.l[t];
    
      parameter uG_saved[g_,t];
      uG_saved[g_,t]$(1) = uG.l[g_,t];
    
      parameter rvYsubRest2BVT_saved[t];
      rvYsubRest2BVT_saved[t]$(1) = rvYsubRest2BVT.l[t];
    
      parameter tEjd_saved[t];
      tEjd_saved[t]$(1) = tEjd.l[t];
    
      parameter tPersRestxKapPens_saved[t];
      tPersRestxKapPens_saved[t]$(1) = tPersRestxKapPens.l[t];
    
      parameter tSelskabNord_saved[t];
      tSelskabNord_saved[t]$(1) = tSelskabNord.l[t];
    
      parameter tVirksomhed_saved[t];
      tVirksomhed_saved[t]$(1) = tVirksomhed.l[t];
    
      parameter tDoedsbo_saved[t];
      tDoedsbo_saved[t]$(1) = tDoedsbo.l[t];
    
      parameter tAktie_saved[t];
      tAktie_saved[t]$(1) = tAktie.l[t];
    
      parameter tJordRente_saved[t];
      tJordRente_saved[t]$(1) = tJordRente.l[t];
    
      parameter tHhVaegt_saved[t];
      tHhVaegt_saved[t]$(1) = tHhVaegt.l[t];
    
      parameter tbeskfradrag_saved[t];
      tbeskfradrag_saved[t]$(1) = tbeskfradrag.l[t];
    
      parameter ftAMBidrag_saved[t];
      ftAMBidrag_saved[t]$(1) = ftAMBidrag.l[t];
    
      parameter ftKapPens_saved[t];
      ftKapPens_saved[t]$(1) = ftKapPens.l[t];
    
      parameter ftSelskab_saved[t];
      ftSelskab_saved[t]$(1) = ftSelskab.l[t];
    
      parameter ftPAL_saved[t];
      ftPAL_saved[t]$(1) = ftPAL.l[t];
    
      parameter ftKirke_saved[t];
      ftKirke_saved[t]$(1) = ftKirke.l[t];
    
      parameter jfvSkatteplInd_saved[t];
      jfvSkatteplInd_saved[t]$(1) = jfvSkatteplInd.l[t];
    
      parameter rNet2KapIndPos_saved[a_,t];
      rNet2KapIndPos_saved[a_,t]$(1) = rNet2KapIndPos.l[a_,t];
    
      parameter rtKirke_saved[t];
      rtKirke_saved[t]$(1) = rtKirke.l[t];
    
      parameter vRestFradragSats_saved[t];
      vRestFradragSats_saved[t]$(1) = vRestFradragSats.l[t];
    
      parameter rAKFradrag2Bidrag_saved[t];
      rAKFradrag2Bidrag_saved[t]$(1) = rAKFradrag2Bidrag.l[t];
    
      parameter rELFradrag2Bidrag_saved[t];
      rELFradrag2Bidrag_saved[t]$(1) = rELFradrag2Bidrag.l[t];
    
      parameter uBidragOblTjm_saved[t];
      uBidragOblTjm_saved[t]$(1) = uBidragOblTjm.l[t];
    
      parameter uBidragATP_saved[t];
      uBidragATP_saved[t]$(1) = uBidragATP.l[t];
    
      parameter uBidragOblRest_saved[t];
      uBidragOblRest_saved[t]$(1) = uBidragOblRest.l[t];
    
      parameter uBidragEL_saved[t];
      uBidragEL_saved[t]$(1) = uBidragEL.l[t];
    
      parameter uBidragFri_saved[t];
      uBidragFri_saved[t]$(1) = uBidragFri.l[t];
    
      parameter uBidragAK_saved[t];
      uBidragAK_saved[t]$(1) = uBidragAK.l[t];
    
      parameter uBidragTjmp_saved[t];
      uBidragTjmp_saved[t]$(1) = uBidragTjmp.l[t];
    
      parameter utMedie_saved[t];
      utMedie_saved[t]$(1) = utMedie.l[t];
    
      parameter rRealiseringAktieOmv_saved[t];
      rRealiseringAktieOmv_saved[t]$(1) = rRealiseringAktieOmv.l[t];
    
      parameter rvtAfgEU2vtAfg_saved[t];
      rvtAfgEU2vtAfg_saved[t]$(1) = rvtAfgEU2vtAfg.l[t];
    
      parameter tBund_saved[t];
      tBund_saved[t]$(1) = tBund.l[t];
    
      parameter tTop_saved[t];
      tTop_saved[t]$(1) = tTop.l[t];
    
      parameter tKommune_saved[t];
      tKommune_saved[t]$(1) = tKommune.l[t];
    
      parameter tAMbidrag_saved[t];
      tAMbidrag_saved[t]$(1) = tAMbidrag.l[t];
    
      parameter tKapPens_saved[t];
      tKapPens_saved[t]$(1) = tKapPens.l[t];
    
      parameter tSelskab_saved[t];
      tSelskab_saved[t]$(1) = tSelskab.l[t];
    
      parameter tPAL_saved[t];
      tPAL_saved[t]$(1) = tPAL.l[t];
    
      parameter tKirke_saved[t];
      tKirke_saved[t]$(1) = tKirke.l[t];
    
      parameter rOffRealKred2Pas_saved[t];
      rOffRealKred2Pas_saved[t]$(1) = rOffRealKred2Pas.l[t];
    
      parameter rOffAkt_saved[akt,t];
      rOffAkt_saved[akt,t]$(1) = rOffAkt.l[akt,t];
    
      parameter jvOffOmv_saved[t];
      jvOffOmv_saved[t]$(1) = jvOffOmv.l[t];
    
      parameter jrOffRenteInd_saved[t];
      jrOffRenteInd_saved[t]$(1) = jrOffRenteInd.l[t];
    
      parameter jrOffRenteUd_saved[t];
      jrOffRenteUd_saved[t]$(1) = jrOffRenteUd.l[t];
    
      parameter jfSatsIndeks_saved[t];
      jfSatsIndeks_saved[t]$(1) = jfSatsIndeks.l[t];
    
      parameter rOffY2C_saved[t];
      rOffY2C_saved[t]$(1) = rOffY2C.l[t];
    
      parameter rDisk_t_saved[t];
      rDisk_t_saved[t]$(1) = rDisk_t.l[t];
    
      parameter rDisk_a_saved[a,t];
      rDisk_a_saved[a,t]$(1) = rDisk_a.l[a,t];
    
      parameter uBolig_a_saved[a,t];
      uBolig_a_saved[a,t]$(1) = uBolig_a.l[a,t];
    
      parameter uBolig_t_saved[t];
      uBolig_t_saved[t]$(1) = uBolig_t.l[t];
    
      parameter uBoligHtM_a_saved[a,t];
      uBoligHtM_a_saved[a,t]$(1) = uBoligHtM_a.l[a,t];
    
      parameter uBoligHtM_t_saved[t];
      uBoligHtM_t_saved[t]$(1) = uBoligHtM_t.l[t];
    
      parameter uBoligHtM_match_saved;
      uBoligHtM_match_saved$(1) = uBoligHtM_match.l;
    
      parameter uBoernFraHh_t_saved[t];
      uBoernFraHh_t_saved[t]$(1) = uBoernFraHh_t.l[t];
    
      parameter uBoernFraHh_a_saved[a,t];
      uBoernFraHh_a_saved[a,t]$(1) = uBoernFraHh_a.l[a,t];
    
      parameter eHh_saved;
      eHh_saved$(1) = eHh.l;
    
      parameter rRef_saved;
      rRef_saved$(1) = rRef.l;
    
      parameter rRef_2016_saved;
      rRef_2016_saved$(1) = rRef_2016.l;
    
      parameter rRefHtM_saved;
      rRefHtM_saved$(1) = rRefHtM.l;
    
      parameter rRefBolig_saved;
      rRefBolig_saved$(1) = rRefBolig.l;
    
      parameter rHtM_saved;
      rHtM_saved$(1) = rHtM.l;
    
      parameter eBolig_saved;
      eBolig_saved$(1) = eBolig.l;
    
      parameter uIBoligInstOmk_saved;
      uIBoligInstOmk_saved$(1) = uIBoligInstOmk.l;
    
      parameter fIBoligInstOmk_saved[t];
      fIBoligInstOmk_saved[t]$(1) = fIBoligInstOmk.l[t];
    
      parameter fBoligGevinst_saved;
      fBoligGevinst_saved$(1) = fBoligGevinst.l;
    
      parameter EpLandInfl_saved[t];
      EpLandInfl_saved[t]$(1) = EpLandInfl.l[t];
    
      parameter EpBoligInfl_saved[t];
      EpBoligInfl_saved[t]$(1) = EpBoligInfl.l[t];
    
      parameter eC_saved[c_];
      eC_saved[c_]$(1) = eC.l[c_];
    
      parameter uLand_saved[t];
      uLand_saved[t]$(1) = uLand.l[t];
    
      parameter uIBolig_saved[t];
      uIBolig_saved[t]$(1) = uIBolig.l[t];
    
      parameter rArv_saved[a,t];
      rArv_saved[a,t]$(1) = rArv.l[a,t];
    
      parameter rArv_a_saved[a,aa];
      rArv_a_saved[a,aa]$(1) = rArv_a.l[a,aa];
    
      parameter uFormue_saved[a,t];
      uFormue_saved[a,t]$(1) = uFormue.l[a,t];
    
      parameter cFormue_saved[a,t];
      cFormue_saved[a,t]$(1) = cFormue.l[a,t];
    
      parameter rMaxRealkred_saved[t];
      rMaxRealkred_saved[t]$(1) = rMaxRealkred.l[t];
    
      parameter uArv_saved[a,t];
      uArv_saved[a,t]$(1) = uArv.l[a,t];
    
      parameter cArv_saved[a,t];
      cArv_saved[a,t]$(1) = cArv.l[a,t];
    
      parameter tArv_saved[t];
      tArv_saved[t]$(1) = tArv.l[t];
    
      parameter rSelvstKapInd_saved[t];
      rSelvstKapInd_saved[t]$(1) = rSelvstKapInd.l[t];
    
      parameter eNytte_saved;
      eNytte_saved$(1) = eNytte.l;
    
      parameter rArvKorrektion_saved[a];
      rArvKorrektion_saved[a]$(1) = rArvKorrektion.l[a];
    
      parameter uC0_saved[c_,t];
      uC0_saved[c_,t]$(1) = uC0.l[c_,t];
    
      parameter fuCnest_saved[cNest,t];
      fuCnest_saved[cNest,t]$(1) = fuCnest.l[cNest,t];
    
      parameter rBilAfskr_saved[t];
      rBilAfskr_saved[t]$(1) = rBilAfskr.l[t];
    
      parameter rHhInvestx_saved[t];
      rHhInvestx_saved[t]$(1) = rHhInvestx.l[t];
    
      parameter nArvinger_saved[a,t];
      nArvinger_saved[a,t]$(1) = nArvinger.l[a,t];
    
      parameter rBoern_saved[a,t];
      rBoern_saved[a,t]$(1) = rBoern.l[a,t];
    
      parameter rOverlev_saved[a_,t];
      rOverlev_saved[a_,t]$(1) = rOverlev.l[a_,t];
    
      parameter ErOverlev_saved[a,t];
      ErOverlev_saved[a,t]$(1) = ErOverlev.l[a,t];
    
      parameter rBoligPrem_saved[t];
      rBoligPrem_saved[t]$(1) = rBoligPrem.l[t];
    
      parameter jfEpC_saved[t];
      jfEpC_saved[t]$(1) = jfEpC.l[t];
    
      parameter srLUdn_saved[s_,t];
      srLUdn_saved[s_,t]$(1) = srLUdn.l[s_,t];
    
      parameter jshLHh_saved[a,t];
      jshLHh_saved[a,t]$(1) = jshLHh.l[a,t];
    
      parameter jsfDeltag_saved[a,t];
      jsfDeltag_saved[a,t]$(1) = jsfDeltag.l[a,t];
    
      parameter juY_saved[t];
      juY_saved[t]$(1) = juY.l[t];
    
      parameter dSoc2dBesk_saved[soc_,t];
      dSoc2dBesk_saved[soc_,t]$(1) = dSoc2dBesk.l[soc_,t];
    
      parameter fProdHh_a_saved[a,t];
      fProdHh_a_saved[a,t]$(1) = fProdHh_a.l[a,t];
    
      parameter fProdHh_t_saved[t];
      fProdHh_t_saved[t]$(1) = fProdHh_t.l[t];
    
      parameter fDiskpL_saved[sp,t];
      fDiskpL_saved[sp,t]$(1) = fDiskpL.l[sp,t];
    
      parameter fDiskDeltag_saved[a,t];
      fDiskDeltag_saved[a,t]$(1) = fDiskDeltag.l[a,t];
    
      parameter mrKomp_saved[a_,t];
      mrKomp_saved[a_,t]$(1) = mrKomp.l[a_,t];
    
      parameter eDeltag_saved;
      eDeltag_saved$(1) = eDeltag.l;
    
      parameter emrKomp_saved;
      emrKomp_saved$(1) = emrKomp.l;
    
      parameter eMatching_saved;
      eMatching_saved$(1) = eMatching.l;
    
      parameter nSoegBaseUdl_saved[t];
      nSoegBaseUdl_saved[t]$(1) = nSoegBaseUdl.l[t];
    
      parameter uDeltag_saved[a,t];
      uDeltag_saved[a,t]$(1) = uDeltag.l[a,t];
    
      parameter eh_saved;
      eh_saved$(1) = eh.l;
    
      parameter fhLUdl_saved[t];
      fhLUdl_saved[t]$(1) = fhLUdl.l[t];
    
      parameter fProdUdl_saved[t];
      fProdUdl_saved[t]$(1) = fProdUdl.l[t];
    
      parameter fW0_saved[s_,t];
      fW0_saved[s_,t]$(1) = fW0.l[s_,t];
    
      parameter uOpslagOmk_saved;
      uOpslagOmk_saved$(1) = uOpslagOmk.l;
    
      parameter uMatchOmk_saved;
      uMatchOmk_saved$(1) = uMatchOmk.l;
    
      parameter uMatchOmkSqr_saved;
      uMatchOmkSqr_saved$(1) = uMatchOmkSqr.l;
    
      parameter rLoenTraeghed_saved;
      rLoenTraeghed_saved$(1) = rLoenTraeghed.l;
    
      parameter rLoenIndeksering_saved;
      rLoenIndeksering_saved$(1) = rLoenIndeksering.l;
    
      parameter cmtInd_saved[a,t];
      cmtInd_saved[a,t]$(1) = cmtInd.l[a,t];
    
      parameter rfZhTraeghed_saved;
      rfZhTraeghed_saved$(1) = rfZhTraeghed.l;
    
      parameter rAMDisk_saved[t];
      rAMDisk_saved[t]$(1) = rAMDisk.l[t];
    
      parameter rFFLoenAlternativ_saved;
      rFFLoenAlternativ_saved$(1) = rFFLoenAlternativ.l;
    
      parameter cMatchOmkSqr_saved[s_,t];
      cMatchOmkSqr_saved[s_,t]$(1) = cMatchOmkSqr.l[s_,t];
    
      parameter jvhW_saved[t];
      jvhW_saved[t]$(1) = jvhW.l[t];
    
      parameter rLoenNash_saved[t];
      rLoenNash_saved[t]$(1) = rLoenNash.l[t];
    
      parameter rSelvst_saved[s_,t];
      rSelvst_saved[s_,t]$(1) = rSelvst.l[s_,t];
    
      parameter jnSoc_saved[soc_,t];
      jnSoc_saved[soc_,t]$(1) = jnSoc.l[soc_,t];
    
      parameter upYTraeghed_saved[sp];
      upYTraeghed_saved[sp]$(1) = upYTraeghed.l[sp];
    
      parameter eY_saved[sp,t];
      eY_saved[sp,t]$(1) = eY.l[sp,t];
    
      parameter epM2pOlie_saved[s];
      epM2pOlie_saved[s]$(1) = epM2pOlie.l[s];
    
      parameter epXUdl2pOlie_saved[x];
      epXUdl2pOlie_saved[x]$(1) = epXUdl2pOlie.l[x];
    
      parameter upXSoe_saved[t];
      upXSoe_saved[t]$(1) = upXSoe.l[t];
    
      parameter upXUdl_saved[x,t];
      upXUdl_saved[x,t]$(1) = upXUdl.l[x,t];
    
      parameter upM_saved[s,t];
      upM_saved[s,t]$(1) = upM.l[s,t];
    
      parameter upYUdv_saved[t];
      upYUdv_saved[t]$(1) = upYUdv.l[t];
    
      parameter jpY_bol_saved[t];
      jpY_bol_saved[t]$(1) = jpY_bol.l[t];
    
      parameter rSkatAfskr_saved[k,t];
      rSkatAfskr_saved[k,t]$(1) = rSkatAfskr.l[k,t];
    
      parameter rAktieRes2BVT_saved[t];
      rAktieRes2BVT_saved[t]$(1) = rAktieRes2BVT.l[t];
    
      parameter rvOblLaan2K_saved[t];
      rvOblLaan2K_saved[t]$(1) = rvOblLaan2K.l[t];
    
      parameter rvVirkx_saved[akt,t];
      rvVirkx_saved[akt,t]$(1) = rvVirkx.l[akt,t];
    
      parameter rPensAkt_saved[akt,t];
      rPensAkt_saved[akt,t]$(1) = rPensAkt.l[akt,t];
    
      parameter rFinAccel_saved[sp];
      rFinAccel_saved[sp]$(1) = rFinAccel.l[sp];
    
      parameter cFinAccel_saved[sp,t];
      cFinAccel_saved[sp,t]$(1) = cFinAccel.l[sp,t];
    
      parameter uFinAccel_saved[sp,t];
      uFinAccel_saved[sp,t]$(1) = uFinAccel.l[sp,t];
    
      parameter rFinAccelTraeghed_saved;
      rFinAccelTraeghed_saved$(1) = rFinAccelTraeghed.l;
    
      parameter rvRealKred2K_saved[t];
      rvRealKred2K_saved[t]$(1) = rvRealKred2K.l[t];
    
      parameter crRenteBank_saved[t];
      crRenteBank_saved[t]$(1) = crRenteBank.l[t];
    
      parameter rUdlAktiePrem_saved[t];
      rUdlAktiePrem_saved[t]$(1) = rUdlAktiePrem.l[t];
    
      parameter rVirkDiskPrem_saved[sp,t];
      rVirkDiskPrem_saved[sp,t]$(1) = rVirkDiskPrem.l[sp,t];
    
      parameter jvVirkRenter_saved[t];
      jvVirkRenter_saved[t]$(1) = jvVirkRenter.l[t];
    
      parameter jvVirkOmv_saved[t];
      jvVirkOmv_saved[t]$(1) = jvVirkOmv.l[t];
    
      parameter jrRente_pension_saved[t];
      jrRente_pension_saved[t]$(1) = jrRente_pension.l[t];
    
      parameter jrOmv_pension_saved[t];
      jrOmv_pension_saved[t]$(1) = jrOmv_pension.l[t];
    
      parameter jrOmv_UdlAktier_saved[t];
      jrOmv_UdlAktier_saved[t]$(1) = jrOmv_UdlAktier.l[t];
    
      parameter jvVirkx_saved[t];
      jvVirkx_saved[t]$(1) = jvVirkx.l[t];
    
      parameter uKInstOmk_saved[k,sp];
      uKInstOmk_saved[k,sp]$(1) = uKInstOmk.l[k,sp];
    
      parameter fKInstOmk_saved[k,sp,t];
      fKInstOmk_saved[k,sp,t]$(1) = fKInstOmk.l[k,sp,t];
    
      parameter eKUdn_saved[k];
      eKUdn_saved[k]$(1) = eKUdn.l[k];
    
      parameter eKUdnPersistens_saved[k];
      eKUdnPersistens_saved[k]$(1) = eKUdnPersistens.l[k];
    
      parameter eLUdn_saved;
      eLUdn_saved$(1) = eLUdn.l;
    
      parameter eLUdnPersistens_saved;
      eLUdnPersistens_saved$(1) = eLUdnPersistens.l;
    
      parameter eKLBR_saved[sp];
      eKLBR_saved[sp]$(1) = eKLBR.l[sp];
    
      parameter eKLB_saved[sp];
      eKLB_saved[sp]$(1) = eKLB.l[sp];
    
      parameter eKL_saved[sp];
      eKL_saved[sp]$(1) = eKL.l[sp];
    
      parameter rAfskr_static_saved[k,sp,t];
      rAfskr_static_saved[k,sp,t]$(1) = rAfskr_static.l[k,sp,t];
    
      parameter gpI_s_static_saved[k,sp,t];
      gpI_s_static_saved[k,sp,t]$(1) = gpI_s_static.l[k,sp,t];
    
      parameter rAfskr_saved[k,s_,t];
      rAfskr_saved[k,s_,t]$(1) = rAfskr.l[k,s_,t];
    
      parameter rIL2y_saved[s_,t];
      rIL2y_saved[s_,t]$(1) = rIL2y.l[s_,t];
    
      parameter fProd_saved[s_,t];
      fProd_saved[s_,t]$(1) = fProd.l[s_,t];
    
      parameter jrLUdn_saved[sp,t];
      jrLUdn_saved[sp,t]$(1) = jrLUdn.l[sp,t];
    
      parameter jrKUdn_saved[k,sp,t];
      jrKUdn_saved[k,sp,t]$(1) = jrKUdn.l[k,sp,t];
    
      parameter jfqI_s_iL_saved[t];
      jfqI_s_iL_saved[t]$(1) = jfqI_s_iL.l[t];
    
      parameter jpK_saved[k,sp,t];
      jpK_saved[k,sp,t]$(1) = jpK.l[k,sp,t];
    
      parameter rOffIB2NyInv_saved[t];
      rOffIB2NyInv_saved[t]$(1) = rOffIB2NyInv.l[t];
    
      parameter rOffLTraeghed_saved;
      rOffLTraeghed_saved$(1) = rOffLTraeghed.l;
    
      parameter rvOffIndirInv2vBVT_saved[t];
      rvOffIndirInv2vBVT_saved[t]$(1) = rvOffIndirInv2vBVT.l[t];
    
      parameter jrpOffAfskr_saved[k,t];
      jrpOffAfskr_saved[k,t]$(1) = jrpOffAfskr.l[k,t];
    
      parameter jrqOffAfskr_saved[k,t];
      jrqOffAfskr_saved[k,t]$(1) = jrqOffAfskr.l[k,t];
    
      parameter jrpOffNyInv_saved[t];
      jrpOffNyInv_saved[t]$(1) = jrpOffNyInv.l[t];
    
      parameter uXTur_saved[t];
      uXTur_saved[t]$(1) = uXTur.l[t];
    
      parameter uXm_saved[x,t];
      uXm_saved[x,t]$(1) = uXm.l[x,t];
    
      parameter fuCturisme_saved[t];
      fuCturisme_saved[t]$(1) = fuCturisme.l[t];
    
      parameter uCturisme0_saved[c,t];
      uCturisme0_saved[c,t]$(1) = uCturisme0.l[c,t];
    
      parameter rXTraeghed_saved;
      rXTraeghed_saved$(1) = rXTraeghed.l;
    
      parameter upXyTraeghed_saved;
      upXyTraeghed_saved$(1) = upXyTraeghed.l;
    
      parameter rXSkalaTraeghed_saved;
      rXSkalaTraeghed_saved$(1) = rXSkalaTraeghed.l;
    
      parameter eXUdl_saved[x];
      eXUdl_saved[x]$(1) = eXUdl.l[x];
    
      parameter cpXyTraeghed_saved[x,t];
      cpXyTraeghed_saved[x,t]$(1) = cpXyTraeghed.l[x,t];
    
      parameter tYsub_y0_saved[d_,s,t];
      tYsub_y0_saved[d_,s,t]$(1) = tYsub_y0.l[d_,s,t];
    
      parameter tYsub_m0_saved[d_,s,t];
      tYsub_m0_saved[d_,s,t]$(1) = tYsub_m0.l[d_,s,t];
    
      parameter tTold_saved[d_,s,t];
      tTold_saved[d_,s,t]$(1) = tTold.l[d_,s,t];
    
      parameter tMoms_y_saved[d_,s,t];
      tMoms_y_saved[d_,s,t]$(1) = tMoms_y.l[d_,s,t];
    
      parameter tMoms_m_saved[d_,s,t];
      tMoms_m_saved[d_,s,t]$(1) = tMoms_m.l[d_,s,t];
    
      parameter tK_saved[k,s_,t];
      tK_saved[k,s_,t]$(1) = tK.l[k,s_,t];
    
      parameter tLoensum_saved[s,t];
      tLoensum_saved[s,t]$(1) = tLoensum.l[s,t];
    
      parameter tVirkAM_saved[s,t];
      tVirkAM_saved[s,t]$(1) = tVirkAM.l[s,t];
    
      parameter tLoenSub_saved[s,t];
      tLoenSub_saved[s,t]$(1) = tLoenSub.l[s,t];
    
      parameter tYsub0_saved[t];
      tYsub0_saved[t]$(1) = tYsub0.l[t];
    
      parameter tReg_saved[d_,t];
      tReg_saved[d_,t]$(1) = tReg.l[d_,t];
    
      parameter tNetYRest_saved[s,t];
      tNetYRest_saved[s,t]$(1) = tNetYRest.l[s,t];
    
      parameter tAfg_y_saved[d_,s,t];
      tAfg_y_saved[d_,s,t]$(1) = tAfg_y.l[d_,s,t];
    
      parameter tAfg_m_saved[d_,s,t];
      tAfg_m_saved[d_,s,t]$(1) = tAfg_m.l[d_,s,t];
    
      parameter tYsub_y_saved[d_,s,t];
      tYsub_y_saved[d_,s,t]$(1) = tYsub_y.l[d_,s,t];
    
      parameter tYsub_m_saved[d_,s,t];
      tYsub_m_saved[d_,s,t]$(1) = tYsub_m.l[d_,s,t];
    
      parameter eIO_saved[d_,s];
      eIO_saved[d_,s]$(1) = eIO.l[d_,s];
    
      parameter rMerPris_saved[d_,t];
      rMerPris_saved[d_,t]$(1) = rMerPris.l[d_,t];
    
      parameter rvIO2vOffNyInv_saved[i,t];
      rvIO2vOffNyInv_saved[i,t]$(1) = rvIO2vOffNyInv.l[i,t];
    
      parameter rvIO2vPublicSales_saved[c,t];
      rvIO2vPublicSales_saved[c,t]$(1) = rvIO2vPublicSales.l[c,t];
    
      parameter rpMTraeghed_saved[d_,s];
      rpMTraeghed_saved[d_,s]$(1) = rpMTraeghed.l[d_,s];
    
      parameter rMKortsigt_saved[d_,s];
      rMKortsigt_saved[d_,s]$(1) = rMKortsigt.l[d_,s];
    
      parameter uIOm0_saved[dux,s,t];
      uIOm0_saved[dux,s,t]$(1) = uIOm0.l[dux,s,t];
    
      parameter uIOXy0_saved[x,s,t];
      uIOXy0_saved[x,s,t]$(1) = uIOXy0.l[x,s,t];
    
      parameter uIOXm0_saved[x,s,t];
      uIOXm0_saved[x,s,t]$(1) = uIOXm0.l[x,s,t];
    
      parameter fuIO_saved[dux,t];
      fuIO_saved[dux,t]$(1) = fuIO.l[dux,t];
    
      parameter fuIOym_saved[dux,s,t];
      fuIOym_saved[dux,s,t]$(1) = fuIOym.l[dux,s,t];
    
      parameter fuXm_saved[x,t];
      fuXm_saved[x,t]$(1) = fuXm.l[x,t];
    
      parameter fuXy_saved[x,t];
      fuXy_saved[x,t]$(1) = fuXy.l[x,t];
    
      parameter upI_s_saved[i,s,t];
      upI_s_saved[i,s,t]$(1) = upI_s.l[i,s,t];
    
      parameter fpCTurist_saved[c,t];
      fpCTurist_saved[c,t]$(1) = fpCTurist.l[c,t];
$onlisting



# ----------------------------------------------------------------------------------------------------$FIX All;
# ----------------------------------------------------------------------------------------------------
$offlisting
qX.FX[x_,t] = qX.L[x_,t];
qXy.FX[x,t] = qXy.L[x,t];
qXm.FX[x,t] = qXm.L[x,t];
qCTurist.FX[c,t] = qCTurist.L[c,t];
qXSkala.FX[x,t] = qXSkala.L[x,t];
qXTraek.FX[x,t] = qXTraek.L[x,t];
empty_group_dummy.FX[t] = empty_group_dummy.L[t];
rpXUdl2pXy.FX[x,t] = rpXUdl2pXy.L[x,t];
rpXy2pXUdl.FX[x,t] = rpXy2pXUdl.L[x,t];
uXy.FX[x,t] = uXy.L[x,t];
uCturisme.FX[c,t] = uCturisme.L[c,t];
rpM2pXm.FX[x,t] = rpM2pXm.L[x,t];
dqLdnL.FX[s_,t] = dqLdnL.L[s_,t];
dqLLeaddnL.FX[sp,t] = dqLLeaddnL.L[sp,t];
vWHh.FX[a_,t] = vWHh.L[a_,t];
vhW.FX[t] = vhW.L[t];
vhWNy.FX[t] = vhWNy.L[t];
vWUdl.FX[t] = vWUdl.L[t];
vhWForhandlet.FX[t] = vhWForhandlet.L[t];
vVirkLoenPos.FX[t] = vVirkLoenPos.L[t];
vVirkLoenPos0.FX[t] = vVirkLoenPos0.L[t];
vVirkLoenNeg.FX[t] = vVirkLoenNeg.L[t];
vVirkLoenNeg0.FX[t] = vVirkLoenNeg0.L[t];
vFFLoenPos.FX[t] = vFFLoenPos.L[t];
vFFLoenPos0.FX[t] = vFFLoenPos0.L[t];
vFFLoenNeg.FX[t] = vFFLoenNeg.L[t];
vFFLoenNeg0.FX[t] = vFFLoenNeg0.L[t];
vW.FX[s_,t] = vW.L[s_,t];
vSelvstLoen.FX[s_,t] = vSelvstLoen.L[s_,t];
vLoensum.FX[s_,t] = vLoensum.L[s_,t];
pL.FX[sp,t] = pL.L[sp,t];
rL2nL.FX[t] = rL2nL.L[t];
dOpslagOmk2dnL.FX[sp,t] = dOpslagOmk2dnL.L[sp,t];
dOpslagOmk2dnLLag.FX[sp,t] = dOpslagOmk2dnLLag.L[sp,t];
nSoegBaseHh.FX[a_,t] = nSoegBaseHh.L[a_,t];
nLHh.FX[a_,t] = nLHh.L[a_,t];
nSoegHh.FX[a_,t] = nSoegHh.L[a_,t];
fDeltag.FX[a,t] = fDeltag.L[a,t];
nLUdl.FX[t] = nLUdl.L[t];
nSoegUdl.FX[t] = nSoegUdl.L[t];
hLHh.FX[a_,t] = hLHh.L[a_,t];
hL.FX[t] = hL.L[t];
hLUdl.FX[t] = hLUdl.L[t];
rJobFinding.FX[t] = rJobFinding.L[t];
rMatch.FX[t] = rMatch.L[t];
rOpslag2soeg.FX[t] = rOpslag2soeg.L[t];
nOpslag.FX[s_,t] = nOpslag.L[s_,t];
rOpslagOmk.FX[s_,t] = rOpslagOmk.L[s_,t];
rSeparation.FX[a_,t] = rSeparation.L[a_,t];
fZh.FX[a,t] = fZh.L[a,t];
cZh.FX[a,t] = cZh.L[a,t];
nL.FX[s_,t] = nL.L[s_,t];
nPop.FX[a_,t] = nPop.L[a_,t];
nSoc.FX[soc_,t] = nSoc.L[soc_,t];
rLedig.FX[t] = rLedig.L[t];
rLedigGab.FX[t] = rLedigGab.L[t];
fProdHh.FX[a_,t] = fProdHh.L[a_,t];
fW.FX[s_,t] = fW.L[s_,t];
mtInd.FX[a_,t] = mtInd.L[a_,t];
pY.FX[s_,t] = pY.L[s_,t];
pXUdl.FX[x_,t] = pXUdl.L[x_,t];
pM.FX[s_,t] = pM.L[s_,t];
jrMarkup.FX[s_,t] = jrMarkup.L[s_,t];
rMarkup.FX[s_,t] = rMarkup.L[s_,t];
srMarkup.FX[s_,t] = srMarkup.L[s_,t];
rLUdn.FX[s_,t] = rLUdn.L[s_,t];
rKUdn.FX[k,s_,t] = rKUdn.L[k,s_,t];
rKUdnSpBy.FX[t] = rKUdnSpBy.L[t];
ErSkatAfskr.FX[k,sp,t] = ErSkatAfskr.L[k,sp,t];
qL.FX[s_,t] = qL.L[s_,t];
dKInstOmk2dK.FX[k,sp,t] = dKInstOmk2dK.L[k,sp,t];
dKInstOmk2dI.FX[k,sp,t] = dKInstOmk2dI.L[k,sp,t];
dKInstOmkLead2dI.FX[k,sp,t] = dKInstOmkLead2dI.L[k,sp,t];
pKL.FX[sp,t] = pKL.L[sp,t];
pKLB.FX[sp,t] = pKLB.L[sp,t];
pKLBR.FX[s_,t] = pKLBR.L[s_,t];
pK.FX[k,sp,t] = pK.L[k,sp,t];
pTobinsQ.FX[k,sp,t] = pTobinsQ.L[k,sp,t];
qKInstOmk.FX[i_,sp,t] = qKInstOmk.L[i_,sp,t];
qKLBR.FX[sp,t] = qKLBR.L[sp,t];
qKLB.FX[sp,t] = qKLB.L[sp,t];
qKL.FX[sp,t] = qKL.L[sp,t];
qR.FX[r_,t] = qR.L[r_,t];
qK.FX[k,s_,t] = qK.L[k,s_,t];
qI_s.FX[i_,s_,t] = qI_s.L[i_,s_,t];
qY.FX[s_,t] = qY.L[s_,t];
pOffAfskr.FX[i_,t] = pOffAfskr.L[i_,t];
pOffNyInv.FX[t] = pOffNyInv.L[t];
qOffAfskr.FX[i_,t] = qOffAfskr.L[i_,t];
qOffNyInv.FX[t] = qOffNyInv.L[t];
vOffAfskr.FX[i_,t] = vOffAfskr.L[i_,t];
vOffLR.FX[t] = vOffLR.L[t];
vI_s.FX[i_,s_,t] = vI_s.L[i_,s_,t];
vOffDirInv.FX[t] = vOffDirInv.L[t];
vOffIndirInv.FX[t] = vOffIndirInv.L[t];
vOffNyInv.FX[t] = vOffNyInv.L[t];
srvOffL2LR.FX[t] = srvOffL2LR.L[t];
rOffK2Y.FX[k,t] = rOffK2Y.L[k,t];
rvOffDirInv2BNP.FX[t] = rvOffDirInv2BNP.L[t];
vAktie.FX[t] = vAktie.L[t];
vAktiex.FX[s_,t] = vAktiex.L[s_,t];
vAktieRes.FX[t] = vAktieRes.L[t];
vEBT.FX[s_,t] = vEBT.L[s_,t];
vEBTx.FX[s_,t] = vEBTx.L[s_,t];
vEBITDA.FX[s_,t] = vEBITDA.L[s_,t];
vFCF.FX[s_,t] = vFCF.L[s_,t];
vVirkRenter.FX[t] = vVirkRenter.L[t];
vVirkOmv.FX[t] = vVirkOmv.L[t];
vVirkNFE.FX[t] = vVirkNFE.L[t];
vKskat.FX[i_,s_,t] = vKskat.L[i_,s_,t];
vAfskrFradrag.FX[s_,t] = vAfskrFradrag.L[s_,t];
vDividender.FX[t] = vDividender.L[t];
vUdstedelser.FX[t] = vUdstedelser.L[t];
vVirkK.FX[s_,t] = vVirkK.L[s_,t];
vVirk.FX[portf_,t] = vVirk.L[portf_,t];
vVirkLaan.FX[s_,t] = vVirkLaan.L[s_,t];
vVirkx.FX[t] = vVirkx.L[t];
vPension.FX[akt,t] = vPension.L[akt,t];
vtSelskabx.FX[s_,t] = vtSelskabx.L[s_,t];
vVirkFinInd.FX[t] = vVirkFinInd.L[t];
rVirkDisk.FX[sp,t] = rVirkDisk.L[sp,t];
rAfkastKrav.FX[s_,t] = rAfkastKrav.L[s_,t];
rVirkxAfk.FX[t] = rVirkxAfk.L[t];
rRente.FX[portf,t] = rRente.L[portf,t];
rOmv.FX[portf,t] = rOmv.L[portf,t];
rLaan2K.FX[t] = rLaan2K.L[t];
rIndlAktiePrem.FX[s_,t] = rIndlAktiePrem.L[s_,t];
rFinAccelPrem.FX[sp,t] = rFinAccelPrem.L[sp,t];
vFCFxRef.FX[sp,t] = vFCFxRef.L[sp,t];
EpC.FX[t] = EpC.L[t];
pBolig.FX[t] = pBolig.L[t];
pLand.FX[t] = pLand.L[t];
pC.FX[c_,t] = pC.L[c_,t];
EpBolig.FX[t] = EpBolig.L[t];
EpLand.FX[t] = EpLand.L[t];
pBoligUC.FX[a,t] = pBoligUC.L[a,t];
qC.FX[c_,t] = qC.L[c_,t];
qC_a.FX[a,t] = qC_a.L[a,t];
qCR.FX[a_,t] = qCR.L[a_,t];
qCHtM.FX[a_,t] = qCHtM.L[a_,t];
qCRxRef.FX[a,t] = qCRxRef.L[a,t];
qCHtMxRef.FX[a_,t] = qCHtMxRef.L[a_,t];
qBiler.FX[t] = qBiler.L[t];
qBoligHtM.FX[a_,t] = qBoligHtM.L[a_,t];
qBoligHtMxRef.FX[a_,t] = qBoligHtMxRef.L[a_,t];
qBoligR.FX[a_,t] = qBoligR.L[a_,t];
qBolig.FX[a_,t] = qBolig.L[a_,t];
qBoligRxRef.FX[a_,t] = qBoligRxRef.L[a_,t];
qYBolig.FX[t] = qYBolig.L[t];
qIBoligInstOmk.FX[t] = qIBoligInstOmk.L[t];
qLandSalg.FX[t] = qLandSalg.L[t];
qKBolig.FX[t] = qKBolig.L[t];
qIBolig.FX[t] = qIBolig.L[t];
qNytte.FX[a,t] = qNytte.L[a,t];
qArvBase.FX[a,t] = qArvBase.L[a,t];
qFormueBase.FX[a,t] = qFormueBase.L[a,t];
vC_a.FX[a,t] = vC_a.L[a,t];
vHhx.FX[a_,t] = vHhx.L[a_,t];
vCLejeBolig.FX[a_,t] = vCLejeBolig.L[a_,t];
vArvGivet.FX[a,t] = vArvGivet.L[a,t];
vArv.FX[a_,t] = vArv.L[a_,t];
vtArv.FX[a_,t] = vtArv.L[a_,t];
vtHhx.FX[a_,t] = vtHhx.L[a_,t];
vBoligUdgift.FX[a_,t] = vBoligUdgift.L[a_,t];
vBoligUdgiftHtM.FX[a_,t] = vBoligUdgiftHtM.L[a_,t];
vBoligUdgiftArv.FX[t] = vBoligUdgiftArv.L[t];
vHhNFErest.FX[a_,t] = vHhNFErest.L[a_,t];
jvHhNFErest.FX[a_,t] = jvHhNFErest.L[a_,t];
vBoernFraHh.FX[a,t] = vBoernFraHh.L[a,t];
vHhTilBoern.FX[a_,t] = vHhTilBoern.L[a_,t];
vBolig.FX[a_,t] = vBolig.L[a_,t];
vBoligHtM.FX[a_,t] = vBoligHtM.L[a_,t];
vKBolig.FX[t] = vKBolig.L[t];
vIBolig.FX[t] = vIBolig.L[t];
vHhInvestx.FX[a_,t] = vHhInvestx.L[a_,t];
vSelvstKapInd.FX[a_,t] = vSelvstKapInd.L[a_,t];
vArvKorrektion.FX[a_,t] = vArvKorrektion.L[a_,t];
rDisk.FX[a,t] = rDisk.L[a,t];
rKLeje2Bolig.FX[t] = rKLeje2Bolig.L[t];
rvCLejeBolig.FX[a_,t] = rvCLejeBolig.L[a_,t];
fHh.FX[a,t] = fHh.L[a,t];
uBolig.FX[a,t] = uBolig.L[a,t];
uBoligHtM.FX[a,t] = uBoligHtM.L[a,t];
fBoligUdgift.FX[a,t] = fBoligUdgift.L[a,t];
mUBolig.FX[a,t] = mUBolig.L[a,t];
dqIBoligInstOmk.FX[t] = dqIBoligInstOmk.L[t];
mUC.FX[a,t] = mUC.L[a,t];
EmUC.FX[a,t] = EmUC.L[a,t];
uC.FX[c_,t] = uC.L[c_,t];
fMigration.FX[a_,t] = fMigration.L[a_,t];
uBoernFraHh.FX[a,t] = uBoernFraHh.L[a,t];
dFormue.FX[a_,t] = dFormue.L[a_,t];
jvHhx.FX[a_,t] = jvHhx.L[a_,t];
vPrimSaldo.FX[t] = vPrimSaldo.L[t];
vSaldo.FX[t] = vSaldo.L[t];
vOff.FX[portf_,t] = vOff.L[portf_,t];
vOffOmv.FX[t] = vOffOmv.L[t];
vOffNetRenter.FX[t] = vOffNetRenter.L[t];
vNROffNetRenter.FX[t] = vNROffNetRenter.L[t];
vOffRenteInd.FX[t] = vOffRenteInd.L[t];
vOffRenteUd.FX[t] = vOffRenteUd.L[t];
vOffNetFormue.FX[t] = vOffNetFormue.L[t];
vOffPas.FX[t] = vOffPas.L[t];
vOffY2C.FX[t] = vOffY2C.L[t];
vSatsIndeks.FX[t] = vSatsIndeks.L[t];
rOffRenteUd.FX[t] = rOffRenteUd.L[t];
nvBNP.FX[t] = nvBNP.L[t];
nvPrimSaldo.FX[t] = nvPrimSaldo.L[t];
nvtLukning.FX[t] = nvtLukning.L[t];
nvGLukning.FX[t] = nvGLukning.L[t];
rHBI.FX[t] = rHBI.L[t];
fHBIDisk.FX[t] = fHBIDisk.L[t];
rOffRenteInd.FX[t] = rOffRenteInd.L[t];
rOffAkt2BNP.FX[t] = rOffAkt2BNP.L[t];
vOffPrimInd.FX[t] = vOffPrimInd.L[t];
vtY.FX[t] = vtY.L[t];
vtYRest.FX[t] = vtYRest.L[t];
vtDirekte.FX[t] = vtDirekte.L[t];
vtKilde.FX[t] = vtKilde.L[t];
vtBund.FX[a_,t] = vtBund.L[a_,t];
vtTop.FX[a_,t] = vtTop.L[a_,t];
vtKommune.FX[a_,t] = vtKommune.L[a_,t];
vtEjd.FX[a_,t] = vtEjd.L[a_,t];
vtAktie.FX[a_,t] = vtAktie.L[a_,t];
vtVirksomhed.FX[a_,t] = vtVirksomhed.L[a_,t];
vtDoedsbo.FX[a_,t] = vtDoedsbo.L[a_,t];
vtHhAM.FX[a_,t] = vtHhAM.L[a_,t];
vtPersRest.FX[a_,t] = vtPersRest.L[a_,t];
vtKapPens.FX[a_,t] = vtKapPens.L[a_,t];
vtKapPensArv.FX[a_,t] = vtKapPensArv.L[a_,t];
vtSelskab.FX[s_,t] = vtSelskab.L[s_,t];
vtSelskabRest.FX[s_,t] = vtSelskabRest.L[s_,t];
vtSelskabNord.FX[t] = vtSelskabNord.L[t];
vtPAL.FX[t] = vtPAL.L[t];
vtMedie.FX[t] = vtMedie.L[t];
vtHhVaegt.FX[a_,t] = vtHhVaegt.L[a_,t];
vtAfgEU.FX[t] = vtAfgEU.L[t];
vtLukning.FX[a_,t] = vtLukning.L[a_,t];
vtIndirekte.FX[t] = vtIndirekte.L[t];
vtEU.FX[t] = vtEU.L[t];
vBidrag.FX[a_,t] = vBidrag.L[a_,t];
vBidragAK.FX[t] = vBidragAK.L[t];
vBidragEL.FX[t] = vBidragEL.L[t];
vBidragFri.FX[t] = vBidragFri.L[t];
vBidragObl.FX[t] = vBidragObl.L[t];
vBidragOblTjm.FX[t] = vBidragOblTjm.L[t];
vBidragATP.FX[t] = vBidragATP.L[t];
vBidragOblRest.FX[t] = vBidragOblRest.L[t];
vBidragTjmp.FX[t] = vBidragTjmp.L[t];
vOffIndRest.FX[t] = vOffIndRest.L[t];
vtKirke.FX[a_,t] = vtKirke.L[a_,t];
vJordrente.FX[t] = vJordrente.L[t];
vPersInd.FX[a_,t] = vPersInd.L[a_,t];
vPersIndRest.FX[a_,t] = vPersIndRest.L[a_,t];
vSkatteplInd.FX[a_,t] = vSkatteplInd.L[a_,t];
vNetKapIndPos.FX[a_,t] = vNetKapIndPos.L[a_,t];
vNetKapInd.FX[a_,t] = vNetKapInd.L[a_,t];
vKapIndPos.FX[a_,t] = vKapIndPos.L[a_,t];
vKapIndNeg.FX[a_,t] = vKapIndNeg.L[a_,t];
vPersFradrag.FX[a_,t] = vPersFradrag.L[a_,t];
vAKFradrag.FX[a_,t] = vAKFradrag.L[a_,t];
vELFradrag.FX[a_,t] = vELFradrag.L[a_,t];
vRestFradrag.FX[a_,t] = vRestFradrag.L[a_,t];
vBeskFradrag.FX[a_,t] = vBeskFradrag.L[a_,t];
vRealiseretAktieOmv.FX[a_,t] = vRealiseretAktieOmv.L[a_,t];
vUrealiseretAktieOmv.FX[t] = vUrealiseretAktieOmv.L[t];
ftBund.FX[a_,t] = ftBund.L[a_,t];
rTopSkatInd.FX[a_,t] = rTopSkatInd.L[a_,t];
ftKommune.FX[a_,t] = ftKommune.L[a_,t];
fvtEjd.FX[t] = fvtEjd.L[t];
fvtAktie.FX[t] = fvtAktie.L[t];
fvtDoedsbo.FX[t] = fvtDoedsbo.L[t];
jvKapIndPos.FX[a_,t] = jvKapIndPos.L[a_,t];
jvKapIndneg.FX[a_,t] = jvKapIndneg.L[a_,t];
uvPersFradrag.FX[a_,t] = uvPersFradrag.L[a_,t];
rOffFraUdl2BNP.FX[t] = rOffFraUdl2BNP.L[t];
rOffFraHh2BNP.FX[t] = rOffFraHh2BNP.L[t];
rOffFraVirk2BNP.FX[t] = rOffFraVirk2BNP.L[t];
rOffVirk2BNP.FX[t] = rOffVirk2BNP.L[t];
rPersIndRest_a2PersInd.FX[a,t] = rPersIndRest_a2PersInd.L[a,t];
rPersIndRest_t2PersInd.FX[t] = rPersIndRest_t2PersInd.L[t];
rRestFradragSats2SatsIndeks.FX[t] = rRestFradragSats2SatsIndeks.L[t];
mtVirk.FX[s_,t] = mtVirk.L[s_,t];
tLukning.FX[t] = tLukning.L[t];
pGxAfskr.FX[t] = pGxAfskr.L[t];
qGxAfskr.FX[t] = qGxAfskr.L[t];
qG.FX[g_,t] = qG.L[g_,t];
vGxAfskr.FX[t] = vGxAfskr.L[t];
vOffPrimUd.FX[t] = vOffPrimUd.L[t];
vOffInv.FX[t] = vOffInv.L[t];
vOffSub.FX[t] = vOffSub.L[t];
vSubY.FX[t] = vSubY.L[t];
vSubYRes.FX[t] = vSubYRes.L[t];
vOffUdRest.FX[t] = vOffUdRest.L[t];
vOffTilHh.FX[t] = vOffTilHh.L[t];
vOvf.FX[ovf_,t] = vOvf.L[ovf_,t];
vHhOvf.FX[a,t] = vHhOvf.L[a,t];
vOvfSkatPl.FX[a_,t] = vOvfSkatPl.L[a_,t];
vOvfSats.FX[ovf,t] = vOvfSats.L[ovf,t];
vOvfUbeskat.FX[a_,t] = vOvfUbeskat.L[a_,t];
vGLukning.FX[t] = vGLukning.L[t];
uvGxAfskr.FX[t] = uvGxAfskr.L[t];
nOvf.FX[ovf,t] = nOvf.L[ovf,t];
fHhOvf.FX[t] = fHhOvf.L[t];
dnOvf2dBesk.FX[ovf,t] = dnOvf2dBesk.L[ovf,t];
dnOvf2dPop.FX[ovf,t] = dnOvf2dPop.L[ovf,t];
dvOvf2dBesk.FX[ovf_,t] = dvOvf2dBesk.L[ovf_,t];
dvOvf2dPop.FX[ovf_,t] = dvOvf2dPop.L[ovf_,t];
rOffLandKoeb2BNP.FX[t] = rOffLandKoeb2BNP.L[t];
rOffTilUdl2BNP.FX[t] = rOffTilUdl2BNP.L[t];
rOffTilVirk2BNP.FX[t] = rOffTilVirk2BNP.L[t];
rOffTilHhKap2BNP.FX[t] = rOffTilHhKap2BNP.L[t];
rOffTilHhOev2BNP.FX[t] = rOffTilHhOev2BNP.L[t];
rSubEU2BNP.FX[t] = rSubEU2BNP.L[t];
vtMoms.FX[d_,s_,t] = vtMoms.L[d_,s_,t];
vtNetAfg.FX[d_,s_,t] = vtNetAfg.L[d_,s_,t];
vtAfg.FX[d_,s_,t] = vtAfg.L[d_,s_,t];
vtReg.FX[d_,t] = vtReg.L[d_,t];
vPunktSub.FX[t] = vPunktSub.L[t];
vtTold.FX[d_,s_,t] = vtTold.L[d_,s_,t];
vtGrund.FX[s_,t] = vtGrund.L[s_,t];
vtVirkVaegt.FX[s_,t] = vtVirkVaegt.L[s_,t];
vtVirkAM.FX[s_,t] = vtVirkAM.L[s_,t];
vtAUB.FX[s_,t] = vtAUB.L[s_,t];
vtSubLoen.FX[s_,t] = vtSubLoen.L[s_,t];
vtNetLoenAfg.FX[s_,t] = vtNetLoenAfg.L[s_,t];
vtNetYAfg.FX[s_,t] = vtNetYAfg.L[s_,t];
vtNetYAfgRest.FX[s_,t] = vtNetYAfgRest.L[s_,t];
tNetAfg_y.FX[d_,s,t] = tNetAfg_y.L[d_,s,t];
tNetAfg_m.FX[d_,s,t] = tNetAfg_m.L[d_,s,t];
tL.FX[s_,t] = tL.L[s_,t];
tIOy.FX[d_,s,t] = tIOy.L[d_,s,t];
tIOm.FX[d_,s,t] = tIOm.L[d_,s,t];
vVirkBVT5aarSnit.FX[t] = vVirkBVT5aarSnit.L[t];
vBVT2hL.FX[t] = vBVT2hL.L[t];
vBVT2hLsnit.FX[t] = vBVT2hLsnit.L[t];
qBVT2hL.FX[t] = qBVT2hL.L[t];
qBVT2hLsnit.FX[t] = qBVT2hLsnit.L[t];
vBFI.FX[t] = vBFI.L[t];
vUdl.FX[portf_,t] = vUdl.L[portf_,t];
vUdlRenter.FX[t] = vUdlRenter.L[t];
vUdlOmv.FX[t] = vUdlOmv.L[t];
vUdlNFE.FX[t] = vUdlNFE.L[t];
rArbProd.FX[t] = rArbProd.L[t];
rBVTGab.FX[t] = rBVTGab.L[t];
rBeskGab.FX[t] = rBeskGab.L[t];
pCInflSnit.FX[t] = pCInflSnit.L[t];
pBNP.FX[t] = pBNP.L[t];
pBVT.FX[s_,t] = pBVT.L[s_,t];
pIO.FX[d_,s,t] = pIO.L[d_,s,t];
pIOy.FX[d_,s,t] = pIOy.L[d_,s,t];
pIOm.FX[d_,s,t] = pIOm.L[d_,s,t];
pX.FX[x_,t] = pX.L[x_,t];
pXm.FX[x,t] = pXm.L[x,t];
pXy.FX[x,t] = pXy.L[x,t];
pR.FX[r_,t] = pR.L[r_,t];
pCDK.FX[c_,t] = pCDK.L[c_,t];
pCTurist.FX[c,t] = pCTurist.L[c,t];
pG.FX[g_,t] = pG.L[g_,t];
pI.FX[i_,t] = pI.L[i_,t];
pI_s.FX[i_,s_,t] = pI_s.L[i_,s_,t];
vY.FX[s_,t] = vY.L[s_,t];
vM.FX[s_,t] = vM.L[s_,t];
vBNP.FX[t] = vBNP.L[t];
vBVT.FX[s_,t] = vBVT.L[s_,t];
vIO.FX[d_,s_,t] = vIO.L[d_,s_,t];
vIOy.FX[d_,s_,t] = vIOy.L[d_,s_,t];
vIOm.FX[d_,s_,t] = vIOm.L[d_,s_,t];
vX.FX[x_,t] = vX.L[x_,t];
vXy.FX[x,t] = vXy.L[x,t];
vR.FX[r_,t] = vR.L[r_,t];
vC.FX[c_,t] = vC.L[c_,t];
vCTurist.FX[c,t] = vCTurist.L[c,t];
vG.FX[g_,t] = vG.L[g_,t];
vI.FX[i_,t] = vI.L[i_,t];
qM.FX[s_,t] = qM.L[s_,t];
qBNP.FX[t] = qBNP.L[t];
qBVT.FX[s_,t] = qBVT.L[s_,t];
qIO.FX[d_,s_,t] = qIO.L[d_,s_,t];
qIOy.FX[d_,s_,t] = qIOy.L[d_,s_,t];
qIOm.FX[d_,s_,t] = qIOm.L[d_,s_,t];
qCDK.FX[c,t] = qCDK.L[c,t];
qI.FX[i_,t] = qI.L[i_,t];
juIOm.FX[s,t] = juIOm.L[s,t];
juIOXy.FX[s,t] = juIOXy.L[s,t];
uIO.FX[d_,s,t] = uIO.L[d_,s,t];
uIOy.FX[dux,s,t] = uIOy.L[dux,s,t];
uIOm.FX[dux,s,t] = uIOm.L[dux,s,t];
uIOXy.FX[x,s,t] = uIOXy.L[x,s,t];
uIOXm.FX[x,s,t] = uIOXm.L[x,s,t];
fpI_s.FX[i,t] = fpI_s.L[i,t];
uIO0.FX[dux,s_,t] = uIO0.L[dux,s_,t];
rpIOm2pIOy.FX[d_,s,t] = rpIOm2pIOy.L[d_,s,t];
fqMKortsigt.FX[dux,s,t] = fqMKortsigt.L[dux,s,t];
pBoligRigid.FX[a,t] = pBoligRigid.L[a,t];
vtHh.FX[a_,t] = vtHh.L[a_,t];
vDispInd.FX[t] = vDispInd.L[t];
vHhInd.FX[a_,t] = vHhInd.L[a_,t];
vHhxAfk.FX[a_,t] = vHhxAfk.L[a_,t];
vHhFinAkt.FX[a_,t] = vHhFinAkt.L[a_,t];
vHh.FX[portf_,a_,t] = vHh.L[portf_,a_,t];
vHhRenter.FX[portf_,t] = vHhRenter.L[portf_,t];
vHhOmv.FX[portf_,t] = vHhOmv.L[portf_,t];
vHhPensAfk.FX[portf_,a_,t] = vHhPensAfk.L[portf_,a_,t];
vHhNFE.FX[t] = vHhNFE.L[t];
vPensIndb.FX[portf_,a_,t] = vPensIndb.L[portf_,a_,t];
vPensUdb.FX[portf_,a_,t] = vPensUdb.L[portf_,a_,t];
vPensArv.FX[portf_,a_,t] = vPensArv.L[portf_,a_,t];
vNetIndPensUdb.FX[t] = vNetIndPensUdb.L[t];
vNetKolPensUdb.FX[t] = vNetKolPensUdb.L[t];
vKolPensRenter.FX[t] = vKolPensRenter.L[t];
vLejeAfEjerBolig.FX[t] = vLejeAfEjerBolig.L[t];
vHhFraVirkKap.FX[t] = vHhFraVirkKap.L[t];
vHhFraVirkOev.FX[t] = vHhFraVirkOev.L[t];
vHhFraVirk.FX[t] = vHhFraVirk.L[t];
vHhTilUdl.FX[t] = vHhTilUdl.L[t];
mrHhxAfk.FX[t] = mrHhxAfk.L[t];
mrRealKredAfk.FX[t] = mrRealKredAfk.L[t];
rRealKred2Bolig.FX[a_,t] = rRealKred2Bolig.L[a_,t];
rPensIndb.FX[pens,a_,t] = rPensIndb.L[pens,a_,t];
rPensUdb.FX[pens,a_,t] = rPensUdb.L[pens,a_,t];
rBoligOmkRest.FX[t] = rBoligOmkRest.L[t];
rHhAfk.FX[portf,t] = rHhAfk.L[portf,t];
jvHhxAfk.FX[a_,t] = jvHhxAfk.L[a_,t];
jvHhPensAfk.FX[portf_,a_,t] = jvHhPensAfk.L[portf_,a_,t];
jvHh.FX[t] = jvHh.L[t];
mtAktie.FX[t] = mtAktie.L[t];
pKspBy.FX[t] = pKspBy.L[t];
sqBVT.FX[t] = sqBVT.L[t];
sdqLdnL.FX[s_,t] = sdqLdnL.L[s_,t];
sdOpslagOmk2dnLLag.FX[t] = sdOpslagOmk2dnLLag.L[t];
sqL.FX[s_,t] = sqL.L[s_,t];
qKspBy.FX[t] = qKspBy.L[t];
qLspBy.FX[t] = qLspBy.L[t];
sqLspBy.FX[t] = sqLspBy.L[t];
uY.FX[t] = uY.L[t];
shL.FX[t] = shL.L[t];
srL2nL.FX[t] = srL2nL.L[t];
sfW.FX[s_,t] = sfW.L[s_,t];
sdOpslagOmk2dnL.FX[t] = sdOpslagOmk2dnL.L[t];
sfProdHh.FX[t] = sfProdHh.L[t];
snSoegBaseHh.FX[a_,t] = snSoegBaseHh.L[a_,t];
snLHh.FX[a_,t] = snLHh.L[a_,t];
snSoegHh.FX[a_,t] = snSoegHh.L[a_,t];
sfDeltag.FX[a,t] = sfDeltag.L[a,t];
srJobFinding.FX[t] = srJobFinding.L[t];
srMatch.FX[t] = srMatch.L[t];
srOpslag2soeg.FX[t] = srOpslag2soeg.L[t];
shLHh.FX[a_,t] = shLHh.L[a_,t];
srOpslagOmk.FX[t] = srOpslagOmk.L[t];
snOpslag.FX[t] = snOpslag.L[t];
srSeparation.FX[t] = srSeparation.L[t];
snLUdl.FX[t] = snLUdl.L[t];
shLUdl.FX[t] = shLUdl.L[t];
snL.FX[s_,t] = snL.L[s_,t];
snSoegUdl.FX[t] = snSoegUdl.L[t];
snSoc.FX[soc_,t] = snSoc.L[soc_,t];
dSoc2dPop.FX[soc_,t] = dSoc2dPop.L[soc_,t];
srLedig.FX[t] = srLedig.L[t];
pUdl.FX[t] = pUdl.L[t];
pOlie.FX[t] = pOlie.L[t];
pLxUdn.FX[sp,t] = pLxUdn.L[sp,t];
uR.FX[sp,t] = uR.L[sp,t];
uKLB.FX[sp,t] = uKLB.L[sp,t];
uL.FX[sp,t] = uL.L[sp,t];
uK.FX[k,sp,t] = uK.L[k,sp,t];
uKL.FX[sp,t] = uKL.L[sp,t];
uh.FX[a,t] = uh.L[a,t];
vVirkIndRest.FX[t] = vVirkIndRest.L[t];
vOffAkt.FX[t] = vOffAkt.L[t];
vOffFonde.FX[t] = vOffFonde.L[t];
vtPALGab.FX[t] = vtPALGab.L[t];
vtSelskabNordGab.FX[t] = vtSelskabNordGab.L[t];
vtSelskabRestGab.FX[t] = vtSelskabRestGab.L[t];
vtRegGab.FX[t] = vtRegGab.L[t];
vOffNetRenterGab.FX[t] = vOffNetRenterGab.L[t];
vtRestGab.FX[t] = vtRestGab.L[t];
vEngangsForholdGab.FX[t] = vEngangsForholdGab.L[t];
jvOffPrimInd.FX[t] = jvOffPrimInd.L[t];
vtKildeRest.FX[t] = vtKildeRest.L[t];
vtDirekteRest.FX[t] = vtDirekteRest.L[t];
vOffFraUdl.FX[t] = vOffFraUdl.L[t];
vOffFraHh.FX[t] = vOffFraHh.L[t];
vOffFraVirk.FX[t] = vOffFraVirk.L[t];
vOffVirk.FX[t] = vOffVirk.L[t];
vPersIndRest_a.FX[a_,t] = vPersIndRest_a.L[a_,t];
vPersIndRest_t.FX[t] = vPersIndRest_t.L[t];
vHhOvfRest.FX[a,t] = vHhOvfRest.L[a,t];
vOffLandKoeb.FX[t] = vOffLandKoeb.L[t];
vOffTilUdl.FX[t] = vOffTilUdl.L[t];
vOffTilVirk.FX[t] = vOffTilVirk.L[t];
vOffTilHhKap.FX[t] = vOffTilHhKap.L[t];
vOffTilHhOev.FX[t] = vOffTilHhOev.L[t];
vSubEU.FX[t] = vSubEU.L[t];
vhWVirk.FX[t] = vhWVirk.L[t];
vOffLoen.FX[t] = vOffLoen.L[t];
vHhFormueR.FX[a_,t] = vHhFormueR.L[a_,t];
vHhFormueHtM.FX[a_,t] = vHhFormueHtM.L[a_,t];
vHhxR.FX[a_,t] = vHhxR.L[a_,t];
vHhPensR.FX[a_,t] = vHhPensR.L[a_,t];
vHhPensHtM.FX[a_,t] = vHhPensHtM.L[a_,t];
vHhPens.FX[a_,t] = vHhPens.L[a_,t];
vFrivaerdiR.FX[a_,t] = vFrivaerdiR.L[a_,t];
vFrivaerdiHtM.FX[a_,t] = vFrivaerdiHtM.L[a_,t];
vHhIndHtM.FX[a_,t] = vHhIndHtM.L[a_,t];
vHhIndR.FX[a_,t] = vHhIndR.L[a_,t];
vHhNetFinR.FX[a_,t] = vHhNetFinR.L[a_,t];
vHhNetFinHtM.FX[a_,t] = vHhNetFinHtM.L[a_,t];
vHhNetFin.FX[a_,t] = vHhNetFin.L[a_,t];
vHhIndMvHtM.FX[a_,t] = vHhIndMvHtM.L[a_,t];
vHhIndMvR.FX[a_,t] = vHhIndMvR.L[a_,t];
vHhIndMv.FX[a_,t] = vHhIndMv.L[a_,t];
vCR_NR.FX[a_,t] = vCR_NR.L[a_,t];
vCHtM_NR.FX[a_,t] = vCHtM_NR.L[a_,t];
vC_NR.FX[a_,t] = vC_NR.L[a_,t];
vHhFormue.FX[a_,t] = vHhFormue.L[a_,t];
vBoligUdgiftR.FX[a_,t] = vBoligUdgiftR.L[a_,t];
vBoligR.FX[a_,t] = vBoligR.L[a_,t];
qXMarked.FX[x,t] = qXMarked.L[x,t];
qProd.FX[t] = qProd.L[t];
qLand.FX[t] = qLand.L[t];
qKLejeBolig.FX[t] = qKLejeBolig.L[t];
qGrus.FX[t] = qGrus.L[t];
qLxUdn.FX[s,t] = qLxUdn.L[s,t];
qCR_NR.FX[a_,t] = qCR_NR.L[a_,t];
qCHtM_NR.FX[a_,t] = qCHtM_NR.L[a_,t];
qC_NR.FX[a_,t] = qC_NR.L[a_,t];
hVirk.FX[t] = hVirk.L[t];
hOff.FX[t] = hOff.L[t];
tPensKor.FX[t] = tPensKor.L[t];
nSoegBase.FX[t] = nSoegBase.L[t];
rtTopRenter.FX[t] = rtTopRenter.L[t];
mrNet2KapIndPos.FX[t] = mrNet2KapIndPos.L[t];
rKolPens.FX[pens,t] = rKolPens.L[pens,t];
rHhFraVirkKap.FX[t] = rHhFraVirkKap.L[t];
rHhFraVirkOev.FX[t] = rHhFraVirkOev.L[t];
rHhTilUdl.FX[t] = rHhTilUdl.L[t];
cHh_a.FX[akt,a,t] = cHh_a.L[akt,a,t];
cHh_t.FX[akt,t] = cHh_t.L[akt,t];
dvHh2dvHhx.FX[portf_,t] = dvHh2dvHhx.L[portf_,t];
dvHh2dvBolig.FX[portf_,t] = dvHh2dvBolig.L[portf_,t];
dvHh2dvPensIndb.FX[portf_,t] = dvHh2dvPensIndb.L[portf_,t];
rBoligOmkRestRes.FX[t] = rBoligOmkRestRes.L[t];
rRealKredTraeg.FX = rRealKredTraeg.L;
rRealKred2Bolig_a.FX[a,t] = rRealKred2Bolig_a.L[a,t];
rRealKred2Bolig_t.FX[t] = rRealKred2Bolig_t.L[t];
cmtAktie.FX[t] = cmtAktie.L[t];
ErAktieAfk_static.FX[t] = ErAktieAfk_static.L[t];
rPensArv.FX[pens,a_,t] = rPensArv.L[pens,a_,t];
jvHhOmv.FX[t] = jvHhOmv.L[t];
jvHhRenter.FX[t] = jvHhRenter.L[t];
jvNetKolPensUdb.FX[t] = jvNetKolPensUdb.L[t];
jvKolPensRenter.FX[t] = jvKolPensRenter.L[t];
jmrHhAfk.FX[t] = jmrHhAfk.L[t];
jrHhRente.FX[portf,t] = jrHhRente.L[portf,t];
jrHhOmv.FX[portf,t] = jrHhOmv.L[portf,t];
rUdlRealkred.FX[t] = rUdlRealkred.L[t];
jvBFI.FX[t] = jvBFI.L[t];
fDemoTraek.FX[t] = fDemoTraek.L[t];
uHhOvfPop.FX[a,t] = uHhOvfPop.L[a,t];
uOvfUbeskat.FX[a,t] = uOvfUbeskat.L[a,t];
jvOvf.FX[ovf,t] = jvOvf.L[ovf,t];
uvOvfSats.FX[ovf,t] = uvOvfSats.L[ovf,t];
eG.FX[g_] = eG.L[g_];
rGLukning.FX[t] = rGLukning.L[t];
uG.FX[g_,t] = uG.L[g_,t];
rvYsubRest2BVT.FX[t] = rvYsubRest2BVT.L[t];
tEjd.FX[t] = tEjd.L[t];
tPersRestxKapPens.FX[t] = tPersRestxKapPens.L[t];
tSelskabNord.FX[t] = tSelskabNord.L[t];
tVirksomhed.FX[t] = tVirksomhed.L[t];
tDoedsbo.FX[t] = tDoedsbo.L[t];
tAktie.FX[t] = tAktie.L[t];
tJordRente.FX[t] = tJordRente.L[t];
tHhVaegt.FX[t] = tHhVaegt.L[t];
tbeskfradrag.FX[t] = tbeskfradrag.L[t];
ftAMBidrag.FX[t] = ftAMBidrag.L[t];
ftKapPens.FX[t] = ftKapPens.L[t];
ftSelskab.FX[t] = ftSelskab.L[t];
ftPAL.FX[t] = ftPAL.L[t];
ftKirke.FX[t] = ftKirke.L[t];
jfvSkatteplInd.FX[t] = jfvSkatteplInd.L[t];
rNet2KapIndPos.FX[a_,t] = rNet2KapIndPos.L[a_,t];
rtKirke.FX[t] = rtKirke.L[t];
vRestFradragSats.FX[t] = vRestFradragSats.L[t];
rAKFradrag2Bidrag.FX[t] = rAKFradrag2Bidrag.L[t];
rELFradrag2Bidrag.FX[t] = rELFradrag2Bidrag.L[t];
uBidragOblTjm.FX[t] = uBidragOblTjm.L[t];
uBidragATP.FX[t] = uBidragATP.L[t];
uBidragOblRest.FX[t] = uBidragOblRest.L[t];
uBidragEL.FX[t] = uBidragEL.L[t];
uBidragFri.FX[t] = uBidragFri.L[t];
uBidragAK.FX[t] = uBidragAK.L[t];
uBidragTjmp.FX[t] = uBidragTjmp.L[t];
utMedie.FX[t] = utMedie.L[t];
rRealiseringAktieOmv.FX[t] = rRealiseringAktieOmv.L[t];
rvtAfgEU2vtAfg.FX[t] = rvtAfgEU2vtAfg.L[t];
tBund.FX[t] = tBund.L[t];
tTop.FX[t] = tTop.L[t];
tKommune.FX[t] = tKommune.L[t];
tAMbidrag.FX[t] = tAMbidrag.L[t];
tKapPens.FX[t] = tKapPens.L[t];
tSelskab.FX[t] = tSelskab.L[t];
tPAL.FX[t] = tPAL.L[t];
tKirke.FX[t] = tKirke.L[t];
rOffRealKred2Pas.FX[t] = rOffRealKred2Pas.L[t];
rOffAkt.FX[akt,t] = rOffAkt.L[akt,t];
jvOffOmv.FX[t] = jvOffOmv.L[t];
jrOffRenteInd.FX[t] = jrOffRenteInd.L[t];
jrOffRenteUd.FX[t] = jrOffRenteUd.L[t];
jfSatsIndeks.FX[t] = jfSatsIndeks.L[t];
rOffY2C.FX[t] = rOffY2C.L[t];
rDisk_t.FX[t] = rDisk_t.L[t];
rDisk_a.FX[a,t] = rDisk_a.L[a,t];
uBolig_a.FX[a,t] = uBolig_a.L[a,t];
uBolig_t.FX[t] = uBolig_t.L[t];
uBoligHtM_a.FX[a,t] = uBoligHtM_a.L[a,t];
uBoligHtM_t.FX[t] = uBoligHtM_t.L[t];
uBoligHtM_match.FX = uBoligHtM_match.L;
uBoernFraHh_t.FX[t] = uBoernFraHh_t.L[t];
uBoernFraHh_a.FX[a,t] = uBoernFraHh_a.L[a,t];
eHh.FX = eHh.L;
rRef.FX = rRef.L;
rRef_2016.FX = rRef_2016.L;
rRefHtM.FX = rRefHtM.L;
rRefBolig.FX = rRefBolig.L;
rHtM.FX = rHtM.L;
eBolig.FX = eBolig.L;
uIBoligInstOmk.FX = uIBoligInstOmk.L;
fIBoligInstOmk.FX[t] = fIBoligInstOmk.L[t];
fBoligGevinst.FX = fBoligGevinst.L;
EpLandInfl.FX[t] = EpLandInfl.L[t];
EpBoligInfl.FX[t] = EpBoligInfl.L[t];
eC.FX[c_] = eC.L[c_];
uLand.FX[t] = uLand.L[t];
uIBolig.FX[t] = uIBolig.L[t];
rArv.FX[a,t] = rArv.L[a,t];
rArv_a.FX[a,aa] = rArv_a.L[a,aa];
uFormue.FX[a,t] = uFormue.L[a,t];
cFormue.FX[a,t] = cFormue.L[a,t];
rMaxRealkred.FX[t] = rMaxRealkred.L[t];
uArv.FX[a,t] = uArv.L[a,t];
cArv.FX[a,t] = cArv.L[a,t];
tArv.FX[t] = tArv.L[t];
rSelvstKapInd.FX[t] = rSelvstKapInd.L[t];
eNytte.FX = eNytte.L;
rArvKorrektion.FX[a] = rArvKorrektion.L[a];
uC0.FX[c_,t] = uC0.L[c_,t];
fuCnest.FX[cNest,t] = fuCnest.L[cNest,t];
rBilAfskr.FX[t] = rBilAfskr.L[t];
rHhInvestx.FX[t] = rHhInvestx.L[t];
nArvinger.FX[a,t] = nArvinger.L[a,t];
rBoern.FX[a,t] = rBoern.L[a,t];
rOverlev.FX[a_,t] = rOverlev.L[a_,t];
ErOverlev.FX[a,t] = ErOverlev.L[a,t];
rBoligPrem.FX[t] = rBoligPrem.L[t];
jfEpC.FX[t] = jfEpC.L[t];
srLUdn.FX[s_,t] = srLUdn.L[s_,t];
jshLHh.FX[a,t] = jshLHh.L[a,t];
jsfDeltag.FX[a,t] = jsfDeltag.L[a,t];
juY.FX[t] = juY.L[t];
dSoc2dBesk.FX[soc_,t] = dSoc2dBesk.L[soc_,t];
fProdHh_a.FX[a,t] = fProdHh_a.L[a,t];
fProdHh_t.FX[t] = fProdHh_t.L[t];
fDiskpL.FX[sp,t] = fDiskpL.L[sp,t];
fDiskDeltag.FX[a,t] = fDiskDeltag.L[a,t];
mrKomp.FX[a_,t] = mrKomp.L[a_,t];
eDeltag.FX = eDeltag.L;
emrKomp.FX = emrKomp.L;
eMatching.FX = eMatching.L;
nSoegBaseUdl.FX[t] = nSoegBaseUdl.L[t];
uDeltag.FX[a,t] = uDeltag.L[a,t];
eh.FX = eh.L;
fhLUdl.FX[t] = fhLUdl.L[t];
fProdUdl.FX[t] = fProdUdl.L[t];
fW0.FX[s_,t] = fW0.L[s_,t];
uOpslagOmk.FX = uOpslagOmk.L;
uMatchOmk.FX = uMatchOmk.L;
uMatchOmkSqr.FX = uMatchOmkSqr.L;
rLoenTraeghed.FX = rLoenTraeghed.L;
rLoenIndeksering.FX = rLoenIndeksering.L;
cmtInd.FX[a,t] = cmtInd.L[a,t];
rfZhTraeghed.FX = rfZhTraeghed.L;
rAMDisk.FX[t] = rAMDisk.L[t];
rFFLoenAlternativ.FX = rFFLoenAlternativ.L;
cMatchOmkSqr.FX[s_,t] = cMatchOmkSqr.L[s_,t];
jvhW.FX[t] = jvhW.L[t];
rLoenNash.FX[t] = rLoenNash.L[t];
rSelvst.FX[s_,t] = rSelvst.L[s_,t];
jnSoc.FX[soc_,t] = jnSoc.L[soc_,t];
upYTraeghed.FX[sp] = upYTraeghed.L[sp];
eY.FX[sp,t] = eY.L[sp,t];
epM2pOlie.FX[s] = epM2pOlie.L[s];
epXUdl2pOlie.FX[x] = epXUdl2pOlie.L[x];
upXSoe.FX[t] = upXSoe.L[t];
upXUdl.FX[x,t] = upXUdl.L[x,t];
upM.FX[s,t] = upM.L[s,t];
upYUdv.FX[t] = upYUdv.L[t];
jpY_bol.FX[t] = jpY_bol.L[t];
rSkatAfskr.FX[k,t] = rSkatAfskr.L[k,t];
rAktieRes2BVT.FX[t] = rAktieRes2BVT.L[t];
rvOblLaan2K.FX[t] = rvOblLaan2K.L[t];
rvVirkx.FX[akt,t] = rvVirkx.L[akt,t];
rPensAkt.FX[akt,t] = rPensAkt.L[akt,t];
rFinAccel.FX[sp] = rFinAccel.L[sp];
cFinAccel.FX[sp,t] = cFinAccel.L[sp,t];
uFinAccel.FX[sp,t] = uFinAccel.L[sp,t];
rFinAccelTraeghed.FX = rFinAccelTraeghed.L;
rvRealKred2K.FX[t] = rvRealKred2K.L[t];
crRenteBank.FX[t] = crRenteBank.L[t];
rUdlAktiePrem.FX[t] = rUdlAktiePrem.L[t];
rVirkDiskPrem.FX[sp,t] = rVirkDiskPrem.L[sp,t];
jvVirkRenter.FX[t] = jvVirkRenter.L[t];
jvVirkOmv.FX[t] = jvVirkOmv.L[t];
jrRente_pension.FX[t] = jrRente_pension.L[t];
jrOmv_pension.FX[t] = jrOmv_pension.L[t];
jrOmv_UdlAktier.FX[t] = jrOmv_UdlAktier.L[t];
jvVirkx.FX[t] = jvVirkx.L[t];
uKInstOmk.FX[k,sp] = uKInstOmk.L[k,sp];
fKInstOmk.FX[k,sp,t] = fKInstOmk.L[k,sp,t];
eKUdn.FX[k] = eKUdn.L[k];
eKUdnPersistens.FX[k] = eKUdnPersistens.L[k];
eLUdn.FX = eLUdn.L;
eLUdnPersistens.FX = eLUdnPersistens.L;
eKLBR.FX[sp] = eKLBR.L[sp];
eKLB.FX[sp] = eKLB.L[sp];
eKL.FX[sp] = eKL.L[sp];
rAfskr_static.FX[k,sp,t] = rAfskr_static.L[k,sp,t];
gpI_s_static.FX[k,sp,t] = gpI_s_static.L[k,sp,t];
rAfskr.FX[k,s_,t] = rAfskr.L[k,s_,t];
rIL2y.FX[s_,t] = rIL2y.L[s_,t];
fProd.FX[s_,t] = fProd.L[s_,t];
jrLUdn.FX[sp,t] = jrLUdn.L[sp,t];
jrKUdn.FX[k,sp,t] = jrKUdn.L[k,sp,t];
jfqI_s_iL.FX[t] = jfqI_s_iL.L[t];
jpK.FX[k,sp,t] = jpK.L[k,sp,t];
rOffIB2NyInv.FX[t] = rOffIB2NyInv.L[t];
rOffLTraeghed.FX = rOffLTraeghed.L;
rvOffIndirInv2vBVT.FX[t] = rvOffIndirInv2vBVT.L[t];
jrpOffAfskr.FX[k,t] = jrpOffAfskr.L[k,t];
jrqOffAfskr.FX[k,t] = jrqOffAfskr.L[k,t];
jrpOffNyInv.FX[t] = jrpOffNyInv.L[t];
uXTur.FX[t] = uXTur.L[t];
uXm.FX[x,t] = uXm.L[x,t];
fuCturisme.FX[t] = fuCturisme.L[t];
uCturisme0.FX[c,t] = uCturisme0.L[c,t];
rXTraeghed.FX = rXTraeghed.L;
upXyTraeghed.FX = upXyTraeghed.L;
rXSkalaTraeghed.FX = rXSkalaTraeghed.L;
eXUdl.FX[x] = eXUdl.L[x];
cpXyTraeghed.FX[x,t] = cpXyTraeghed.L[x,t];
tYsub_y0.FX[d_,s,t] = tYsub_y0.L[d_,s,t];
tYsub_m0.FX[d_,s,t] = tYsub_m0.L[d_,s,t];
tTold.FX[d_,s,t] = tTold.L[d_,s,t];
tMoms_y.FX[d_,s,t] = tMoms_y.L[d_,s,t];
tMoms_m.FX[d_,s,t] = tMoms_m.L[d_,s,t];
tK.FX[k,s_,t] = tK.L[k,s_,t];
tLoensum.FX[s,t] = tLoensum.L[s,t];
tVirkAM.FX[s,t] = tVirkAM.L[s,t];
tLoenSub.FX[s,t] = tLoenSub.L[s,t];
tYsub0.FX[t] = tYsub0.L[t];
tReg.FX[d_,t] = tReg.L[d_,t];
tNetYRest.FX[s,t] = tNetYRest.L[s,t];
tAfg_y.FX[d_,s,t] = tAfg_y.L[d_,s,t];
tAfg_m.FX[d_,s,t] = tAfg_m.L[d_,s,t];
tYsub_y.FX[d_,s,t] = tYsub_y.L[d_,s,t];
tYsub_m.FX[d_,s,t] = tYsub_m.L[d_,s,t];
eIO.FX[d_,s] = eIO.L[d_,s];
rMerPris.FX[d_,t] = rMerPris.L[d_,t];
rvIO2vOffNyInv.FX[i,t] = rvIO2vOffNyInv.L[i,t];
rvIO2vPublicSales.FX[c,t] = rvIO2vPublicSales.L[c,t];
rpMTraeghed.FX[d_,s] = rpMTraeghed.L[d_,s];
rMKortsigt.FX[d_,s] = rMKortsigt.L[d_,s];
uIOm0.FX[dux,s,t] = uIOm0.L[dux,s,t];
uIOXy0.FX[x,s,t] = uIOXy0.L[x,s,t];
uIOXm0.FX[x,s,t] = uIOXm0.L[x,s,t];
fuIO.FX[dux,t] = fuIO.L[dux,t];
fuIOym.FX[dux,s,t] = fuIOym.L[dux,s,t];
fuXm.FX[x,t] = fuXm.L[x,t];
fuXy.FX[x,t] = fuXy.L[x,t];
upI_s.FX[i,s,t] = upI_s.L[i,s,t];
fpCTurist.FX[c,t] = fpCTurist.L[c,t];
dArv.FX[a_,t] = dArv.L[a_,t];
$onlisting 
# ----------------------------------------------------------------------------------------------------$UNFIX G_endo;
# ----------------------------------------------------------------------------------------------------
$offlisting
qX.lo[x_,t]$(((tx0[t]) and (xTot[x_])) or ((tx0[t]) and (x[x_] and t.val > 2015))) = -inf;
qX.up[x_,t]$(((tx0[t]) and (xTot[x_])) or ((tx0[t]) and (x[x_] and t.val > 2015))) = inf;
qXy.lo[x,t]$((tx0[t]) and (not sameas['xEne',x])) = -inf;
qXy.up[x,t]$((tx0[t]) and (not sameas['xEne',x])) = inf;
qXm.lo[x,t]$((tx0[t]) and (d1Xm[x,t])) = -inf;
qXm.up[x,t]$((tx0[t]) and (d1Xm[x,t])) = inf;
qCTurist.lo[c,t]$((tx0[t]) and (d1CTurist[c,t])) = -inf;
qCTurist.up[c,t]$((tx0[t]) and (d1CTurist[c,t])) = inf;
qXSkala.lo[x,t]$(tx0[t]) = -inf;
qXSkala.up[x,t]$(tx0[t]) = inf;
qXTraek.lo[x,t]$(tx0[t]) = -inf;
qXTraek.up[x,t]$(tx0[t]) = inf;
empty_group_dummy.lo[t]$(tx0[t]) = -inf;
empty_group_dummy.up[t]$(tx0[t]) = inf;
rpXUdl2pXy.lo[x,t]$(tx0[t]) = -inf;
rpXUdl2pXy.up[x,t]$(tx0[t]) = inf;
rpXy2pXUdl.lo[x,t]$(tx0[t]) = -inf;
rpXy2pXUdl.up[x,t]$(tx0[t]) = inf;
uXy.lo[x,t]$((tx0[t]) and (sameas['xEne',x])) = -inf;
uXy.up[x,t]$((tx0[t]) and (sameas['xEne',x])) = inf;
uCturisme.lo[c,t]$(tx0[t]) = -inf;
uCturisme.up[c,t]$(tx0[t]) = inf;
rpM2pXm.lo[x,t]$(tx0[t]) = -inf;
rpM2pXm.up[x,t]$(tx0[t]) = inf;
dqLdnL.lo[s_,t]$(tx0[t]) = -inf;
dqLdnL.up[s_,t]$(tx0[t]) = inf;
dqLLeaddnL.lo[sp,t]$(tx0[t]) = -inf;
dqLLeaddnL.up[sp,t]$(tx0[t]) = inf;
vWHh.lo[a_,t]$((tx0[t]) and ((aTot[a_] or a15t100[a_]) and t.val > 2015)) = -inf;
vWHh.up[a_,t]$((tx0[t]) and ((aTot[a_] or a15t100[a_]) and t.val > 2015)) = inf;
vhW.lo[t]$(tx0[t]) = -inf;
vhW.up[t]$(tx0[t]) = inf;
vhWNy.lo[t]$(tx0[t]) = -inf;
vhWNy.up[t]$(tx0[t]) = inf;
vWUdl.lo[t]$((tx0[t]) and (t.val > 1999)) = -inf;
vWUdl.up[t]$((tx0[t]) and (t.val > 1999)) = inf;
vhWForhandlet.lo[t]$(tx0[t]) = -inf;
vhWForhandlet.up[t]$(tx0[t]) = inf;
vVirkLoenPos.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vVirkLoenPos.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vVirkLoenPos0.lo[t]$(tx0[t]) = -inf;
vVirkLoenPos0.up[t]$(tx0[t]) = inf;
vVirkLoenNeg.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vVirkLoenNeg.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vVirkLoenNeg0.lo[t]$(tx0[t]) = -inf;
vVirkLoenNeg0.up[t]$(tx0[t]) = inf;
vFFLoenPos.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vFFLoenPos.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vFFLoenPos0.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vFFLoenPos0.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vFFLoenNeg.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vFFLoenNeg.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vFFLoenNeg0.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vFFLoenNeg0.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vW.lo[s_,t]$(tx0[t]) = -inf;
vW.up[s_,t]$(tx0[t]) = inf;
vSelvstLoen.lo[s_,t]$(tx0[t]) = -inf;
vSelvstLoen.up[s_,t]$(tx0[t]) = inf;
vLoensum.lo[s_,t]$(tx0[t]) = -inf;
vLoensum.up[s_,t]$(tx0[t]) = inf;
pL.lo[sp,t]$(tx0[t]) = -inf;
pL.up[sp,t]$(tx0[t]) = inf;
rL2nL.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
rL2nL.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
dOpslagOmk2dnL.lo[sp,t]$(tx0[t]) = -inf;
dOpslagOmk2dnL.up[sp,t]$(tx0[t]) = inf;
dOpslagOmk2dnLLag.lo[sp,t]$(tx0[t]) = -inf;
dOpslagOmk2dnLLag.up[sp,t]$(tx0[t]) = inf;
nSoegBaseHh.lo[a_,t]$((tx0[t]) and ((aTot[a_] or a15t100[a_]) and t.val > 2015)) = -inf;
nSoegBaseHh.up[a_,t]$((tx0[t]) and ((aTot[a_] or a15t100[a_]) and t.val > 2015)) = inf;
nLHh.lo[a_,t]$((tx0[t]) and (aTot[a_] or (a15t100[a_] and t.val > 2015))) = -inf;
nLHh.up[a_,t]$((tx0[t]) and (aTot[a_] or (a15t100[a_] and t.val > 2015))) = inf;
nSoegHh.lo[a_,t]$((tx0[t]) and (aTot[a_] or (a15t100[a_] and t.val > 2015))) = -inf;
nSoegHh.up[a_,t]$((tx0[t]) and (aTot[a_] or (a15t100[a_] and t.val > 2015))) = inf;
fDeltag.lo[a,t]$((tx0[t]) and (a15t100[a] and t.val > 2015)) = -inf;
fDeltag.up[a,t]$((tx0[t]) and (a15t100[a] and t.val > 2015)) = inf;
nLUdl.lo[t]$(tx0[t]) = -inf;
nLUdl.up[t]$(tx0[t]) = inf;
nSoegUdl.lo[t]$(tx0[t]) = -inf;
nSoegUdl.up[t]$(tx0[t]) = inf;
hLHh.lo[a_,t]$((tx0[t]) and ((aTot[a_] or a15t100[a_]) and t.val > 2015)) = -inf;
hLHh.up[a_,t]$((tx0[t]) and ((aTot[a_] or a15t100[a_]) and t.val > 2015)) = inf;
hL.lo[t]$((tx0[t]) and (t.val > 1999)) = -inf;
hL.up[t]$((tx0[t]) and (t.val > 1999)) = inf;
hLUdl.lo[t]$((tx0[t]) and (t.val > 1999)) = -inf;
hLUdl.up[t]$((tx0[t]) and (t.val > 1999)) = inf;
rJobFinding.lo[t]$(tx0[t]) = -inf;
rJobFinding.up[t]$(tx0[t]) = inf;
rMatch.lo[t]$(tx0[t]) = -inf;
rMatch.up[t]$(tx0[t]) = inf;
rOpslag2soeg.lo[t]$(tx0[t]) = -inf;
rOpslag2soeg.up[t]$(tx0[t]) = inf;
nOpslag.lo[s_,t]$(tx0[t]) = -inf;
nOpslag.up[s_,t]$(tx0[t]) = inf;
rOpslagOmk.lo[s_,t]$(tx0[t]) = -inf;
rOpslagOmk.up[s_,t]$(tx0[t]) = inf;
rSeparation.lo[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = -inf;
rSeparation.up[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = inf;
fZh.lo[a,t]$((tx0[t]) and ((tx0[t] and a15t100[a]) and t.val > 2015)) = -inf;
fZh.up[a,t]$((tx0[t]) and ((tx0[t] and a15t100[a]) and t.val > 2015)) = inf;
cZh.lo[a,t]$((tx0[t]) and ((a15t100[a]) and t.val > 2015)) = -inf;
cZh.up[a,t]$((tx0[t]) and ((a15t100[a]) and t.val > 2015)) = inf;
nL.lo[s_,t]$(((tx0[t]) and (sp[s_])) or ((tx0[t]) and (sTot[s_] or spTot[s_]))) = -inf;
nL.up[s_,t]$(((tx0[t]) and (sp[s_])) or ((tx0[t]) and (sTot[s_] or spTot[s_]))) = inf;
nPop.lo[a_,t]$((tx0[t]) and (not a[a_] and t.val > 1991)) = -inf;
nPop.up[a_,t]$((tx0[t]) and (not a[a_] and t.val > 1991)) = inf;
nSoc.lo[soc_,t]$(tx0[t]) = -inf;
nSoc.up[soc_,t]$(tx0[t]) = inf;
rLedig.lo[t]$((tx0[t]) and (t.val > 1999)) = -inf;
rLedig.up[t]$((tx0[t]) and (t.val > 1999)) = inf;
rLedigGab.lo[t]$((tx0[t]) and (t.val > 1999)) = -inf;
rLedigGab.up[t]$((tx0[t]) and (t.val > 1999)) = inf;
fProdHh.lo[a_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
fProdHh.up[a_,t]$((tx0[t]) and (t.val > 2015)) = inf;
fW.lo[s_,t]$(tx0[t]) = -inf;
fW.up[s_,t]$(tx0[t]) = inf;
mtInd.lo[a_,t]$(tx0[t]) = -inf;
mtInd.up[a_,t]$(tx0[t]) = inf;
pY.lo[s_,t]$(((tx0[t]) and (sTot[s_] or spTot[s_])) or ((tx0[t]) and (s[s_]))) = -inf;
pY.up[s_,t]$(((tx0[t]) and (sTot[s_] or spTot[s_])) or ((tx0[t]) and (s[s_]))) = inf;
pXUdl.lo[x_,t]$(((tx0[t]) and (xTot[x_])) or ((tx0[t]) and (x[x_]))) = -inf;
pXUdl.up[x_,t]$(((tx0[t]) and (xTot[x_])) or ((tx0[t]) and (x[x_]))) = inf;
pM.lo[s_,t]$(((tx0[t]) and (sTot[s_])) or ((tx0[t]) and (s[s_] and d1IOm[dTot,s_,t]))) = -inf;
pM.up[s_,t]$(((tx0[t]) and (sTot[s_])) or ((tx0[t]) and (s[s_] and d1IOm[dTot,s_,t]))) = inf;
jrMarkup.lo[s_,t]$(tx0[t]) = -inf;
jrMarkup.up[s_,t]$(tx0[t]) = inf;
rMarkup.lo[s_,t]$(tx0[t]) = -inf;
rMarkup.up[s_,t]$(tx0[t]) = inf;
srMarkup.lo[s_,t]$((tx0[t]) and (sameas[s_,'udv'] or sameas[s_,'soe'])) = -inf;
srMarkup.up[s_,t]$((tx0[t]) and (sameas[s_,'udv'] or sameas[s_,'soe'])) = inf;
rLUdn.lo[s_,t]$((tx0[t]) and (not sameas[s_,'off'])) = -inf;
rLUdn.up[s_,t]$((tx0[t]) and (not sameas[s_,'off'])) = inf;
rKUdn.lo[k,s_,t]$((tx0[t]) and (d1K[k,s_,t-1] and not (sameas[s_,'bol'] or sameas[s_,'udv'] or sameas[s_,'off']))) = -inf;
rKUdn.up[k,s_,t]$((tx0[t]) and (d1K[k,s_,t-1] and not (sameas[s_,'bol'] or sameas[s_,'udv'] or sameas[s_,'off']))) = inf;
rKUdnSpBy.lo[t]$(tx0[t]) = -inf;
rKUdnSpBy.up[t]$(tx0[t]) = inf;
ErSkatAfskr.lo[k,sp,t]$(tx0[t]) = -inf;
ErSkatAfskr.up[k,sp,t]$(tx0[t]) = inf;
qL.lo[s_,t]$((tx0[t]) and (s[s_])) = -inf;
qL.up[s_,t]$((tx0[t]) and (s[s_])) = inf;
dKInstOmk2dK.lo[k,sp,t]$((tx0[t]) and (d1K[k,sp,t])) = -inf;
dKInstOmk2dK.up[k,sp,t]$((tx0[t]) and (d1K[k,sp,t])) = inf;
dKInstOmk2dI.lo[k,sp,t]$((tx0[t]) and (d1K[k,sp,t])) = -inf;
dKInstOmk2dI.up[k,sp,t]$((tx0[t]) and (d1K[k,sp,t])) = inf;
dKInstOmkLead2dI.lo[k,sp,t]$((tx0[t]) and (d1K[k,sp,t])) = -inf;
dKInstOmkLead2dI.up[k,sp,t]$((tx0[t]) and (d1K[k,sp,t])) = inf;
pKL.lo[sp,t]$(tx0[t]) = -inf;
pKL.up[sp,t]$(tx0[t]) = inf;
pKLB.lo[sp,t]$(tx0[t]) = -inf;
pKLB.up[sp,t]$(tx0[t]) = inf;
pKLBR.lo[s_,t]$(((tx0[t]) and (sOff[s_])) or ((tx0[t]) and (sp[s_]))) = -inf;
pKLBR.up[s_,t]$(((tx0[t]) and (sOff[s_])) or ((tx0[t]) and (sp[s_]))) = inf;
pK.lo[k,sp,t]$((tx0[t]) and (d1K[k,sp,t])) = -inf;
pK.up[k,sp,t]$((tx0[t]) and (d1K[k,sp,t])) = inf;
pTobinsQ.lo[k,sp,t]$(tx0[t]) = -inf;
pTobinsQ.up[k,sp,t]$(tx0[t]) = inf;
qKInstOmk.lo[i_,sp,t]$((tx0[t]) and (d1K[i_,sp,t])) = -inf;
qKInstOmk.up[i_,sp,t]$((tx0[t]) and (d1K[i_,sp,t])) = inf;
qKLBR.lo[sp,t]$(tx0[t]) = -inf;
qKLBR.up[sp,t]$(tx0[t]) = inf;
qKLB.lo[sp,t]$(tx0[t]) = -inf;
qKLB.up[sp,t]$(tx0[t]) = inf;
qKL.lo[sp,t]$(tx0[t]) = -inf;
qKL.up[sp,t]$(tx0[t]) = inf;
qR.lo[r_,t]$(((tx0[t]) and (rTot[r_] or spTot[r_])) or (((tx0[t]) and (sameas[r_, 'off'])) or ((tx0[t]) and (sp[r_])))) = -inf;
qR.up[r_,t]$(((tx0[t]) and (rTot[r_] or spTot[r_])) or (((tx0[t]) and (sameas[r_, 'off'])) or ((tx0[t]) and (sp[r_])))) = inf;
qK.lo[k,s_,t]$(((tx0[t]) and (d1K[k,s_,t] and sameas[s_,'bol'])) or (((tx0[t]) and (d1K[k,s_,t] and sOff[s_])) or ((tx0[t]) and ((d1K[k,s_,t] and sp[s_]) and not (sameas[s_,'bol']))))) = -inf;
qK.up[k,s_,t]$(((tx0[t]) and (d1K[k,s_,t] and sameas[s_,'bol'])) or (((tx0[t]) and (d1K[k,s_,t] and sOff[s_])) or ((tx0[t]) and ((d1K[k,s_,t] and sp[s_]) and not (sameas[s_,'bol']))))) = inf;
qI_s.lo[i_,s_,t]$(((tx0[t]) and (d1I_s[i_,s_,t] and iTot[i_])) or ((tx0[t]) and (d1I_s[i_,s_,t] and not sOff[s_]))) = -inf;
qI_s.up[i_,s_,t]$(((tx0[t]) and (d1I_s[i_,s_,t] and iTot[i_])) or ((tx0[t]) and (d1I_s[i_,s_,t] and not sOff[s_]))) = inf;
qY.lo[s_,t]$(((tx0[t]) and ((not (sameas[s_,'udv'])) and not (sameas[s_,'bol']))) or ((tx0[t]) and (sameas[s_,'bol']))) = -inf;
qY.up[s_,t]$(((tx0[t]) and ((not (sameas[s_,'udv'])) and not (sameas[s_,'bol']))) or ((tx0[t]) and (sameas[s_,'bol']))) = inf;
pOffAfskr.lo[i_,t]$(tx0[t]) = -inf;
pOffAfskr.up[i_,t]$(tx0[t]) = inf;
pOffNyInv.lo[t]$(tx0[t]) = -inf;
pOffNyInv.up[t]$(tx0[t]) = inf;
qOffAfskr.lo[i_,t]$(tx0[t]) = -inf;
qOffAfskr.up[i_,t]$(tx0[t]) = inf;
qOffNyInv.lo[t]$(tx0[t]) = -inf;
qOffNyInv.up[t]$(tx0[t]) = inf;
vOffAfskr.lo[i_,t]$(tx0[t]) = -inf;
vOffAfskr.up[i_,t]$(tx0[t]) = inf;
vOffLR.lo[t]$(tx0[t]) = -inf;
vOffLR.up[t]$(tx0[t]) = inf;
vI_s.lo[i_,s_,t]$(((tx0[t]) and (d1I_s[i_,s_,t] and not (k[i_] and sOff[s_]))) or ((tx0[t]) and (d1I_s[i_,s_,t] and sOff[s_]))) = -inf;
vI_s.up[i_,s_,t]$(((tx0[t]) and (d1I_s[i_,s_,t] and not (k[i_] and sOff[s_]))) or ((tx0[t]) and (d1I_s[i_,s_,t] and sOff[s_]))) = inf;
vOffDirInv.lo[t]$((tx0[t]) and (t.val > 1990)) = -inf;
vOffDirInv.up[t]$((tx0[t]) and (t.val > 1990)) = inf;
vOffIndirInv.lo[t]$(tx0[t]) = -inf;
vOffIndirInv.up[t]$(tx0[t]) = inf;
vOffNyInv.lo[t]$((tx0[t]) and (t.val > 1990)) = -inf;
vOffNyInv.up[t]$((tx0[t]) and (t.val > 1990)) = inf;
srvOffL2LR.lo[t]$(tx0[t]) = -inf;
srvOffL2LR.up[t]$(tx0[t]) = inf;
rOffK2Y.lo[k,t]$(tx0[t]) = -inf;
rOffK2Y.up[k,t]$(tx0[t]) = inf;
rvOffDirInv2BNP.lo[t]$(tx0[t]) = -inf;
rvOffDirInv2BNP.up[t]$(tx0[t]) = inf;
vAktie.lo[t]$(tx0[t]) = -inf;
vAktie.up[t]$(tx0[t]) = inf;
vAktiex.lo[s_,t]$(tx0[t]) = -inf;
vAktiex.up[s_,t]$(tx0[t]) = inf;
vAktieRes.lo[t]$(tx0[t]) = -inf;
vAktieRes.up[t]$(tx0[t]) = inf;
vEBT.lo[s_,t]$(tx0[t]) = -inf;
vEBT.up[s_,t]$(tx0[t]) = inf;
vEBTx.lo[s_,t]$(tx0[t]) = -inf;
vEBTx.up[s_,t]$(tx0[t]) = inf;
vEBITDA.lo[s_,t]$(tx0[t]) = -inf;
vEBITDA.up[s_,t]$(tx0[t]) = inf;
vFCF.lo[s_,t]$(tx0[t]) = -inf;
vFCF.up[s_,t]$(tx0[t]) = inf;
vVirkRenter.lo[t]$(tx0[t]) = -inf;
vVirkRenter.up[t]$(tx0[t]) = inf;
vVirkOmv.lo[t]$(tx0[t]) = -inf;
vVirkOmv.up[t]$(tx0[t]) = inf;
vVirkNFE.lo[t]$(tx0[t]) = -inf;
vVirkNFE.up[t]$(tx0[t]) = inf;
vKskat.lo[i_,s_,t]$((tx0[t]) and (t.val > 1994 and d1k[i_,s_,t])) = -inf;
vKskat.up[i_,s_,t]$((tx0[t]) and (t.val > 1994 and d1k[i_,s_,t])) = inf;
vAfskrFradrag.lo[s_,t]$(tx0[t]) = -inf;
vAfskrFradrag.up[s_,t]$(tx0[t]) = inf;
vDividender.lo[t]$((tx0[t]) and (t.val > 1994)) = -inf;
vDividender.up[t]$((tx0[t]) and (t.val > 1994)) = inf;
vUdstedelser.lo[t]$(tx0[t]) = -inf;
vUdstedelser.up[t]$(tx0[t]) = inf;
vVirkK.lo[s_,t]$(tx0[t]) = -inf;
vVirkK.up[s_,t]$(tx0[t]) = inf;
vVirk.lo[portf_,t]$((tx0[t]) and (not (t.val < 1994 and sameas['NetFin',portf_]))) = -inf;
vVirk.up[portf_,t]$((tx0[t]) and (not (t.val < 1994 and sameas['NetFin',portf_]))) = inf;
vVirkLaan.lo[s_,t]$(tx0[t]) = -inf;
vVirkLaan.up[s_,t]$(tx0[t]) = inf;
vVirkx.lo[t]$(tx0[t]) = -inf;
vVirkx.up[t]$(tx0[t]) = inf;
vPension.lo[akt,t]$((tx0[t]) and ((t.val > 2015) and not (sameas['Guld',akt] or sameas['Bank',akt]))) = -inf;
vPension.up[akt,t]$((tx0[t]) and ((t.val > 2015) and not (sameas['Guld',akt] or sameas['Bank',akt]))) = inf;
vtSelskabx.lo[s_,t]$(tx0[t]) = -inf;
vtSelskabx.up[s_,t]$(tx0[t]) = inf;
vVirkFinInd.lo[t]$(tx0[t]) = -inf;
vVirkFinInd.up[t]$(tx0[t]) = inf;
rVirkDisk.lo[sp,t]$(tx0[t]) = -inf;
rVirkDisk.up[sp,t]$(tx0[t]) = inf;
rAfkastKrav.lo[s_,t]$(tx0[t]) = -inf;
rAfkastKrav.up[s_,t]$(tx0[t]) = inf;
rVirkxAfk.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
rVirkxAfk.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
rRente.lo[portf,t]$((tx0[t]) and (sameas[portf,'Pens'] or sameas[portf,'RealKred'] or sameas[portf,'Bank'] or sameas[portf,'BankGaeld'])) = -inf;
rRente.up[portf,t]$((tx0[t]) and (sameas[portf,'Pens'] or sameas[portf,'RealKred'] or sameas[portf,'Bank'] or sameas[portf,'BankGaeld'])) = inf;
rOmv.lo[portf,t]$((tx0[t]) and ((sameas[portf,'IndlAktier'] and t.val > 1995) or sameas[portf,'UdlAktier'] or sameas[portf,'Pens'])) = -inf;
rOmv.up[portf,t]$((tx0[t]) and ((sameas[portf,'IndlAktier'] and t.val > 1995) or sameas[portf,'UdlAktier'] or sameas[portf,'Pens'])) = inf;
rLaan2K.lo[t]$(tx0[t]) = -inf;
rLaan2K.up[t]$(tx0[t]) = inf;
rIndlAktiePrem.lo[s_,t]$((tx0[t]) and (sTot[s_])) = -inf;
rIndlAktiePrem.up[s_,t]$((tx0[t]) and (sTot[s_])) = inf;
rFinAccelPrem.lo[sp,t]$(tx0[t]) = -inf;
rFinAccelPrem.up[sp,t]$(tx0[t]) = inf;
vFCFxRef.lo[sp,t]$(tx0[t]) = -inf;
vFCFxRef.up[sp,t]$(tx0[t]) = inf;
EpC.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
EpC.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
pBolig.lo[t]$(tx0[t]) = -inf;
pBolig.up[t]$(tx0[t]) = inf;
pLand.lo[t]$(tx0[t]) = -inf;
pLand.up[t]$(tx0[t]) = inf;
pC.lo[c_,t]$(((tx0[t]) and (c[c_] or cTot[c_])) or ((tx0[t]) and (cNest[c_] and not cTot[c_]))) = -inf;
pC.up[c_,t]$(((tx0[t]) and (c[c_] or cTot[c_])) or ((tx0[t]) and (cNest[c_] and not cTot[c_]))) = inf;
EpBolig.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
EpBolig.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
EpLand.lo[t]$((tx0[t]) and (t.val>2015)) = -inf;
EpLand.up[t]$((tx0[t]) and (t.val>2015)) = inf;
pBoligUC.lo[a,t]$((tx0[t]) and (t.val > 2015)) = -inf;
pBoligUC.up[a,t]$((tx0[t]) and (t.val > 2015)) = inf;
qC.lo[c_,t]$(((tx0[t]) and ((sameas[c_,'cBol']) or (cTot[c_]))) or ((tx0[t]) and ((not cTot[c_]) and not (sameas[c_,'cBol'])))) = -inf;
qC.up[c_,t]$(((tx0[t]) and ((sameas[c_,'cBol']) or (cTot[c_]))) or ((tx0[t]) and ((not cTot[c_]) and not (sameas[c_,'cBol'])))) = inf;
qC_a.lo[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = -inf;
qC_a.up[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = inf;
qCR.lo[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
qCR.up[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
qCHtM.lo[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
qCHtM.up[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
qCRxRef.lo[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = -inf;
qCRxRef.up[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = inf;
qCHtMxRef.lo[a_,t]$((tx0[t]) and (a18t100[a_] and t.val > 2015)) = -inf;
qCHtMxRef.up[a_,t]$((tx0[t]) and (a18t100[a_] and t.val > 2015)) = inf;
qBiler.lo[t]$(tx0[t]) = -inf;
qBiler.up[t]$(tx0[t]) = inf;
qBoligHtM.lo[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
qBoligHtM.up[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
qBoligHtMxRef.lo[a_,t]$((tx0[t]) and (a18t100[a_] and t.val > 2015)) = -inf;
qBoligHtMxRef.up[a_,t]$((tx0[t]) and (a18t100[a_] and t.val > 2015)) = inf;
qBoligR.lo[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
qBoligR.up[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
qBolig.lo[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
qBolig.up[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
qBoligRxRef.lo[a_,t]$((tx0[t]) and (a18t100[a_] and t.val > 2015)) = -inf;
qBoligRxRef.up[a_,t]$((tx0[t]) and (a18t100[a_] and t.val > 2015)) = inf;
qYBolig.lo[t]$(tx0[t]) = -inf;
qYBolig.up[t]$(tx0[t]) = inf;
qIBoligInstOmk.lo[t]$(tx0[t]) = -inf;
qIBoligInstOmk.up[t]$(tx0[t]) = inf;
qLandSalg.lo[t]$(tx0[t]) = -inf;
qLandSalg.up[t]$(tx0[t]) = inf;
qKBolig.lo[t]$(tx0[t]) = -inf;
qKBolig.up[t]$(tx0[t]) = inf;
qIBolig.lo[t]$(tx0[t]) = -inf;
qIBolig.up[t]$(tx0[t]) = inf;
qNytte.lo[a,t]$((tx0[t]) and (t.val > 2015)) = -inf;
qNytte.up[a,t]$((tx0[t]) and (t.val > 2015)) = inf;
qArvBase.lo[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = -inf;
qArvBase.up[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = inf;
qFormueBase.lo[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = -inf;
qFormueBase.up[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = inf;
vC_a.lo[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = -inf;
vC_a.up[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = inf;
vHhx.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhx.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vCLejeBolig.lo[a_,t]$((tx0[t]) and (a18t100[a_] or aTot[a_])) = -inf;
vCLejeBolig.up[a_,t]$((tx0[t]) and (a18t100[a_] or aTot[a_])) = inf;
vArvGivet.lo[a,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vArvGivet.up[a,t]$((tx0[t]) and (t.val > 2015)) = inf;
vArv.lo[a_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vArv.up[a_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vtArv.lo[a_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vtArv.up[a_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vtHhx.lo[a_,t]$((tx0[t]) and ((a0t100[a_] and t.val > 2015) or aTot[a_])) = -inf;
vtHhx.up[a_,t]$((tx0[t]) and ((a0t100[a_] and t.val > 2015) or aTot[a_])) = inf;
vBoligUdgift.lo[a_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vBoligUdgift.up[a_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vBoligUdgiftHtM.lo[a_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vBoligUdgiftHtM.up[a_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vBoligUdgiftArv.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vBoligUdgiftArv.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vHhNFErest.lo[a_,t]$((tx0[t]) and (a0t100[a_] or (aTot[a_] and t.val > 2015))) = -inf;
vHhNFErest.up[a_,t]$((tx0[t]) and (a0t100[a_] or (aTot[a_] and t.val > 2015))) = inf;
jvHhNFErest.lo[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = -inf;
jvHhNFErest.up[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = inf;
vBoernFraHh.lo[a,t]$((tx0[t]) and (a0t17[a] and t.val > 2015)) = -inf;
vBoernFraHh.up[a,t]$((tx0[t]) and (a0t17[a] and t.val > 2015)) = inf;
vHhTilBoern.lo[a_,t]$((tx0[t]) and ((aTot[a_] or a18t100[a_]) and t.val > 2015)) = -inf;
vHhTilBoern.up[a_,t]$((tx0[t]) and ((aTot[a_] or a18t100[a_]) and t.val > 2015)) = inf;
vBolig.lo[a_,t]$((tx0[t]) and ((a18t100[a_] or atot[a_]) and t.val > 2015)) = -inf;
vBolig.up[a_,t]$((tx0[t]) and ((a18t100[a_] or atot[a_]) and t.val > 2015)) = inf;
vBoligHtM.lo[a_,t]$((tx0[t]) and (a18t100[a_] or atot[a_])) = -inf;
vBoligHtM.up[a_,t]$((tx0[t]) and (a18t100[a_] or atot[a_])) = inf;
vKBolig.lo[t]$(tx0[t]) = -inf;
vKBolig.up[t]$(tx0[t]) = inf;
vIBolig.lo[t]$(tx0[t]) = -inf;
vIBolig.up[t]$(tx0[t]) = inf;
vHhInvestx.lo[a_,t]$((tx0[t]) and (atot[a_])) = -inf;
vHhInvestx.up[a_,t]$((tx0[t]) and (atot[a_])) = inf;
vSelvstKapInd.lo[a_,t]$((tx0[t]) and (atot[a_])) = -inf;
vSelvstKapInd.up[a_,t]$((tx0[t]) and (atot[a_])) = inf;
vArvKorrektion.lo[a_,t]$((tx0[t]) and ((tx0[t] and t.val > 2015) and (a0t100[a_] or aTot[a_]))) = -inf;
vArvKorrektion.up[a_,t]$((tx0[t]) and ((tx0[t] and t.val > 2015) and (a0t100[a_] or aTot[a_]))) = inf;
rDisk.lo[a,t]$((tx0[t]) and (t.val > 2015)) = -inf;
rDisk.up[a,t]$((tx0[t]) and (t.val > 2015)) = inf;
rKLeje2Bolig.lo[t]$(tx0[t]) = -inf;
rKLeje2Bolig.up[t]$(tx0[t]) = inf;
rvCLejeBolig.lo[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = -inf;
rvCLejeBolig.up[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = inf;
fHh.lo[a,t]$((tx0[t]) and (t.val > 2015)) = -inf;
fHh.up[a,t]$((tx0[t]) and (t.val > 2015)) = inf;
uBolig.lo[a,t]$((tx0[t]) and (t.val > 2015)) = -inf;
uBolig.up[a,t]$((tx0[t]) and (t.val > 2015)) = inf;
uBoligHtM.lo[a,t]$((tx0[t]) and (t.val > 2015)) = -inf;
uBoligHtM.up[a,t]$((tx0[t]) and (t.val > 2015)) = inf;
fBoligUdgift.lo[a,t]$((tx0[t]) and (a.val >= 18 and t.val > 2015)) = -inf;
fBoligUdgift.up[a,t]$((tx0[t]) and (a.val >= 18 and t.val > 2015)) = inf;
mUBolig.lo[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = -inf;
mUBolig.up[a,t]$((tx0[t]) and (a18t100[a] and t.val > 2015)) = inf;
dqIBoligInstOmk.lo[t]$(tx0[t]) = -inf;
dqIBoligInstOmk.up[t]$(tx0[t]) = inf;
mUC.lo[a,t]$((tx0[t]) and (t.val > 2015)) = -inf;
mUC.up[a,t]$((tx0[t]) and (t.val > 2015)) = inf;
EmUC.lo[a,t]$((tx0[t]) and (t.val > 2015)) = -inf;
EmUC.up[a,t]$((tx0[t]) and (t.val > 2015)) = inf;
uC.lo[c_,t]$(tx0[t]) = -inf;
uC.up[c_,t]$(tx0[t]) = inf;
fMigration.lo[a_,t]$((tx0[t]) and (t.val > 2015 or (atot[a_] and t.val > 1991))) = -inf;
fMigration.up[a_,t]$((tx0[t]) and (t.val > 2015 or (atot[a_] and t.val > 1991))) = inf;
uBoernFraHh.lo[a,t]$((tx0[t]) and (a0t17[a] and t.val > 2015)) = -inf;
uBoernFraHh.up[a,t]$((tx0[t]) and (a0t17[a] and t.val > 2015)) = inf;
dArv.lo[a_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
dArv.up[a_,t]$((tx0[t]) and (t.val > 2015)) = inf;
dFormue.lo[a_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
dFormue.up[a_,t]$((tx0[t]) and (t.val > 2015)) = inf;
jvHhx.lo[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = -inf;
jvHhx.up[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = inf;
vPrimSaldo.lo[t]$(tx0[t]) = -inf;
vPrimSaldo.up[t]$(tx0[t]) = inf;
vSaldo.lo[t]$(tx0[t]) = -inf;
vSaldo.up[t]$(tx0[t]) = inf;
vOff.lo[portf_,t]$((tx0[t]) and ((t.val > 1994 or (sameas['netfin', portf_] and tx0[t])) and not (sameas['Guld',portf_] or sameas['BankGaeld',portf_] or sameas['Pens',portf_]))) = -inf;
vOff.up[portf_,t]$((tx0[t]) and ((t.val > 1994 or (sameas['netfin', portf_] and tx0[t])) and not (sameas['Guld',portf_] or sameas['BankGaeld',portf_] or sameas['Pens',portf_]))) = inf;
vOffOmv.lo[t]$(tx0[t]) = -inf;
vOffOmv.up[t]$(tx0[t]) = inf;
vOffNetRenter.lo[t]$(tx0[t]) = -inf;
vOffNetRenter.up[t]$(tx0[t]) = inf;
vNROffNetRenter.lo[t]$(tx0[t]) = -inf;
vNROffNetRenter.up[t]$(tx0[t]) = inf;
vOffRenteInd.lo[t]$((tx0[t]) and (t.val > 1995)) = -inf;
vOffRenteInd.up[t]$((tx0[t]) and (t.val > 1995)) = inf;
vOffRenteUd.lo[t]$((tx0[t]) and (t.val > 1995)) = -inf;
vOffRenteUd.up[t]$((tx0[t]) and (t.val > 1995)) = inf;
vOffNetFormue.lo[t]$(tx0[t]) = -inf;
vOffNetFormue.up[t]$(tx0[t]) = inf;
vOffPas.lo[t]$(tx0[t]) = -inf;
vOffPas.up[t]$(tx0[t]) = inf;
vOffY2C.lo[t]$(tx0[t]) = -inf;
vOffY2C.up[t]$(tx0[t]) = inf;
vSatsIndeks.lo[t]$(tx0[t]) = -inf;
vSatsIndeks.up[t]$(tx0[t]) = inf;
rOffRenteUd.lo[t]$((tx0[t]) and (t.val > 1995)) = -inf;
rOffRenteUd.up[t]$((tx0[t]) and (t.val > 1995)) = inf;
nvBNP.lo[t]$(tx0[t]) = -inf;
nvBNP.up[t]$(tx0[t]) = inf;
nvPrimSaldo.lo[t]$(tx0[t]) = -inf;
nvPrimSaldo.up[t]$(tx0[t]) = inf;
nvtLukning.lo[t]$(tx0[t]) = -inf;
nvtLukning.up[t]$(tx0[t]) = inf;
nvGLukning.lo[t]$(tx0[t]) = -inf;
nvGLukning.up[t]$(tx0[t]) = inf;
rHBI.lo[t]$(tx0[t]) = -inf;
rHBI.up[t]$(tx0[t]) = inf;
fHBIDisk.lo[t]$(tx0[t]) = -inf;
fHBIDisk.up[t]$(tx0[t]) = inf;
rOffRenteInd.lo[t]$((tx0[t]) and (t.val > 1995)) = -inf;
rOffRenteInd.up[t]$((tx0[t]) and (t.val > 1995)) = inf;
rOffAkt2BNP.lo[t]$(tx0[t]) = -inf;
rOffAkt2BNP.up[t]$(tx0[t]) = inf;
vOffPrimInd.lo[t]$(tx0[t]) = -inf;
vOffPrimInd.up[t]$(tx0[t]) = inf;
vtY.lo[t]$(tx0[t]) = -inf;
vtY.up[t]$(tx0[t]) = inf;
vtYRest.lo[t]$(tx0[t]) = -inf;
vtYRest.up[t]$(tx0[t]) = inf;
vtDirekte.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vtDirekte.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vtKilde.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vtKilde.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vtBund.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vtBund.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vtTop.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vtTop.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vtKommune.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vtKommune.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vtEjd.lo[a_,t]$((tx0[t]) and ((aVal[a_] >= 18 or aTot[a_]) and t.val > 2015)) = -inf;
vtEjd.up[a_,t]$((tx0[t]) and ((aVal[a_] >= 18 or aTot[a_]) and t.val > 2015)) = inf;
vtAktie.lo[a_,t]$((tx0[t]) and ((a0t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vtAktie.up[a_,t]$((tx0[t]) and ((a0t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vtVirksomhed.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vtVirksomhed.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vtDoedsbo.lo[a_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vtDoedsbo.up[a_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vtHhAM.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vtHhAM.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vtPersRest.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vtPersRest.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vtKapPens.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vtKapPens.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vtKapPensArv.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vtKapPensArv.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vtSelskab.lo[s_,t]$(tx0[t]) = -inf;
vtSelskab.up[s_,t]$(tx0[t]) = inf;
vtSelskabRest.lo[s_,t]$(tx0[t]) = -inf;
vtSelskabRest.up[s_,t]$(tx0[t]) = inf;
vtSelskabNord.lo[t]$(tx0[t]) = -inf;
vtSelskabNord.up[t]$(tx0[t]) = inf;
vtPAL.lo[t]$(tx0[t]) = -inf;
vtPAL.up[t]$(tx0[t]) = inf;
vtMedie.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vtMedie.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vtHhVaegt.lo[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vtHhVaegt.up[a_,t]$((tx0[t]) and ((a18t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vtAfgEU.lo[t]$(tx0[t]) = -inf;
vtAfgEU.up[t]$(tx0[t]) = inf;
vtLukning.lo[a_,t]$((tx0[t]) and (a0t100[a_] and t.val > 2015)) = -inf;
vtLukning.up[a_,t]$((tx0[t]) and (a0t100[a_] and t.val > 2015)) = inf;
vtIndirekte.lo[t]$(tx0[t]) = -inf;
vtIndirekte.up[t]$(tx0[t]) = inf;
vtEU.lo[t]$(tx0[t]) = -inf;
vtEU.up[t]$(tx0[t]) = inf;
vBidrag.lo[a_,t]$((tx0[t]) and ((a15t100[a_] and t.val > 2015) or aTot[a_])) = -inf;
vBidrag.up[a_,t]$((tx0[t]) and ((a15t100[a_] and t.val > 2015) or aTot[a_])) = inf;
vBidragAK.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vBidragAK.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vBidragEL.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vBidragEL.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vBidragFri.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vBidragFri.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vBidragObl.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vBidragObl.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vBidragOblTjm.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vBidragOblTjm.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vBidragATP.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vBidragATP.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vBidragOblRest.lo[t]$((tx0[t]) and (t.val > 2000)) = -inf;
vBidragOblRest.up[t]$((tx0[t]) and (t.val > 2000)) = inf;
vBidragTjmp.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vBidragTjmp.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vOffIndRest.lo[t]$(tx0[t]) = -inf;
vOffIndRest.up[t]$(tx0[t]) = inf;
vtKirke.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vtKirke.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vJordrente.lo[t]$(tx0[t]) = -inf;
vJordrente.up[t]$(tx0[t]) = inf;
vPersInd.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vPersInd.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vPersIndRest.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vPersIndRest.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vSkatteplInd.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vSkatteplInd.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vNetKapIndPos.lo[a_,t]$((tx0[t]) and ((a15t100[a_] and t.val > 2015 ) or aTot[a_])) = -inf;
vNetKapIndPos.up[a_,t]$((tx0[t]) and ((a15t100[a_] and t.val > 2015 ) or aTot[a_])) = inf;
vNetKapInd.lo[a_,t]$((tx0[t]) and ((a15t100[a_] and t.val > 2015 ) or aTot[a_])) = -inf;
vNetKapInd.up[a_,t]$((tx0[t]) and ((a15t100[a_] and t.val > 2015 ) or aTot[a_])) = inf;
vKapIndPos.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vKapIndPos.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vKapIndNeg.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vKapIndNeg.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vPersFradrag.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vPersFradrag.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vAKFradrag.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vAKFradrag.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vELFradrag.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vELFradrag.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vRestFradrag.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vRestFradrag.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vBeskFradrag.lo[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = -inf;
vBeskFradrag.up[a_,t]$((tx0[t]) and ((a15t100[a_] or aTot[a_]) and t.val > 2015)) = inf;
vRealiseretAktieOmv.lo[a_,t]$((tx0[t]) and ((a0t100[a_] and t.val > 2015) or atot[a_])) = -inf;
vRealiseretAktieOmv.up[a_,t]$((tx0[t]) and ((a0t100[a_] and t.val > 2015) or atot[a_])) = inf;
vUrealiseretAktieOmv.lo[t]$(tx0[t]) = -inf;
vUrealiseretAktieOmv.up[t]$(tx0[t]) = inf;
ftBund.lo[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = -inf;
ftBund.up[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = inf;
rTopSkatInd.lo[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = -inf;
rTopSkatInd.up[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = inf;
ftKommune.lo[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = -inf;
ftKommune.up[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = inf;
fvtEjd.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
fvtEjd.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
fvtAktie.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
fvtAktie.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
fvtDoedsbo.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
fvtDoedsbo.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
jvKapIndPos.lo[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = -inf;
jvKapIndPos.up[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = inf;
jvKapIndneg.lo[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = -inf;
jvKapIndneg.up[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = inf;
uvPersFradrag.lo[a_,t]$((tx0[t]) and (aTot[a_])) = -inf;
uvPersFradrag.up[a_,t]$((tx0[t]) and (aTot[a_])) = inf;
rOffFraUdl2BNP.lo[t]$(tx0[t]) = -inf;
rOffFraUdl2BNP.up[t]$(tx0[t]) = inf;
rOffFraHh2BNP.lo[t]$(tx0[t]) = -inf;
rOffFraHh2BNP.up[t]$(tx0[t]) = inf;
rOffFraVirk2BNP.lo[t]$(tx0[t]) = -inf;
rOffFraVirk2BNP.up[t]$(tx0[t]) = inf;
rOffVirk2BNP.lo[t]$(tx0[t]) = -inf;
rOffVirk2BNP.up[t]$(tx0[t]) = inf;
rPersIndRest_a2PersInd.lo[a,t]$(tx0[t]) = -inf;
rPersIndRest_a2PersInd.up[a,t]$(tx0[t]) = inf;
rPersIndRest_t2PersInd.lo[t]$(tx0[t]) = -inf;
rPersIndRest_t2PersInd.up[t]$(tx0[t]) = inf;
rRestFradragSats2SatsIndeks.lo[t]$(tx0[t]) = -inf;
rRestFradragSats2SatsIndeks.up[t]$(tx0[t]) = inf;
mtVirk.lo[s_,t]$((tx0[t]) and (sp[s_])) = -inf;
mtVirk.up[s_,t]$((tx0[t]) and (sp[s_])) = inf;
tLukning.lo[t]$(tx0[t]) = -inf;
tLukning.up[t]$(tx0[t]) = inf;
pGxAfskr.lo[t]$(tx0[t]) = -inf;
pGxAfskr.up[t]$(tx0[t]) = inf;
qGxAfskr.lo[t]$(tx0[t]) = -inf;
qGxAfskr.up[t]$(tx0[t]) = inf;
qG.lo[g_,t]$((tx0[t]) and (g[g_])) = -inf;
qG.up[g_,t]$((tx0[t]) and (g[g_])) = inf;
vGxAfskr.lo[t]$(tx0[t]) = -inf;
vGxAfskr.up[t]$(tx0[t]) = inf;
vOffPrimUd.lo[t]$(tx0[t]) = -inf;
vOffPrimUd.up[t]$(tx0[t]) = inf;
vOffInv.lo[t]$(tx0[t]) = -inf;
vOffInv.up[t]$(tx0[t]) = inf;
vOffSub.lo[t]$(tx0[t]) = -inf;
vOffSub.up[t]$(tx0[t]) = inf;
vSubY.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vSubY.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vSubYRes.lo[t]$(tx0[t]) = -inf;
vSubYRes.up[t]$(tx0[t]) = inf;
vOffUdRest.lo[t]$(tx0[t]) = -inf;
vOffUdRest.up[t]$(tx0[t]) = inf;
vOffTilHh.lo[t]$(tx0[t]) = -inf;
vOffTilHh.up[t]$(tx0[t]) = inf;
vOvf.lo[ovf_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vOvf.up[ovf_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vHhOvf.lo[a,t]$((tx0[t]) and (a15t100[a] and t.val > 2015)) = -inf;
vHhOvf.up[a,t]$((tx0[t]) and (a15t100[a] and t.val > 2015)) = inf;
vOvfSkatPl.lo[a_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vOvfSkatPl.up[a_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vOvfSats.lo[ovf,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vOvfSats.up[ovf,t]$((tx0[t]) and (t.val > 2015)) = inf;
vOvfUbeskat.lo[a_,t]$((tx0[t]) and ((a0t100[a_] and t.val > 2015) or (sameas['tot',a_] and t.val > 2000))) = -inf;
vOvfUbeskat.up[a_,t]$((tx0[t]) and ((a0t100[a_] and t.val > 2015) or (sameas['tot',a_] and t.val > 2000))) = inf;
vGLukning.lo[t]$(tx0[t]) = -inf;
vGLukning.up[t]$(tx0[t]) = inf;
uvGxAfskr.lo[t]$(tx0[t]) = -inf;
uvGxAfskr.up[t]$(tx0[t]) = inf;
nOvf.lo[ovf,t]$(tx0[t]) = -inf;
nOvf.up[ovf,t]$(tx0[t]) = inf;
fHhOvf.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
fHhOvf.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
dnOvf2dBesk.lo[ovf,t]$(tx0[t]) = -inf;
dnOvf2dBesk.up[ovf,t]$(tx0[t]) = inf;
dnOvf2dPop.lo[ovf,t]$((tx0[t]) and (t.val > 1990)) = -inf;
dnOvf2dPop.up[ovf,t]$((tx0[t]) and (t.val > 1990)) = inf;
dvOvf2dBesk.lo[ovf_,t]$((tx0[t]) and (ovf[ovf_] or sameas['hh',ovf_])) = -inf;
dvOvf2dBesk.up[ovf_,t]$((tx0[t]) and (ovf[ovf_] or sameas['hh',ovf_])) = inf;
dvOvf2dPop.lo[ovf_,t]$((tx0[t]) and (ovf[ovf_] or sameas['hh',ovf_])) = -inf;
dvOvf2dPop.up[ovf_,t]$((tx0[t]) and (ovf[ovf_] or sameas['hh',ovf_])) = inf;
rOffLandKoeb2BNP.lo[t]$(tx0[t]) = -inf;
rOffLandKoeb2BNP.up[t]$(tx0[t]) = inf;
rOffTilUdl2BNP.lo[t]$(tx0[t]) = -inf;
rOffTilUdl2BNP.up[t]$(tx0[t]) = inf;
rOffTilVirk2BNP.lo[t]$(tx0[t]) = -inf;
rOffTilVirk2BNP.up[t]$(tx0[t]) = inf;
rOffTilHhKap2BNP.lo[t]$(tx0[t]) = -inf;
rOffTilHhKap2BNP.up[t]$(tx0[t]) = inf;
rOffTilHhOev2BNP.lo[t]$(tx0[t]) = -inf;
rOffTilHhOev2BNP.up[t]$(tx0[t]) = inf;
rSubEU2BNP.lo[t]$(tx0[t]) = -inf;
rSubEU2BNP.up[t]$(tx0[t]) = inf;
vtMoms.lo[d_,s_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vtMoms.up[d_,s_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vtNetAfg.lo[d_,s_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vtNetAfg.up[d_,s_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vtAfg.lo[d_,s_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vtAfg.up[d_,s_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vtReg.lo[d_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vtReg.up[d_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vPunktSub.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
vPunktSub.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
vtTold.lo[d_,s_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vtTold.up[d_,s_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vtGrund.lo[s_,t]$((tx0[t]) and (d1K['iB',s_,t])) = -inf;
vtGrund.up[s_,t]$((tx0[t]) and (d1K['iB',s_,t])) = inf;
vtVirkVaegt.lo[s_,t]$((tx0[t]) and (d1K['iM',s_,t])) = -inf;
vtVirkVaegt.up[s_,t]$((tx0[t]) and (d1K['iM',s_,t])) = inf;
vtVirkAM.lo[s_,t]$(tx0[t]) = -inf;
vtVirkAM.up[s_,t]$(tx0[t]) = inf;
vtAUB.lo[s_,t]$(tx0[t]) = -inf;
vtAUB.up[s_,t]$(tx0[t]) = inf;
vtSubLoen.lo[s_,t]$(tx0[t]) = -inf;
vtSubLoen.up[s_,t]$(tx0[t]) = inf;
vtNetLoenAfg.lo[s_,t]$(tx0[t]) = -inf;
vtNetLoenAfg.up[s_,t]$(tx0[t]) = inf;
vtNetYAfg.lo[s_,t]$(tx0[t]) = -inf;
vtNetYAfg.up[s_,t]$(tx0[t]) = inf;
vtNetYAfgRest.lo[s_,t]$((tx0[t]) and (t.val > 2015 or sTot[s_])) = -inf;
vtNetYAfgRest.up[s_,t]$((tx0[t]) and (t.val > 2015 or sTot[s_])) = inf;
tNetAfg_y.lo[d_,s,t]$((tx0[t]) and (d1IOy[d_,s,t] and t.val > 2015)) = -inf;
tNetAfg_y.up[d_,s,t]$((tx0[t]) and (d1IOy[d_,s,t] and t.val > 2015)) = inf;
tNetAfg_m.lo[d_,s,t]$((tx0[t]) and (d1IOm[d_,s,t] and t.val > 2015)) = -inf;
tNetAfg_m.up[d_,s,t]$((tx0[t]) and (d1IOm[d_,s,t] and t.val > 2015)) = inf;
tL.lo[s_,t]$((tx0[t]) and (t.val > 2015 or s[s_])) = -inf;
tL.up[s_,t]$((tx0[t]) and (t.val > 2015 or s[s_])) = inf;
tIOy.lo[d_,s,t]$((tx0[t]) and (d1IOy[d_,s,t])) = -inf;
tIOy.up[d_,s,t]$((tx0[t]) and (d1IOy[d_,s,t])) = inf;
tIOm.lo[d_,s,t]$((tx0[t]) and (d1IOm[d_,s,t])) = -inf;
tIOm.up[d_,s,t]$((tx0[t]) and (d1IOm[d_,s,t])) = inf;
vVirkBVT5aarSnit.lo[t]$(tx0[t]) = -inf;
vVirkBVT5aarSnit.up[t]$(tx0[t]) = inf;
vBVT2hL.lo[t]$(tx0[t]) = -inf;
vBVT2hL.up[t]$(tx0[t]) = inf;
vBVT2hLsnit.lo[t]$(tx0[t]) = -inf;
vBVT2hLsnit.up[t]$(tx0[t]) = inf;
qBVT2hL.lo[t]$(tx0[t]) = -inf;
qBVT2hL.up[t]$(tx0[t]) = inf;
qBVT2hLsnit.lo[t]$(tx0[t]) = -inf;
qBVT2hLsnit.up[t]$(tx0[t]) = inf;
vBFI.lo[t]$(tx0[t]) = -inf;
vBFI.up[t]$(tx0[t]) = inf;
vUdl.lo[portf_,t]$((tx0[t]) and ((t.val > 1992) and not (sameas['BankGaeld',portf_] or sameas['Guld',portf_]))) = -inf;
vUdl.up[portf_,t]$((tx0[t]) and ((t.val > 1992) and not (sameas['BankGaeld',portf_] or sameas['Guld',portf_]))) = inf;
vUdlRenter.lo[t]$((tx0[t]) and (t.val > 1992)) = -inf;
vUdlRenter.up[t]$((tx0[t]) and (t.val > 1992)) = inf;
vUdlOmv.lo[t]$((tx0[t]) and (t.val > 1992)) = -inf;
vUdlOmv.up[t]$((tx0[t]) and (t.val > 1992)) = inf;
vUdlNFE.lo[t]$((tx0[t]) and (t.val > 1992)) = -inf;
vUdlNFE.up[t]$((tx0[t]) and (t.val > 1992)) = inf;
rArbProd.lo[t]$(tx0[t]) = -inf;
rArbProd.up[t]$(tx0[t]) = inf;
rBVTGab.lo[t]$(tx0[t]) = -inf;
rBVTGab.up[t]$(tx0[t]) = inf;
rBeskGab.lo[t]$(tx0[t]) = -inf;
rBeskGab.up[t]$(tx0[t]) = inf;
pCInflSnit.lo[t]$(tx0[t]) = -inf;
pCInflSnit.up[t]$(tx0[t]) = inf;
pBNP.lo[t]$(tx0[t]) = -inf;
pBNP.up[t]$(tx0[t]) = inf;
pBVT.lo[s_,t]$(tx0[t]) = -inf;
pBVT.up[s_,t]$(tx0[t]) = inf;
pIO.lo[d_,s,t]$((tx0[t]) and (d1IO[d_,s,t] and dux_[d_])) = -inf;
pIO.up[d_,s,t]$((tx0[t]) and (d1IO[d_,s,t] and dux_[d_])) = inf;
pIOy.lo[d_,s,t]$((tx0[t]) and (d1IOy[d_,s,t])) = -inf;
pIOy.up[d_,s,t]$((tx0[t]) and (d1IOy[d_,s,t])) = inf;
pIOm.lo[d_,s,t]$((tx0[t]) and (d1IOm[d_,s,t])) = -inf;
pIOm.up[d_,s,t]$((tx0[t]) and (d1IOm[d_,s,t])) = inf;
pX.lo[x_,t]$(tx0[t]) = -inf;
pX.up[x_,t]$(tx0[t]) = inf;
pXm.lo[x,t]$((tx0[t]) and (d1Xm[x,t])) = -inf;
pXm.up[x,t]$((tx0[t]) and (d1Xm[x,t])) = inf;
pXy.lo[x,t]$(tx0[t]) = -inf;
pXy.up[x,t]$(tx0[t]) = inf;
pR.lo[r_,t]$(tx0[t]) = -inf;
pR.up[r_,t]$(tx0[t]) = inf;
pCDK.lo[c_,t]$(tx0[t]) = -inf;
pCDK.up[c_,t]$(tx0[t]) = inf;
pCTurist.lo[c,t]$((tx0[t]) and (d1CTurist[c,t])) = -inf;
pCTurist.up[c,t]$((tx0[t]) and (d1CTurist[c,t])) = inf;
pG.lo[g_,t]$(tx0[t]) = -inf;
pG.up[g_,t]$(tx0[t]) = inf;
pI.lo[i_,t]$(tx0[t]) = -inf;
pI.up[i_,t]$(tx0[t]) = inf;
pI_s.lo[i_,s_,t]$((tx0[t]) and (d1I_s[i_,s_,t])) = -inf;
pI_s.up[i_,s_,t]$((tx0[t]) and (d1I_s[i_,s_,t])) = inf;
vY.lo[s_,t]$(tx0[t]) = -inf;
vY.up[s_,t]$(tx0[t]) = inf;
vM.lo[s_,t]$(tx0[t]) = -inf;
vM.up[s_,t]$(tx0[t]) = inf;
vBNP.lo[t]$(tx0[t]) = -inf;
vBNP.up[t]$(tx0[t]) = inf;
vBVT.lo[s_,t]$(tx0[t]) = -inf;
vBVT.up[s_,t]$(tx0[t]) = inf;
vIO.lo[d_,s_,t]$((tx0[t]) and (d1IO[d_,s_,t])) = -inf;
vIO.up[d_,s_,t]$((tx0[t]) and (d1IO[d_,s_,t])) = inf;
vIOy.lo[d_,s_,t]$((tx0[t]) and (d1IOy[d_,s_,t])) = -inf;
vIOy.up[d_,s_,t]$((tx0[t]) and (d1IOy[d_,s_,t])) = inf;
vIOm.lo[d_,s_,t]$((tx0[t]) and (d1IOm[d_,s_,t])) = -inf;
vIOm.up[d_,s_,t]$((tx0[t]) and (d1IOm[d_,s_,t])) = inf;
vX.lo[x_,t]$(tx0[t]) = -inf;
vX.up[x_,t]$(tx0[t]) = inf;
vXy.lo[x,t]$(tx0[t]) = -inf;
vXy.up[x,t]$(tx0[t]) = inf;
vR.lo[r_,t]$(tx0[t]) = -inf;
vR.up[r_,t]$(tx0[t]) = inf;
vC.lo[c_,t]$((tx0[t]) and (cTot[c_] or c[c_])) = -inf;
vC.up[c_,t]$((tx0[t]) and (cTot[c_] or c[c_])) = inf;
vCTurist.lo[c,t]$((tx0[t]) and (d1CTurist[c,t])) = -inf;
vCTurist.up[c,t]$((tx0[t]) and (d1CTurist[c,t])) = inf;
vG.lo[g_,t]$(tx0[t]) = -inf;
vG.up[g_,t]$(tx0[t]) = inf;
vI.lo[i_,t]$(tx0[t]) = -inf;
vI.up[i_,t]$(tx0[t]) = inf;
qM.lo[s_,t]$(tx0[t]) = -inf;
qM.up[s_,t]$(tx0[t]) = inf;
qBNP.lo[t]$(tx0[t]) = -inf;
qBNP.up[t]$(tx0[t]) = inf;
qBVT.lo[s_,t]$(tx0[t]) = -inf;
qBVT.up[s_,t]$(tx0[t]) = inf;
qIO.lo[d_,s_,t]$((tx0[t]) and (d1IO[d_,s_,t] and dux_[d_])) = -inf;
qIO.up[d_,s_,t]$((tx0[t]) and (d1IO[d_,s_,t] and dux_[d_])) = inf;
qIOy.lo[d_,s_,t]$((tx0[t]) and (d1IOy[d_,s_,t])) = -inf;
qIOy.up[d_,s_,t]$((tx0[t]) and (d1IOy[d_,s_,t])) = inf;
qIOm.lo[d_,s_,t]$((tx0[t]) and (d1IOm[d_,s_,t])) = -inf;
qIOm.up[d_,s_,t]$((tx0[t]) and (d1IOm[d_,s_,t])) = inf;
qCDK.lo[c,t]$(tx0[t]) = -inf;
qCDK.up[c,t]$(tx0[t]) = inf;
qI.lo[i_,t]$(tx0[t]) = -inf;
qI.up[i_,t]$(tx0[t]) = inf;
juIOm.lo[s,t]$((tx0[t]) and (sameas[s,'udv'])) = -inf;
juIOm.up[s,t]$((tx0[t]) and (sameas[s,'udv'])) = inf;
juIOXy.lo[s,t]$((tx0[t]) and (sameas[s,'udv'])) = -inf;
juIOXy.up[s,t]$((tx0[t]) and (sameas[s,'udv'])) = inf;
uIO.lo[d_,s,t]$(tx0[t]) = -inf;
uIO.up[d_,s,t]$(tx0[t]) = inf;
uIOy.lo[dux,s,t]$(tx0[t]) = -inf;
uIOy.up[dux,s,t]$(tx0[t]) = inf;
uIOm.lo[dux,s,t]$(tx0[t]) = -inf;
uIOm.up[dux,s,t]$(tx0[t]) = inf;
uIOXy.lo[x,s,t]$(tx0[t]) = -inf;
uIOXy.up[x,s,t]$(tx0[t]) = inf;
uIOXm.lo[x,s,t]$(tx0[t]) = -inf;
uIOXm.up[x,s,t]$(tx0[t]) = inf;
fpI_s.lo[i,t]$((tx0[t]) and (tForecast[t])) = -inf;
fpI_s.up[i,t]$((tx0[t]) and (tForecast[t])) = inf;
uIO0.lo[dux,s_,t]$((tx0[t]) and ((c_[dux] and sOff[s_] and d1IO[dux,s_,t]) or (i_[dux] and sOff[s_] and d1IO[dux,s_,t]))) = -inf;
uIO0.up[dux,s_,t]$((tx0[t]) and ((c_[dux] and sOff[s_] and d1IO[dux,s_,t]) or (i_[dux] and sOff[s_] and d1IO[dux,s_,t]))) = inf;
rpIOm2pIOy.lo[d_,s,t]$(tx0[t]) = -inf;
rpIOm2pIOy.up[d_,s,t]$(tx0[t]) = inf;
fqMKortsigt.lo[dux,s,t]$(tx0[t]) = -inf;
fqMKortsigt.up[dux,s,t]$(tx0[t]) = inf;
pBoligRigid.lo[a,t]$((tx0[t]) and (t.val > 2015)) = -inf;
pBoligRigid.up[a,t]$((tx0[t]) and (t.val > 2015)) = inf;
vtHh.lo[a_,t]$((tx0[t]) and (atot[a_])) = -inf;
vtHh.up[a_,t]$((tx0[t]) and (atot[a_])) = inf;
vDispInd.lo[t]$((tx0[t]) and (t.val > 1994)) = -inf;
vDispInd.up[t]$((tx0[t]) and (t.val > 1994)) = inf;
vHhInd.lo[a_,t]$((tx0[t]) and ((a0t100[a_] and t.val > 2015) or atot[a_])) = -inf;
vHhInd.up[a_,t]$((tx0[t]) and ((a0t100[a_] and t.val > 2015) or atot[a_])) = inf;
vHhxAfk.lo[a_,t]$((tx0[t]) and ((aVal[a_] > 0 and t.val > 2015) or (atot[a_] and t.val > 1994))) = -inf;
vHhxAfk.up[a_,t]$((tx0[t]) and ((aVal[a_] > 0 and t.val > 2015) or (atot[a_] and t.val > 1994))) = inf;
vHhFinAkt.lo[a_,t]$((tx0[t]) and (t.val > 2015 or atot[a_])) = -inf;
vHhFinAkt.up[a_,t]$((tx0[t]) and (t.val > 2015 or atot[a_])) = inf;
vHh.lo[portf_,a_,t]$((tx0[t]) and ((fin_akt[portf_] and t.val > 2015) or ((sameas[portf_, "BankGaeld"] and t.val > 2015 or (sameas[portf_,'BankGaeld'] and atot[a_]) ) or ((sameas[portf_, "pens"] and (a15t100[a_] or aTot[a_]) and t.val > 2015) or ((pens[portf_] and (a15t100[a_] or aTot[a_]) and t.val > 2015) or ((sameas[portf_, "RealKred"] and (a18t100[a_] or aTot[a_]) and t.val > 2015) or ((sameas[portf_, "NetFin"] and t.val > 2015) or (0)))))))) = -inf;
vHh.up[portf_,a_,t]$((tx0[t]) and ((fin_akt[portf_] and t.val > 2015) or ((sameas[portf_, "BankGaeld"] and t.val > 2015 or (sameas[portf_,'BankGaeld'] and atot[a_]) ) or ((sameas[portf_, "pens"] and (a15t100[a_] or aTot[a_]) and t.val > 2015) or ((pens[portf_] and (a15t100[a_] or aTot[a_]) and t.val > 2015) or ((sameas[portf_, "RealKred"] and (a18t100[a_] or aTot[a_]) and t.val > 2015) or ((sameas[portf_, "NetFin"] and t.val > 2015) or (0)))))))) = inf;
vHhRenter.lo[portf_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vHhRenter.up[portf_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vHhOmv.lo[portf_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vHhOmv.up[portf_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vHhPensAfk.lo[portf_,a_,t]$((tx0[t]) and ((pens[portf_] or sameas['Pens',portf_]) and (aVal[a_] >= 15 or atot[a_]) and t.val > 2015)) = -inf;
vHhPensAfk.up[portf_,a_,t]$((tx0[t]) and ((pens[portf_] or sameas['Pens',portf_]) and (aVal[a_] >= 15 or atot[a_]) and t.val > 2015)) = inf;
vHhNFE.lo[t]$(tx0[t]) = -inf;
vHhNFE.up[t]$(tx0[t]) = inf;
vPensIndb.lo[portf_,a_,t]$((tx0[t]) and (pens_[portf_] and (a15t100[a_] or atot[a_]) and t.val > 2015)) = -inf;
vPensIndb.up[portf_,a_,t]$((tx0[t]) and (pens_[portf_] and (a15t100[a_] or atot[a_]) and t.val > 2015)) = inf;
vPensUdb.lo[portf_,a_,t]$((tx0[t]) and (pens_[portf_] and (a15t100[a_] or atot[a_]) and t.val > 2015)) = -inf;
vPensUdb.up[portf_,a_,t]$((tx0[t]) and (pens_[portf_] and (a15t100[a_] or atot[a_]) and t.val > 2015)) = inf;
vPensArv.lo[portf_,a_,t]$((tx0[t]) and (pens_[portf_] and (aVal[a_] >= 15 or aTot[a_]) and t.val > 2015)) = -inf;
vPensArv.up[portf_,a_,t]$((tx0[t]) and (pens_[portf_] and (aVal[a_] >= 15 or aTot[a_]) and t.val > 2015)) = inf;
vNetIndPensUdb.lo[t]$(tx0[t]) = -inf;
vNetIndPensUdb.up[t]$(tx0[t]) = inf;
vNetKolPensUdb.lo[t]$(tx0[t]) = -inf;
vNetKolPensUdb.up[t]$(tx0[t]) = inf;
vKolPensRenter.lo[t]$(tx0[t]) = -inf;
vKolPensRenter.up[t]$(tx0[t]) = inf;
vLejeAfEjerBolig.lo[t]$(tx0[t]) = -inf;
vLejeAfEjerBolig.up[t]$(tx0[t]) = inf;
vHhFraVirkKap.lo[t]$(tx0[t]) = -inf;
vHhFraVirkKap.up[t]$(tx0[t]) = inf;
vHhFraVirkOev.lo[t]$(tx0[t]) = -inf;
vHhFraVirkOev.up[t]$(tx0[t]) = inf;
vHhFraVirk.lo[t]$(tx0[t]) = -inf;
vHhFraVirk.up[t]$(tx0[t]) = inf;
vHhTilUdl.lo[t]$(tx0[t]) = -inf;
vHhTilUdl.up[t]$(tx0[t]) = inf;
mrHhxAfk.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
mrHhxAfk.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
mrRealKredAfk.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
mrRealKredAfk.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
rRealKred2Bolig.lo[a_,t]$((tx0[t]) and ((atot[a_] or a18t100[a_]) and t.val > 2015)) = -inf;
rRealKred2Bolig.up[a_,t]$((tx0[t]) and ((atot[a_] or a18t100[a_]) and t.val > 2015)) = inf;
rPensIndb.lo[pens,a_,t]$((tx0[t]) and (atot[a_] and t.val > 2015)) = -inf;
rPensIndb.up[pens,a_,t]$((tx0[t]) and (atot[a_] and t.val > 2015)) = inf;
rPensUdb.lo[pens,a_,t]$((tx0[t]) and (atot[a_] and not (sameas['Alder',pens] and t.val < 2014) and t.val > 2015)) = -inf;
rPensUdb.up[pens,a_,t]$((tx0[t]) and (atot[a_] and not (sameas['Alder',pens] and t.val < 2014) and t.val > 2015)) = inf;
rBoligOmkRest.lo[t]$(tx0[t]) = -inf;
rBoligOmkRest.up[t]$(tx0[t]) = inf;
rHhAfk.lo[portf,t]$(tx0[t]) = -inf;
rHhAfk.up[portf,t]$(tx0[t]) = inf;
jvHhxAfk.lo[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = -inf;
jvHhxAfk.up[a_,t]$((tx0[t]) and (aTot[a_] and t.val > 2015)) = inf;
jvHhPensAfk.lo[portf_,a_,t]$((tx0[t]) and (((pens[portf_] and atot[a_]) or sameas['Pens',portf_]) and t.val > 2015)) = -inf;
jvHhPensAfk.up[portf_,a_,t]$((tx0[t]) and (((pens[portf_] and atot[a_]) or sameas['Pens',portf_]) and t.val > 2015)) = inf;
jvHh.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
jvHh.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
mtAktie.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
mtAktie.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
pKspBy.lo[t]$(tx0[t]) = -inf;
pKspBy.up[t]$(tx0[t]) = inf;
sqBVT.lo[t]$(tx0[t]) = -inf;
sqBVT.up[t]$(tx0[t]) = inf;
sdqLdnL.lo[s_,t]$(tx0[t]) = -inf;
sdqLdnL.up[s_,t]$(tx0[t]) = inf;
sdOpslagOmk2dnLLag.lo[t]$(tx0[t]) = -inf;
sdOpslagOmk2dnLLag.up[t]$(tx0[t]) = inf;
sqL.lo[s_,t]$((tx0[t]) and (spBy[s_] or spTot[s_])) = -inf;
sqL.up[s_,t]$((tx0[t]) and (spBy[s_] or spTot[s_])) = inf;
qKspBy.lo[t]$(tx0[t]) = -inf;
qKspBy.up[t]$(tx0[t]) = inf;
qLspBy.lo[t]$(tx0[t]) = -inf;
qLspBy.up[t]$(tx0[t]) = inf;
sqLspBy.lo[t]$(tx0[t]) = -inf;
sqLspBy.up[t]$(tx0[t]) = inf;
uY.lo[t]$(tx0[t]) = -inf;
uY.up[t]$(tx0[t]) = inf;
shL.lo[t]$(tx0[t]) = -inf;
shL.up[t]$(tx0[t]) = inf;
srL2nL.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
srL2nL.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
sfW.lo[s_,t]$(tx0[t]) = -inf;
sfW.up[s_,t]$(tx0[t]) = inf;
sdOpslagOmk2dnL.lo[t]$(tx0[t]) = -inf;
sdOpslagOmk2dnL.up[t]$(tx0[t]) = inf;
sfProdHh.lo[t]$(tx0[t]) = -inf;
sfProdHh.up[t]$(tx0[t]) = inf;
snSoegBaseHh.lo[a_,t]$((tx0[t]) and ((aTot[a_] or a15t100[a_]) and t.val > 2015)) = -inf;
snSoegBaseHh.up[a_,t]$((tx0[t]) and ((aTot[a_] or a15t100[a_]) and t.val > 2015)) = inf;
snLHh.lo[a_,t]$((tx0[t]) and (aTot[a_] or (a15t100[a_] and t.val > 2015))) = -inf;
snLHh.up[a_,t]$((tx0[t]) and (aTot[a_] or (a15t100[a_] and t.val > 2015))) = inf;
snSoegHh.lo[a_,t]$((tx0[t]) and (aTot[a_] or (a15t100[a_] and t.val > 2015))) = -inf;
snSoegHh.up[a_,t]$((tx0[t]) and (aTot[a_] or (a15t100[a_] and t.val > 2015))) = inf;
sfDeltag.lo[a,t]$((tx0[t]) and (a15t100[a] and t.val > 2015)) = -inf;
sfDeltag.up[a,t]$((tx0[t]) and (a15t100[a] and t.val > 2015)) = inf;
srJobFinding.lo[t]$(tx0[t]) = -inf;
srJobFinding.up[t]$(tx0[t]) = inf;
srMatch.lo[t]$(tx0[t]) = -inf;
srMatch.up[t]$(tx0[t]) = inf;
srOpslag2soeg.lo[t]$(tx0[t]) = -inf;
srOpslag2soeg.up[t]$(tx0[t]) = inf;
shLHh.lo[a_,t]$((tx0[t]) and ((aTot[a_] or a15t100[a_]) and t.val > 2015)) = -inf;
shLHh.up[a_,t]$((tx0[t]) and ((aTot[a_] or a15t100[a_]) and t.val > 2015)) = inf;
srOpslagOmk.lo[t]$(tx0[t]) = -inf;
srOpslagOmk.up[t]$(tx0[t]) = inf;
snOpslag.lo[t]$(tx0[t]) = -inf;
snOpslag.up[t]$(tx0[t]) = inf;
srSeparation.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
srSeparation.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
snLUdl.lo[t]$(tx0[t]) = -inf;
snLUdl.up[t]$(tx0[t]) = inf;
shLUdl.lo[t]$(tx0[t]) = -inf;
shLUdl.up[t]$(tx0[t]) = inf;
snL.lo[s_,t]$(tx0[t]) = -inf;
snL.up[s_,t]$(tx0[t]) = inf;
snSoegUdl.lo[t]$(tx0[t]) = -inf;
snSoegUdl.up[t]$(tx0[t]) = inf;
snSoc.lo[soc_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
snSoc.up[soc_,t]$((tx0[t]) and (t.val > 2015)) = inf;
dSoc2dPop.lo[soc_,t]$((tx0[t]) and (sameas['boern',soc_] and t.val > 2015)) = -inf;
dSoc2dPop.up[soc_,t]$((tx0[t]) and (sameas['boern',soc_] and t.val > 2015)) = inf;
srLedig.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
srLedig.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
$onlisting
M_base.optfile = 1;
  M_base.holdFixed = 1;
  M_base.workfactor = 2;
  #  M_base.workspace = 8000;
  #  M_base.tolinfeas = 1e-12;
  PUT logfile;
  PUT_UTILITY "log" / "---------------------------------------- Solve start ----------------------------------------";

  solve M_base using CNS;
  PUT logfile;
  PUT_UTILITY "log" / "---------------------------------------- Solve finished ----------------------------------------";

;

# ----------------------------------------------------------------------------------------------------$FIX All;
# ----------------------------------------------------------------------------------------------------
$offlisting
qX.FX[x_,t] = qX.L[x_,t];
qXy.FX[x,t] = qXy.L[x,t];
qXm.FX[x,t] = qXm.L[x,t];
qCTurist.FX[c,t] = qCTurist.L[c,t];
qXSkala.FX[x,t] = qXSkala.L[x,t];
qXTraek.FX[x,t] = qXTraek.L[x,t];
empty_group_dummy.FX[t] = empty_group_dummy.L[t];
rpXUdl2pXy.FX[x,t] = rpXUdl2pXy.L[x,t];
rpXy2pXUdl.FX[x,t] = rpXy2pXUdl.L[x,t];
uXy.FX[x,t] = uXy.L[x,t];
uCturisme.FX[c,t] = uCturisme.L[c,t];
rpM2pXm.FX[x,t] = rpM2pXm.L[x,t];
dqLdnL.FX[s_,t] = dqLdnL.L[s_,t];
dqLLeaddnL.FX[sp,t] = dqLLeaddnL.L[sp,t];
vWHh.FX[a_,t] = vWHh.L[a_,t];
vhW.FX[t] = vhW.L[t];
vhWNy.FX[t] = vhWNy.L[t];
vWUdl.FX[t] = vWUdl.L[t];
vhWForhandlet.FX[t] = vhWForhandlet.L[t];
vVirkLoenPos.FX[t] = vVirkLoenPos.L[t];
vVirkLoenPos0.FX[t] = vVirkLoenPos0.L[t];
vVirkLoenNeg.FX[t] = vVirkLoenNeg.L[t];
vVirkLoenNeg0.FX[t] = vVirkLoenNeg0.L[t];
vFFLoenPos.FX[t] = vFFLoenPos.L[t];
vFFLoenPos0.FX[t] = vFFLoenPos0.L[t];
vFFLoenNeg.FX[t] = vFFLoenNeg.L[t];
vFFLoenNeg0.FX[t] = vFFLoenNeg0.L[t];
vW.FX[s_,t] = vW.L[s_,t];
vSelvstLoen.FX[s_,t] = vSelvstLoen.L[s_,t];
vLoensum.FX[s_,t] = vLoensum.L[s_,t];
pL.FX[sp,t] = pL.L[sp,t];
rL2nL.FX[t] = rL2nL.L[t];
dOpslagOmk2dnL.FX[sp,t] = dOpslagOmk2dnL.L[sp,t];
dOpslagOmk2dnLLag.FX[sp,t] = dOpslagOmk2dnLLag.L[sp,t];
nSoegBaseHh.FX[a_,t] = nSoegBaseHh.L[a_,t];
nLHh.FX[a_,t] = nLHh.L[a_,t];
nSoegHh.FX[a_,t] = nSoegHh.L[a_,t];
fDeltag.FX[a,t] = fDeltag.L[a,t];
nLUdl.FX[t] = nLUdl.L[t];
nSoegUdl.FX[t] = nSoegUdl.L[t];
hLHh.FX[a_,t] = hLHh.L[a_,t];
hL.FX[t] = hL.L[t];
hLUdl.FX[t] = hLUdl.L[t];
rJobFinding.FX[t] = rJobFinding.L[t];
rMatch.FX[t] = rMatch.L[t];
rOpslag2soeg.FX[t] = rOpslag2soeg.L[t];
nOpslag.FX[s_,t] = nOpslag.L[s_,t];
rOpslagOmk.FX[s_,t] = rOpslagOmk.L[s_,t];
rSeparation.FX[a_,t] = rSeparation.L[a_,t];
fZh.FX[a,t] = fZh.L[a,t];
cZh.FX[a,t] = cZh.L[a,t];
nL.FX[s_,t] = nL.L[s_,t];
nPop.FX[a_,t] = nPop.L[a_,t];
nSoc.FX[soc_,t] = nSoc.L[soc_,t];
rLedig.FX[t] = rLedig.L[t];
rLedigGab.FX[t] = rLedigGab.L[t];
fProdHh.FX[a_,t] = fProdHh.L[a_,t];
fW.FX[s_,t] = fW.L[s_,t];
mtInd.FX[a_,t] = mtInd.L[a_,t];
pY.FX[s_,t] = pY.L[s_,t];
pXUdl.FX[x_,t] = pXUdl.L[x_,t];
pM.FX[s_,t] = pM.L[s_,t];
jrMarkup.FX[s_,t] = jrMarkup.L[s_,t];
rMarkup.FX[s_,t] = rMarkup.L[s_,t];
srMarkup.FX[s_,t] = srMarkup.L[s_,t];
rLUdn.FX[s_,t] = rLUdn.L[s_,t];
rKUdn.FX[k,s_,t] = rKUdn.L[k,s_,t];
rKUdnSpBy.FX[t] = rKUdnSpBy.L[t];
ErSkatAfskr.FX[k,sp,t] = ErSkatAfskr.L[k,sp,t];
qL.FX[s_,t] = qL.L[s_,t];
dKInstOmk2dK.FX[k,sp,t] = dKInstOmk2dK.L[k,sp,t];
dKInstOmk2dI.FX[k,sp,t] = dKInstOmk2dI.L[k,sp,t];
dKInstOmkLead2dI.FX[k,sp,t] = dKInstOmkLead2dI.L[k,sp,t];
pKL.FX[sp,t] = pKL.L[sp,t];
pKLB.FX[sp,t] = pKLB.L[sp,t];
pKLBR.FX[s_,t] = pKLBR.L[s_,t];
pK.FX[k,sp,t] = pK.L[k,sp,t];
pTobinsQ.FX[k,sp,t] = pTobinsQ.L[k,sp,t];
qKInstOmk.FX[i_,sp,t] = qKInstOmk.L[i_,sp,t];
qKLBR.FX[sp,t] = qKLBR.L[sp,t];
qKLB.FX[sp,t] = qKLB.L[sp,t];
qKL.FX[sp,t] = qKL.L[sp,t];
qR.FX[r_,t] = qR.L[r_,t];
qK.FX[k,s_,t] = qK.L[k,s_,t];
qI_s.FX[i_,s_,t] = qI_s.L[i_,s_,t];
qY.FX[s_,t] = qY.L[s_,t];
pOffAfskr.FX[i_,t] = pOffAfskr.L[i_,t];
pOffNyInv.FX[t] = pOffNyInv.L[t];
qOffAfskr.FX[i_,t] = qOffAfskr.L[i_,t];
qOffNyInv.FX[t] = qOffNyInv.L[t];
vOffAfskr.FX[i_,t] = vOffAfskr.L[i_,t];
vOffLR.FX[t] = vOffLR.L[t];
vI_s.FX[i_,s_,t] = vI_s.L[i_,s_,t];
vOffDirInv.FX[t] = vOffDirInv.L[t];
vOffIndirInv.FX[t] = vOffIndirInv.L[t];
vOffNyInv.FX[t] = vOffNyInv.L[t];
srvOffL2LR.FX[t] = srvOffL2LR.L[t];
rOffK2Y.FX[k,t] = rOffK2Y.L[k,t];
rvOffDirInv2BNP.FX[t] = rvOffDirInv2BNP.L[t];
vAktie.FX[t] = vAktie.L[t];
vAktiex.FX[s_,t] = vAktiex.L[s_,t];
vAktieRes.FX[t] = vAktieRes.L[t];
vEBT.FX[s_,t] = vEBT.L[s_,t];
vEBTx.FX[s_,t] = vEBTx.L[s_,t];
vEBITDA.FX[s_,t] = vEBITDA.L[s_,t];
vFCF.FX[s_,t] = vFCF.L[s_,t];
vVirkRenter.FX[t] = vVirkRenter.L[t];
vVirkOmv.FX[t] = vVirkOmv.L[t];
vVirkNFE.FX[t] = vVirkNFE.L[t];
vKskat.FX[i_,s_,t] = vKskat.L[i_,s_,t];
vAfskrFradrag.FX[s_,t] = vAfskrFradrag.L[s_,t];
vDividender.FX[t] = vDividender.L[t];
vUdstedelser.FX[t] = vUdstedelser.L[t];
vVirkK.FX[s_,t] = vVirkK.L[s_,t];
vVirk.FX[portf_,t] = vVirk.L[portf_,t];
vVirkLaan.FX[s_,t] = vVirkLaan.L[s_,t];
vVirkx.FX[t] = vVirkx.L[t];
vPension.FX[akt,t] = vPension.L[akt,t];
vtSelskabx.FX[s_,t] = vtSelskabx.L[s_,t];
vVirkFinInd.FX[t] = vVirkFinInd.L[t];
rVirkDisk.FX[sp,t] = rVirkDisk.L[sp,t];
rAfkastKrav.FX[s_,t] = rAfkastKrav.L[s_,t];
rVirkxAfk.FX[t] = rVirkxAfk.L[t];
rRente.FX[portf,t] = rRente.L[portf,t];
rOmv.FX[portf,t] = rOmv.L[portf,t];
rLaan2K.FX[t] = rLaan2K.L[t];
rIndlAktiePrem.FX[s_,t] = rIndlAktiePrem.L[s_,t];
rFinAccelPrem.FX[sp,t] = rFinAccelPrem.L[sp,t];
vFCFxRef.FX[sp,t] = vFCFxRef.L[sp,t];
EpC.FX[t] = EpC.L[t];
pBolig.FX[t] = pBolig.L[t];
pLand.FX[t] = pLand.L[t];
pC.FX[c_,t] = pC.L[c_,t];
EpBolig.FX[t] = EpBolig.L[t];
EpLand.FX[t] = EpLand.L[t];
pBoligUC.FX[a,t] = pBoligUC.L[a,t];
qC.FX[c_,t] = qC.L[c_,t];
qC_a.FX[a,t] = qC_a.L[a,t];
qCR.FX[a_,t] = qCR.L[a_,t];
qCHtM.FX[a_,t] = qCHtM.L[a_,t];
qCRxRef.FX[a,t] = qCRxRef.L[a,t];
qCHtMxRef.FX[a_,t] = qCHtMxRef.L[a_,t];
qBiler.FX[t] = qBiler.L[t];
qBoligHtM.FX[a_,t] = qBoligHtM.L[a_,t];
qBoligHtMxRef.FX[a_,t] = qBoligHtMxRef.L[a_,t];
qBoligR.FX[a_,t] = qBoligR.L[a_,t];
qBolig.FX[a_,t] = qBolig.L[a_,t];
qBoligRxRef.FX[a_,t] = qBoligRxRef.L[a_,t];
qYBolig.FX[t] = qYBolig.L[t];
qIBoligInstOmk.FX[t] = qIBoligInstOmk.L[t];
qLandSalg.FX[t] = qLandSalg.L[t];
qKBolig.FX[t] = qKBolig.L[t];
qIBolig.FX[t] = qIBolig.L[t];
qNytte.FX[a,t] = qNytte.L[a,t];
qArvBase.FX[a,t] = qArvBase.L[a,t];
qFormueBase.FX[a,t] = qFormueBase.L[a,t];
vC_a.FX[a,t] = vC_a.L[a,t];
vHhx.FX[a_,t] = vHhx.L[a_,t];
vCLejeBolig.FX[a_,t] = vCLejeBolig.L[a_,t];
vArvGivet.FX[a,t] = vArvGivet.L[a,t];
vArv.FX[a_,t] = vArv.L[a_,t];
vtArv.FX[a_,t] = vtArv.L[a_,t];
vtHhx.FX[a_,t] = vtHhx.L[a_,t];
vBoligUdgift.FX[a_,t] = vBoligUdgift.L[a_,t];
vBoligUdgiftHtM.FX[a_,t] = vBoligUdgiftHtM.L[a_,t];
vBoligUdgiftArv.FX[t] = vBoligUdgiftArv.L[t];
vHhNFErest.FX[a_,t] = vHhNFErest.L[a_,t];
jvHhNFErest.FX[a_,t] = jvHhNFErest.L[a_,t];
vBoernFraHh.FX[a,t] = vBoernFraHh.L[a,t];
vHhTilBoern.FX[a_,t] = vHhTilBoern.L[a_,t];
vBolig.FX[a_,t] = vBolig.L[a_,t];
vBoligHtM.FX[a_,t] = vBoligHtM.L[a_,t];
vKBolig.FX[t] = vKBolig.L[t];
vIBolig.FX[t] = vIBolig.L[t];
vHhInvestx.FX[a_,t] = vHhInvestx.L[a_,t];
vSelvstKapInd.FX[a_,t] = vSelvstKapInd.L[a_,t];
vArvKorrektion.FX[a_,t] = vArvKorrektion.L[a_,t];
rDisk.FX[a,t] = rDisk.L[a,t];
rKLeje2Bolig.FX[t] = rKLeje2Bolig.L[t];
rvCLejeBolig.FX[a_,t] = rvCLejeBolig.L[a_,t];
fHh.FX[a,t] = fHh.L[a,t];
uBolig.FX[a,t] = uBolig.L[a,t];
uBoligHtM.FX[a,t] = uBoligHtM.L[a,t];
fBoligUdgift.FX[a,t] = fBoligUdgift.L[a,t];
mUBolig.FX[a,t] = mUBolig.L[a,t];
dqIBoligInstOmk.FX[t] = dqIBoligInstOmk.L[t];
mUC.FX[a,t] = mUC.L[a,t];
EmUC.FX[a,t] = EmUC.L[a,t];
uC.FX[c_,t] = uC.L[c_,t];
fMigration.FX[a_,t] = fMigration.L[a_,t];
uBoernFraHh.FX[a,t] = uBoernFraHh.L[a,t];
dArv.FX[a_,t] = dArv.L[a_,t];
dFormue.FX[a_,t] = dFormue.L[a_,t];
jvHhx.FX[a_,t] = jvHhx.L[a_,t];
vPrimSaldo.FX[t] = vPrimSaldo.L[t];
vSaldo.FX[t] = vSaldo.L[t];
vOff.FX[portf_,t] = vOff.L[portf_,t];
vOffOmv.FX[t] = vOffOmv.L[t];
vOffNetRenter.FX[t] = vOffNetRenter.L[t];
vNROffNetRenter.FX[t] = vNROffNetRenter.L[t];
vOffRenteInd.FX[t] = vOffRenteInd.L[t];
vOffRenteUd.FX[t] = vOffRenteUd.L[t];
vOffNetFormue.FX[t] = vOffNetFormue.L[t];
vOffPas.FX[t] = vOffPas.L[t];
vOffY2C.FX[t] = vOffY2C.L[t];
vSatsIndeks.FX[t] = vSatsIndeks.L[t];
rOffRenteUd.FX[t] = rOffRenteUd.L[t];
nvBNP.FX[t] = nvBNP.L[t];
nvPrimSaldo.FX[t] = nvPrimSaldo.L[t];
nvtLukning.FX[t] = nvtLukning.L[t];
nvGLukning.FX[t] = nvGLukning.L[t];
rHBI.FX[t] = rHBI.L[t];
fHBIDisk.FX[t] = fHBIDisk.L[t];
rOffRenteInd.FX[t] = rOffRenteInd.L[t];
rOffAkt2BNP.FX[t] = rOffAkt2BNP.L[t];
vOffPrimInd.FX[t] = vOffPrimInd.L[t];
vtY.FX[t] = vtY.L[t];
vtYRest.FX[t] = vtYRest.L[t];
vtDirekte.FX[t] = vtDirekte.L[t];
vtKilde.FX[t] = vtKilde.L[t];
vtBund.FX[a_,t] = vtBund.L[a_,t];
vtTop.FX[a_,t] = vtTop.L[a_,t];
vtKommune.FX[a_,t] = vtKommune.L[a_,t];
vtEjd.FX[a_,t] = vtEjd.L[a_,t];
vtAktie.FX[a_,t] = vtAktie.L[a_,t];
vtVirksomhed.FX[a_,t] = vtVirksomhed.L[a_,t];
vtDoedsbo.FX[a_,t] = vtDoedsbo.L[a_,t];
vtHhAM.FX[a_,t] = vtHhAM.L[a_,t];
vtPersRest.FX[a_,t] = vtPersRest.L[a_,t];
vtKapPens.FX[a_,t] = vtKapPens.L[a_,t];
vtKapPensArv.FX[a_,t] = vtKapPensArv.L[a_,t];
vtSelskab.FX[s_,t] = vtSelskab.L[s_,t];
vtSelskabRest.FX[s_,t] = vtSelskabRest.L[s_,t];
vtSelskabNord.FX[t] = vtSelskabNord.L[t];
vtPAL.FX[t] = vtPAL.L[t];
vtMedie.FX[t] = vtMedie.L[t];
vtHhVaegt.FX[a_,t] = vtHhVaegt.L[a_,t];
vtAfgEU.FX[t] = vtAfgEU.L[t];
vtLukning.FX[a_,t] = vtLukning.L[a_,t];
vtIndirekte.FX[t] = vtIndirekte.L[t];
vtEU.FX[t] = vtEU.L[t];
vBidrag.FX[a_,t] = vBidrag.L[a_,t];
vBidragAK.FX[t] = vBidragAK.L[t];
vBidragEL.FX[t] = vBidragEL.L[t];
vBidragFri.FX[t] = vBidragFri.L[t];
vBidragObl.FX[t] = vBidragObl.L[t];
vBidragOblTjm.FX[t] = vBidragOblTjm.L[t];
vBidragATP.FX[t] = vBidragATP.L[t];
vBidragOblRest.FX[t] = vBidragOblRest.L[t];
vBidragTjmp.FX[t] = vBidragTjmp.L[t];
vOffIndRest.FX[t] = vOffIndRest.L[t];
vtKirke.FX[a_,t] = vtKirke.L[a_,t];
vJordrente.FX[t] = vJordrente.L[t];
vPersInd.FX[a_,t] = vPersInd.L[a_,t];
vPersIndRest.FX[a_,t] = vPersIndRest.L[a_,t];
vSkatteplInd.FX[a_,t] = vSkatteplInd.L[a_,t];
vNetKapIndPos.FX[a_,t] = vNetKapIndPos.L[a_,t];
vNetKapInd.FX[a_,t] = vNetKapInd.L[a_,t];
vKapIndPos.FX[a_,t] = vKapIndPos.L[a_,t];
vKapIndNeg.FX[a_,t] = vKapIndNeg.L[a_,t];
vPersFradrag.FX[a_,t] = vPersFradrag.L[a_,t];
vAKFradrag.FX[a_,t] = vAKFradrag.L[a_,t];
vELFradrag.FX[a_,t] = vELFradrag.L[a_,t];
vRestFradrag.FX[a_,t] = vRestFradrag.L[a_,t];
vBeskFradrag.FX[a_,t] = vBeskFradrag.L[a_,t];
vRealiseretAktieOmv.FX[a_,t] = vRealiseretAktieOmv.L[a_,t];
vUrealiseretAktieOmv.FX[t] = vUrealiseretAktieOmv.L[t];
ftBund.FX[a_,t] = ftBund.L[a_,t];
rTopSkatInd.FX[a_,t] = rTopSkatInd.L[a_,t];
ftKommune.FX[a_,t] = ftKommune.L[a_,t];
fvtEjd.FX[t] = fvtEjd.L[t];
fvtAktie.FX[t] = fvtAktie.L[t];
fvtDoedsbo.FX[t] = fvtDoedsbo.L[t];
jvKapIndPos.FX[a_,t] = jvKapIndPos.L[a_,t];
jvKapIndneg.FX[a_,t] = jvKapIndneg.L[a_,t];
uvPersFradrag.FX[a_,t] = uvPersFradrag.L[a_,t];
rOffFraUdl2BNP.FX[t] = rOffFraUdl2BNP.L[t];
rOffFraHh2BNP.FX[t] = rOffFraHh2BNP.L[t];
rOffFraVirk2BNP.FX[t] = rOffFraVirk2BNP.L[t];
rOffVirk2BNP.FX[t] = rOffVirk2BNP.L[t];
rPersIndRest_a2PersInd.FX[a,t] = rPersIndRest_a2PersInd.L[a,t];
rPersIndRest_t2PersInd.FX[t] = rPersIndRest_t2PersInd.L[t];
rRestFradragSats2SatsIndeks.FX[t] = rRestFradragSats2SatsIndeks.L[t];
mtVirk.FX[s_,t] = mtVirk.L[s_,t];
tLukning.FX[t] = tLukning.L[t];
pGxAfskr.FX[t] = pGxAfskr.L[t];
qGxAfskr.FX[t] = qGxAfskr.L[t];
qG.FX[g_,t] = qG.L[g_,t];
vGxAfskr.FX[t] = vGxAfskr.L[t];
vOffPrimUd.FX[t] = vOffPrimUd.L[t];
vOffInv.FX[t] = vOffInv.L[t];
vOffSub.FX[t] = vOffSub.L[t];
vSubY.FX[t] = vSubY.L[t];
vSubYRes.FX[t] = vSubYRes.L[t];
vOffUdRest.FX[t] = vOffUdRest.L[t];
vOffTilHh.FX[t] = vOffTilHh.L[t];
vOvf.FX[ovf_,t] = vOvf.L[ovf_,t];
vHhOvf.FX[a,t] = vHhOvf.L[a,t];
vOvfSkatPl.FX[a_,t] = vOvfSkatPl.L[a_,t];
vOvfSats.FX[ovf,t] = vOvfSats.L[ovf,t];
vOvfUbeskat.FX[a_,t] = vOvfUbeskat.L[a_,t];
vGLukning.FX[t] = vGLukning.L[t];
uvGxAfskr.FX[t] = uvGxAfskr.L[t];
nOvf.FX[ovf,t] = nOvf.L[ovf,t];
fHhOvf.FX[t] = fHhOvf.L[t];
dnOvf2dBesk.FX[ovf,t] = dnOvf2dBesk.L[ovf,t];
dnOvf2dPop.FX[ovf,t] = dnOvf2dPop.L[ovf,t];
dvOvf2dBesk.FX[ovf_,t] = dvOvf2dBesk.L[ovf_,t];
dvOvf2dPop.FX[ovf_,t] = dvOvf2dPop.L[ovf_,t];
rOffLandKoeb2BNP.FX[t] = rOffLandKoeb2BNP.L[t];
rOffTilUdl2BNP.FX[t] = rOffTilUdl2BNP.L[t];
rOffTilVirk2BNP.FX[t] = rOffTilVirk2BNP.L[t];
rOffTilHhKap2BNP.FX[t] = rOffTilHhKap2BNP.L[t];
rOffTilHhOev2BNP.FX[t] = rOffTilHhOev2BNP.L[t];
rSubEU2BNP.FX[t] = rSubEU2BNP.L[t];
vtMoms.FX[d_,s_,t] = vtMoms.L[d_,s_,t];
vtNetAfg.FX[d_,s_,t] = vtNetAfg.L[d_,s_,t];
vtAfg.FX[d_,s_,t] = vtAfg.L[d_,s_,t];
vtReg.FX[d_,t] = vtReg.L[d_,t];
vPunktSub.FX[t] = vPunktSub.L[t];
vtTold.FX[d_,s_,t] = vtTold.L[d_,s_,t];
vtGrund.FX[s_,t] = vtGrund.L[s_,t];
vtVirkVaegt.FX[s_,t] = vtVirkVaegt.L[s_,t];
vtVirkAM.FX[s_,t] = vtVirkAM.L[s_,t];
vtAUB.FX[s_,t] = vtAUB.L[s_,t];
vtSubLoen.FX[s_,t] = vtSubLoen.L[s_,t];
vtNetLoenAfg.FX[s_,t] = vtNetLoenAfg.L[s_,t];
vtNetYAfg.FX[s_,t] = vtNetYAfg.L[s_,t];
vtNetYAfgRest.FX[s_,t] = vtNetYAfgRest.L[s_,t];
tNetAfg_y.FX[d_,s,t] = tNetAfg_y.L[d_,s,t];
tNetAfg_m.FX[d_,s,t] = tNetAfg_m.L[d_,s,t];
tL.FX[s_,t] = tL.L[s_,t];
tIOy.FX[d_,s,t] = tIOy.L[d_,s,t];
tIOm.FX[d_,s,t] = tIOm.L[d_,s,t];
vVirkBVT5aarSnit.FX[t] = vVirkBVT5aarSnit.L[t];
vBVT2hL.FX[t] = vBVT2hL.L[t];
vBVT2hLsnit.FX[t] = vBVT2hLsnit.L[t];
qBVT2hL.FX[t] = qBVT2hL.L[t];
qBVT2hLsnit.FX[t] = qBVT2hLsnit.L[t];
vBFI.FX[t] = vBFI.L[t];
vUdl.FX[portf_,t] = vUdl.L[portf_,t];
vUdlRenter.FX[t] = vUdlRenter.L[t];
vUdlOmv.FX[t] = vUdlOmv.L[t];
vUdlNFE.FX[t] = vUdlNFE.L[t];
rArbProd.FX[t] = rArbProd.L[t];
rBVTGab.FX[t] = rBVTGab.L[t];
rBeskGab.FX[t] = rBeskGab.L[t];
pCInflSnit.FX[t] = pCInflSnit.L[t];
pBNP.FX[t] = pBNP.L[t];
pBVT.FX[s_,t] = pBVT.L[s_,t];
pIO.FX[d_,s,t] = pIO.L[d_,s,t];
pIOy.FX[d_,s,t] = pIOy.L[d_,s,t];
pIOm.FX[d_,s,t] = pIOm.L[d_,s,t];
pX.FX[x_,t] = pX.L[x_,t];
pXm.FX[x,t] = pXm.L[x,t];
pXy.FX[x,t] = pXy.L[x,t];
pR.FX[r_,t] = pR.L[r_,t];
pCDK.FX[c_,t] = pCDK.L[c_,t];
pCTurist.FX[c,t] = pCTurist.L[c,t];
pG.FX[g_,t] = pG.L[g_,t];
pI.FX[i_,t] = pI.L[i_,t];
pI_s.FX[i_,s_,t] = pI_s.L[i_,s_,t];
vY.FX[s_,t] = vY.L[s_,t];
vM.FX[s_,t] = vM.L[s_,t];
vBNP.FX[t] = vBNP.L[t];
vBVT.FX[s_,t] = vBVT.L[s_,t];
vIO.FX[d_,s_,t] = vIO.L[d_,s_,t];
vIOy.FX[d_,s_,t] = vIOy.L[d_,s_,t];
vIOm.FX[d_,s_,t] = vIOm.L[d_,s_,t];
vX.FX[x_,t] = vX.L[x_,t];
vXy.FX[x,t] = vXy.L[x,t];
vR.FX[r_,t] = vR.L[r_,t];
vC.FX[c_,t] = vC.L[c_,t];
vCTurist.FX[c,t] = vCTurist.L[c,t];
vG.FX[g_,t] = vG.L[g_,t];
vI.FX[i_,t] = vI.L[i_,t];
qM.FX[s_,t] = qM.L[s_,t];
qBNP.FX[t] = qBNP.L[t];
qBVT.FX[s_,t] = qBVT.L[s_,t];
qIO.FX[d_,s_,t] = qIO.L[d_,s_,t];
qIOy.FX[d_,s_,t] = qIOy.L[d_,s_,t];
qIOm.FX[d_,s_,t] = qIOm.L[d_,s_,t];
qCDK.FX[c,t] = qCDK.L[c,t];
qI.FX[i_,t] = qI.L[i_,t];
juIOm.FX[s,t] = juIOm.L[s,t];
juIOXy.FX[s,t] = juIOXy.L[s,t];
uIO.FX[d_,s,t] = uIO.L[d_,s,t];
uIOy.FX[dux,s,t] = uIOy.L[dux,s,t];
uIOm.FX[dux,s,t] = uIOm.L[dux,s,t];
uIOXy.FX[x,s,t] = uIOXy.L[x,s,t];
uIOXm.FX[x,s,t] = uIOXm.L[x,s,t];
fpI_s.FX[i,t] = fpI_s.L[i,t];
uIO0.FX[dux,s_,t] = uIO0.L[dux,s_,t];
rpIOm2pIOy.FX[d_,s,t] = rpIOm2pIOy.L[d_,s,t];
fqMKortsigt.FX[dux,s,t] = fqMKortsigt.L[dux,s,t];
pBoligRigid.FX[a,t] = pBoligRigid.L[a,t];
vtHh.FX[a_,t] = vtHh.L[a_,t];
vDispInd.FX[t] = vDispInd.L[t];
vHhInd.FX[a_,t] = vHhInd.L[a_,t];
vHhxAfk.FX[a_,t] = vHhxAfk.L[a_,t];
vHhFinAkt.FX[a_,t] = vHhFinAkt.L[a_,t];
vHh.FX[portf_,a_,t] = vHh.L[portf_,a_,t];
vHhRenter.FX[portf_,t] = vHhRenter.L[portf_,t];
vHhOmv.FX[portf_,t] = vHhOmv.L[portf_,t];
vHhPensAfk.FX[portf_,a_,t] = vHhPensAfk.L[portf_,a_,t];
vHhNFE.FX[t] = vHhNFE.L[t];
vPensIndb.FX[portf_,a_,t] = vPensIndb.L[portf_,a_,t];
vPensUdb.FX[portf_,a_,t] = vPensUdb.L[portf_,a_,t];
vPensArv.FX[portf_,a_,t] = vPensArv.L[portf_,a_,t];
vNetIndPensUdb.FX[t] = vNetIndPensUdb.L[t];
vNetKolPensUdb.FX[t] = vNetKolPensUdb.L[t];
vKolPensRenter.FX[t] = vKolPensRenter.L[t];
vLejeAfEjerBolig.FX[t] = vLejeAfEjerBolig.L[t];
vHhFraVirkKap.FX[t] = vHhFraVirkKap.L[t];
vHhFraVirkOev.FX[t] = vHhFraVirkOev.L[t];
vHhFraVirk.FX[t] = vHhFraVirk.L[t];
vHhTilUdl.FX[t] = vHhTilUdl.L[t];
mrHhxAfk.FX[t] = mrHhxAfk.L[t];
mrRealKredAfk.FX[t] = mrRealKredAfk.L[t];
rRealKred2Bolig.FX[a_,t] = rRealKred2Bolig.L[a_,t];
rPensIndb.FX[pens,a_,t] = rPensIndb.L[pens,a_,t];
rPensUdb.FX[pens,a_,t] = rPensUdb.L[pens,a_,t];
rBoligOmkRest.FX[t] = rBoligOmkRest.L[t];
rHhAfk.FX[portf,t] = rHhAfk.L[portf,t];
jvHhxAfk.FX[a_,t] = jvHhxAfk.L[a_,t];
jvHhPensAfk.FX[portf_,a_,t] = jvHhPensAfk.L[portf_,a_,t];
jvHh.FX[t] = jvHh.L[t];
mtAktie.FX[t] = mtAktie.L[t];
pKspBy.FX[t] = pKspBy.L[t];
sqBVT.FX[t] = sqBVT.L[t];
sdqLdnL.FX[s_,t] = sdqLdnL.L[s_,t];
sdOpslagOmk2dnLLag.FX[t] = sdOpslagOmk2dnLLag.L[t];
sqL.FX[s_,t] = sqL.L[s_,t];
qKspBy.FX[t] = qKspBy.L[t];
qLspBy.FX[t] = qLspBy.L[t];
sqLspBy.FX[t] = sqLspBy.L[t];
uY.FX[t] = uY.L[t];
shL.FX[t] = shL.L[t];
srL2nL.FX[t] = srL2nL.L[t];
sfW.FX[s_,t] = sfW.L[s_,t];
sdOpslagOmk2dnL.FX[t] = sdOpslagOmk2dnL.L[t];
sfProdHh.FX[t] = sfProdHh.L[t];
snSoegBaseHh.FX[a_,t] = snSoegBaseHh.L[a_,t];
snLHh.FX[a_,t] = snLHh.L[a_,t];
snSoegHh.FX[a_,t] = snSoegHh.L[a_,t];
sfDeltag.FX[a,t] = sfDeltag.L[a,t];
srJobFinding.FX[t] = srJobFinding.L[t];
srMatch.FX[t] = srMatch.L[t];
srOpslag2soeg.FX[t] = srOpslag2soeg.L[t];
shLHh.FX[a_,t] = shLHh.L[a_,t];
srOpslagOmk.FX[t] = srOpslagOmk.L[t];
snOpslag.FX[t] = snOpslag.L[t];
srSeparation.FX[t] = srSeparation.L[t];
snLUdl.FX[t] = snLUdl.L[t];
shLUdl.FX[t] = shLUdl.L[t];
snL.FX[s_,t] = snL.L[s_,t];
snSoegUdl.FX[t] = snSoegUdl.L[t];
snSoc.FX[soc_,t] = snSoc.L[soc_,t];
dSoc2dPop.FX[soc_,t] = dSoc2dPop.L[soc_,t];
srLedig.FX[t] = srLedig.L[t];
pUdl.FX[t] = pUdl.L[t];
pOlie.FX[t] = pOlie.L[t];
pLxUdn.FX[sp,t] = pLxUdn.L[sp,t];
uR.FX[sp,t] = uR.L[sp,t];
uKLB.FX[sp,t] = uKLB.L[sp,t];
uL.FX[sp,t] = uL.L[sp,t];
uK.FX[k,sp,t] = uK.L[k,sp,t];
uKL.FX[sp,t] = uKL.L[sp,t];
uh.FX[a,t] = uh.L[a,t];
vVirkIndRest.FX[t] = vVirkIndRest.L[t];
vOffAkt.FX[t] = vOffAkt.L[t];
vOffFonde.FX[t] = vOffFonde.L[t];
vtPALGab.FX[t] = vtPALGab.L[t];
vtSelskabNordGab.FX[t] = vtSelskabNordGab.L[t];
vtSelskabRestGab.FX[t] = vtSelskabRestGab.L[t];
vtRegGab.FX[t] = vtRegGab.L[t];
vOffNetRenterGab.FX[t] = vOffNetRenterGab.L[t];
vtRestGab.FX[t] = vtRestGab.L[t];
vEngangsForholdGab.FX[t] = vEngangsForholdGab.L[t];
jvOffPrimInd.FX[t] = jvOffPrimInd.L[t];
vtKildeRest.FX[t] = vtKildeRest.L[t];
vtDirekteRest.FX[t] = vtDirekteRest.L[t];
vOffFraUdl.FX[t] = vOffFraUdl.L[t];
vOffFraHh.FX[t] = vOffFraHh.L[t];
vOffFraVirk.FX[t] = vOffFraVirk.L[t];
vOffVirk.FX[t] = vOffVirk.L[t];
vPersIndRest_a.FX[a_,t] = vPersIndRest_a.L[a_,t];
vPersIndRest_t.FX[t] = vPersIndRest_t.L[t];
vHhOvfRest.FX[a,t] = vHhOvfRest.L[a,t];
vOffLandKoeb.FX[t] = vOffLandKoeb.L[t];
vOffTilUdl.FX[t] = vOffTilUdl.L[t];
vOffTilVirk.FX[t] = vOffTilVirk.L[t];
vOffTilHhKap.FX[t] = vOffTilHhKap.L[t];
vOffTilHhOev.FX[t] = vOffTilHhOev.L[t];
vSubEU.FX[t] = vSubEU.L[t];
vhWVirk.FX[t] = vhWVirk.L[t];
vOffLoen.FX[t] = vOffLoen.L[t];
vHhFormueR.FX[a_,t] = vHhFormueR.L[a_,t];
vHhFormueHtM.FX[a_,t] = vHhFormueHtM.L[a_,t];
vHhxR.FX[a_,t] = vHhxR.L[a_,t];
vHhPensR.FX[a_,t] = vHhPensR.L[a_,t];
vHhPensHtM.FX[a_,t] = vHhPensHtM.L[a_,t];
vHhPens.FX[a_,t] = vHhPens.L[a_,t];
vFrivaerdiR.FX[a_,t] = vFrivaerdiR.L[a_,t];
vFrivaerdiHtM.FX[a_,t] = vFrivaerdiHtM.L[a_,t];
vHhIndHtM.FX[a_,t] = vHhIndHtM.L[a_,t];
vHhIndR.FX[a_,t] = vHhIndR.L[a_,t];
vHhNetFinR.FX[a_,t] = vHhNetFinR.L[a_,t];
vHhNetFinHtM.FX[a_,t] = vHhNetFinHtM.L[a_,t];
vHhNetFin.FX[a_,t] = vHhNetFin.L[a_,t];
vHhIndMvHtM.FX[a_,t] = vHhIndMvHtM.L[a_,t];
vHhIndMvR.FX[a_,t] = vHhIndMvR.L[a_,t];
vHhIndMv.FX[a_,t] = vHhIndMv.L[a_,t];
vCR_NR.FX[a_,t] = vCR_NR.L[a_,t];
vCHtM_NR.FX[a_,t] = vCHtM_NR.L[a_,t];
vC_NR.FX[a_,t] = vC_NR.L[a_,t];
vHhFormue.FX[a_,t] = vHhFormue.L[a_,t];
vBoligUdgiftR.FX[a_,t] = vBoligUdgiftR.L[a_,t];
vBoligR.FX[a_,t] = vBoligR.L[a_,t];
qXMarked.FX[x,t] = qXMarked.L[x,t];
qProd.FX[t] = qProd.L[t];
qLand.FX[t] = qLand.L[t];
qKLejeBolig.FX[t] = qKLejeBolig.L[t];
qGrus.FX[t] = qGrus.L[t];
qLxUdn.FX[s,t] = qLxUdn.L[s,t];
qCR_NR.FX[a_,t] = qCR_NR.L[a_,t];
qCHtM_NR.FX[a_,t] = qCHtM_NR.L[a_,t];
qC_NR.FX[a_,t] = qC_NR.L[a_,t];
hVirk.FX[t] = hVirk.L[t];
hOff.FX[t] = hOff.L[t];
tPensKor.FX[t] = tPensKor.L[t];
nSoegBase.FX[t] = nSoegBase.L[t];
rtTopRenter.FX[t] = rtTopRenter.L[t];
mrNet2KapIndPos.FX[t] = mrNet2KapIndPos.L[t];
rKolPens.FX[pens,t] = rKolPens.L[pens,t];
rHhFraVirkKap.FX[t] = rHhFraVirkKap.L[t];
rHhFraVirkOev.FX[t] = rHhFraVirkOev.L[t];
rHhTilUdl.FX[t] = rHhTilUdl.L[t];
cHh_a.FX[akt,a,t] = cHh_a.L[akt,a,t];
cHh_t.FX[akt,t] = cHh_t.L[akt,t];
dvHh2dvHhx.FX[portf_,t] = dvHh2dvHhx.L[portf_,t];
dvHh2dvBolig.FX[portf_,t] = dvHh2dvBolig.L[portf_,t];
dvHh2dvPensIndb.FX[portf_,t] = dvHh2dvPensIndb.L[portf_,t];
rBoligOmkRestRes.FX[t] = rBoligOmkRestRes.L[t];
rRealKredTraeg.FX = rRealKredTraeg.L;
rRealKred2Bolig_a.FX[a,t] = rRealKred2Bolig_a.L[a,t];
rRealKred2Bolig_t.FX[t] = rRealKred2Bolig_t.L[t];
cmtAktie.FX[t] = cmtAktie.L[t];
ErAktieAfk_static.FX[t] = ErAktieAfk_static.L[t];
rPensArv.FX[pens,a_,t] = rPensArv.L[pens,a_,t];
jvHhOmv.FX[t] = jvHhOmv.L[t];
jvHhRenter.FX[t] = jvHhRenter.L[t];
jvNetKolPensUdb.FX[t] = jvNetKolPensUdb.L[t];
jvKolPensRenter.FX[t] = jvKolPensRenter.L[t];
jmrHhAfk.FX[t] = jmrHhAfk.L[t];
jrHhRente.FX[portf,t] = jrHhRente.L[portf,t];
jrHhOmv.FX[portf,t] = jrHhOmv.L[portf,t];
rUdlRealkred.FX[t] = rUdlRealkred.L[t];
jvBFI.FX[t] = jvBFI.L[t];
fDemoTraek.FX[t] = fDemoTraek.L[t];
uHhOvfPop.FX[a,t] = uHhOvfPop.L[a,t];
uOvfUbeskat.FX[a,t] = uOvfUbeskat.L[a,t];
jvOvf.FX[ovf,t] = jvOvf.L[ovf,t];
uvOvfSats.FX[ovf,t] = uvOvfSats.L[ovf,t];
eG.FX[g_] = eG.L[g_];
rGLukning.FX[t] = rGLukning.L[t];
uG.FX[g_,t] = uG.L[g_,t];
rvYsubRest2BVT.FX[t] = rvYsubRest2BVT.L[t];
tEjd.FX[t] = tEjd.L[t];
tPersRestxKapPens.FX[t] = tPersRestxKapPens.L[t];
tSelskabNord.FX[t] = tSelskabNord.L[t];
tVirksomhed.FX[t] = tVirksomhed.L[t];
tDoedsbo.FX[t] = tDoedsbo.L[t];
tAktie.FX[t] = tAktie.L[t];
tJordRente.FX[t] = tJordRente.L[t];
tHhVaegt.FX[t] = tHhVaegt.L[t];
tbeskfradrag.FX[t] = tbeskfradrag.L[t];
ftAMBidrag.FX[t] = ftAMBidrag.L[t];
ftKapPens.FX[t] = ftKapPens.L[t];
ftSelskab.FX[t] = ftSelskab.L[t];
ftPAL.FX[t] = ftPAL.L[t];
ftKirke.FX[t] = ftKirke.L[t];
jfvSkatteplInd.FX[t] = jfvSkatteplInd.L[t];
rNet2KapIndPos.FX[a_,t] = rNet2KapIndPos.L[a_,t];
rtKirke.FX[t] = rtKirke.L[t];
vRestFradragSats.FX[t] = vRestFradragSats.L[t];
rAKFradrag2Bidrag.FX[t] = rAKFradrag2Bidrag.L[t];
rELFradrag2Bidrag.FX[t] = rELFradrag2Bidrag.L[t];
uBidragOblTjm.FX[t] = uBidragOblTjm.L[t];
uBidragATP.FX[t] = uBidragATP.L[t];
uBidragOblRest.FX[t] = uBidragOblRest.L[t];
uBidragEL.FX[t] = uBidragEL.L[t];
uBidragFri.FX[t] = uBidragFri.L[t];
uBidragAK.FX[t] = uBidragAK.L[t];
uBidragTjmp.FX[t] = uBidragTjmp.L[t];
utMedie.FX[t] = utMedie.L[t];
rRealiseringAktieOmv.FX[t] = rRealiseringAktieOmv.L[t];
rvtAfgEU2vtAfg.FX[t] = rvtAfgEU2vtAfg.L[t];
tBund.FX[t] = tBund.L[t];
tTop.FX[t] = tTop.L[t];
tKommune.FX[t] = tKommune.L[t];
tAMbidrag.FX[t] = tAMbidrag.L[t];
tKapPens.FX[t] = tKapPens.L[t];
tSelskab.FX[t] = tSelskab.L[t];
tPAL.FX[t] = tPAL.L[t];
tKirke.FX[t] = tKirke.L[t];
rOffRealKred2Pas.FX[t] = rOffRealKred2Pas.L[t];
rOffAkt.FX[akt,t] = rOffAkt.L[akt,t];
jvOffOmv.FX[t] = jvOffOmv.L[t];
jrOffRenteInd.FX[t] = jrOffRenteInd.L[t];
jrOffRenteUd.FX[t] = jrOffRenteUd.L[t];
jfSatsIndeks.FX[t] = jfSatsIndeks.L[t];
rOffY2C.FX[t] = rOffY2C.L[t];
rDisk_t.FX[t] = rDisk_t.L[t];
rDisk_a.FX[a,t] = rDisk_a.L[a,t];
uBolig_a.FX[a,t] = uBolig_a.L[a,t];
uBolig_t.FX[t] = uBolig_t.L[t];
uBoligHtM_a.FX[a,t] = uBoligHtM_a.L[a,t];
uBoligHtM_t.FX[t] = uBoligHtM_t.L[t];
uBoligHtM_match.FX = uBoligHtM_match.L;
uBoernFraHh_t.FX[t] = uBoernFraHh_t.L[t];
uBoernFraHh_a.FX[a,t] = uBoernFraHh_a.L[a,t];
eHh.FX = eHh.L;
rRef.FX = rRef.L;
rRef_2016.FX = rRef_2016.L;
rRefHtM.FX = rRefHtM.L;
rRefBolig.FX = rRefBolig.L;
rHtM.FX = rHtM.L;
eBolig.FX = eBolig.L;
uIBoligInstOmk.FX = uIBoligInstOmk.L;
fIBoligInstOmk.FX[t] = fIBoligInstOmk.L[t];
fBoligGevinst.FX = fBoligGevinst.L;
EpLandInfl.FX[t] = EpLandInfl.L[t];
EpBoligInfl.FX[t] = EpBoligInfl.L[t];
eC.FX[c_] = eC.L[c_];
uLand.FX[t] = uLand.L[t];
uIBolig.FX[t] = uIBolig.L[t];
rArv.FX[a,t] = rArv.L[a,t];
rArv_a.FX[a,aa] = rArv_a.L[a,aa];
uFormue.FX[a,t] = uFormue.L[a,t];
cFormue.FX[a,t] = cFormue.L[a,t];
rMaxRealkred.FX[t] = rMaxRealkred.L[t];
uArv.FX[a,t] = uArv.L[a,t];
cArv.FX[a,t] = cArv.L[a,t];
tArv.FX[t] = tArv.L[t];
rSelvstKapInd.FX[t] = rSelvstKapInd.L[t];
eNytte.FX = eNytte.L;
rArvKorrektion.FX[a] = rArvKorrektion.L[a];
uC0.FX[c_,t] = uC0.L[c_,t];
fuCnest.FX[cNest,t] = fuCnest.L[cNest,t];
rBilAfskr.FX[t] = rBilAfskr.L[t];
rHhInvestx.FX[t] = rHhInvestx.L[t];
nArvinger.FX[a,t] = nArvinger.L[a,t];
rBoern.FX[a,t] = rBoern.L[a,t];
rOverlev.FX[a_,t] = rOverlev.L[a_,t];
ErOverlev.FX[a,t] = ErOverlev.L[a,t];
rBoligPrem.FX[t] = rBoligPrem.L[t];
jfEpC.FX[t] = jfEpC.L[t];
srLUdn.FX[s_,t] = srLUdn.L[s_,t];
jshLHh.FX[a,t] = jshLHh.L[a,t];
jsfDeltag.FX[a,t] = jsfDeltag.L[a,t];
juY.FX[t] = juY.L[t];
dSoc2dBesk.FX[soc_,t] = dSoc2dBesk.L[soc_,t];
fProdHh_a.FX[a,t] = fProdHh_a.L[a,t];
fProdHh_t.FX[t] = fProdHh_t.L[t];
fDiskpL.FX[sp,t] = fDiskpL.L[sp,t];
fDiskDeltag.FX[a,t] = fDiskDeltag.L[a,t];
mrKomp.FX[a_,t] = mrKomp.L[a_,t];
eDeltag.FX = eDeltag.L;
emrKomp.FX = emrKomp.L;
eMatching.FX = eMatching.L;
nSoegBaseUdl.FX[t] = nSoegBaseUdl.L[t];
uDeltag.FX[a,t] = uDeltag.L[a,t];
eh.FX = eh.L;
fhLUdl.FX[t] = fhLUdl.L[t];
fProdUdl.FX[t] = fProdUdl.L[t];
fW0.FX[s_,t] = fW0.L[s_,t];
uOpslagOmk.FX = uOpslagOmk.L;
uMatchOmk.FX = uMatchOmk.L;
uMatchOmkSqr.FX = uMatchOmkSqr.L;
rLoenTraeghed.FX = rLoenTraeghed.L;
rLoenIndeksering.FX = rLoenIndeksering.L;
cmtInd.FX[a,t] = cmtInd.L[a,t];
rfZhTraeghed.FX = rfZhTraeghed.L;
rAMDisk.FX[t] = rAMDisk.L[t];
rFFLoenAlternativ.FX = rFFLoenAlternativ.L;
cMatchOmkSqr.FX[s_,t] = cMatchOmkSqr.L[s_,t];
jvhW.FX[t] = jvhW.L[t];
rLoenNash.FX[t] = rLoenNash.L[t];
rSelvst.FX[s_,t] = rSelvst.L[s_,t];
jnSoc.FX[soc_,t] = jnSoc.L[soc_,t];
upYTraeghed.FX[sp] = upYTraeghed.L[sp];
eY.FX[sp,t] = eY.L[sp,t];
epM2pOlie.FX[s] = epM2pOlie.L[s];
epXUdl2pOlie.FX[x] = epXUdl2pOlie.L[x];
upXSoe.FX[t] = upXSoe.L[t];
upXUdl.FX[x,t] = upXUdl.L[x,t];
upM.FX[s,t] = upM.L[s,t];
upYUdv.FX[t] = upYUdv.L[t];
jpY_bol.FX[t] = jpY_bol.L[t];
rSkatAfskr.FX[k,t] = rSkatAfskr.L[k,t];
rAktieRes2BVT.FX[t] = rAktieRes2BVT.L[t];
rvOblLaan2K.FX[t] = rvOblLaan2K.L[t];
rvVirkx.FX[akt,t] = rvVirkx.L[akt,t];
rPensAkt.FX[akt,t] = rPensAkt.L[akt,t];
rFinAccel.FX[sp] = rFinAccel.L[sp];
cFinAccel.FX[sp,t] = cFinAccel.L[sp,t];
uFinAccel.FX[sp,t] = uFinAccel.L[sp,t];
rFinAccelTraeghed.FX = rFinAccelTraeghed.L;
rvRealKred2K.FX[t] = rvRealKred2K.L[t];
crRenteBank.FX[t] = crRenteBank.L[t];
rUdlAktiePrem.FX[t] = rUdlAktiePrem.L[t];
rVirkDiskPrem.FX[sp,t] = rVirkDiskPrem.L[sp,t];
jvVirkRenter.FX[t] = jvVirkRenter.L[t];
jvVirkOmv.FX[t] = jvVirkOmv.L[t];
jrRente_pension.FX[t] = jrRente_pension.L[t];
jrOmv_pension.FX[t] = jrOmv_pension.L[t];
jrOmv_UdlAktier.FX[t] = jrOmv_UdlAktier.L[t];
jvVirkx.FX[t] = jvVirkx.L[t];
uKInstOmk.FX[k,sp] = uKInstOmk.L[k,sp];
fKInstOmk.FX[k,sp,t] = fKInstOmk.L[k,sp,t];
eKUdn.FX[k] = eKUdn.L[k];
eKUdnPersistens.FX[k] = eKUdnPersistens.L[k];
eLUdn.FX = eLUdn.L;
eLUdnPersistens.FX = eLUdnPersistens.L;
eKLBR.FX[sp] = eKLBR.L[sp];
eKLB.FX[sp] = eKLB.L[sp];
eKL.FX[sp] = eKL.L[sp];
rAfskr_static.FX[k,sp,t] = rAfskr_static.L[k,sp,t];
gpI_s_static.FX[k,sp,t] = gpI_s_static.L[k,sp,t];
rAfskr.FX[k,s_,t] = rAfskr.L[k,s_,t];
rIL2y.FX[s_,t] = rIL2y.L[s_,t];
fProd.FX[s_,t] = fProd.L[s_,t];
jrLUdn.FX[sp,t] = jrLUdn.L[sp,t];
jrKUdn.FX[k,sp,t] = jrKUdn.L[k,sp,t];
jfqI_s_iL.FX[t] = jfqI_s_iL.L[t];
jpK.FX[k,sp,t] = jpK.L[k,sp,t];
rOffIB2NyInv.FX[t] = rOffIB2NyInv.L[t];
rOffLTraeghed.FX = rOffLTraeghed.L;
rvOffIndirInv2vBVT.FX[t] = rvOffIndirInv2vBVT.L[t];
jrpOffAfskr.FX[k,t] = jrpOffAfskr.L[k,t];
jrqOffAfskr.FX[k,t] = jrqOffAfskr.L[k,t];
jrpOffNyInv.FX[t] = jrpOffNyInv.L[t];
uXTur.FX[t] = uXTur.L[t];
uXm.FX[x,t] = uXm.L[x,t];
fuCturisme.FX[t] = fuCturisme.L[t];
uCturisme0.FX[c,t] = uCturisme0.L[c,t];
rXTraeghed.FX = rXTraeghed.L;
upXyTraeghed.FX = upXyTraeghed.L;
rXSkalaTraeghed.FX = rXSkalaTraeghed.L;
eXUdl.FX[x] = eXUdl.L[x];
cpXyTraeghed.FX[x,t] = cpXyTraeghed.L[x,t];
tYsub_y0.FX[d_,s,t] = tYsub_y0.L[d_,s,t];
tYsub_m0.FX[d_,s,t] = tYsub_m0.L[d_,s,t];
tTold.FX[d_,s,t] = tTold.L[d_,s,t];
tMoms_y.FX[d_,s,t] = tMoms_y.L[d_,s,t];
tMoms_m.FX[d_,s,t] = tMoms_m.L[d_,s,t];
tK.FX[k,s_,t] = tK.L[k,s_,t];
tLoensum.FX[s,t] = tLoensum.L[s,t];
tVirkAM.FX[s,t] = tVirkAM.L[s,t];
tLoenSub.FX[s,t] = tLoenSub.L[s,t];
tYsub0.FX[t] = tYsub0.L[t];
tReg.FX[d_,t] = tReg.L[d_,t];
tNetYRest.FX[s,t] = tNetYRest.L[s,t];
tAfg_y.FX[d_,s,t] = tAfg_y.L[d_,s,t];
tAfg_m.FX[d_,s,t] = tAfg_m.L[d_,s,t];
tYsub_y.FX[d_,s,t] = tYsub_y.L[d_,s,t];
tYsub_m.FX[d_,s,t] = tYsub_m.L[d_,s,t];
eIO.FX[d_,s] = eIO.L[d_,s];
rMerPris.FX[d_,t] = rMerPris.L[d_,t];
rvIO2vOffNyInv.FX[i,t] = rvIO2vOffNyInv.L[i,t];
rvIO2vPublicSales.FX[c,t] = rvIO2vPublicSales.L[c,t];
rpMTraeghed.FX[d_,s] = rpMTraeghed.L[d_,s];
rMKortsigt.FX[d_,s] = rMKortsigt.L[d_,s];
uIOm0.FX[dux,s,t] = uIOm0.L[dux,s,t];
uIOXy0.FX[x,s,t] = uIOXy0.L[x,s,t];
uIOXm0.FX[x,s,t] = uIOXm0.L[x,s,t];
fuIO.FX[dux,t] = fuIO.L[dux,t];
fuIOym.FX[dux,s,t] = fuIOym.L[dux,s,t];
fuXm.FX[x,t] = fuXm.L[x,t];
fuXy.FX[x,t] = fuXy.L[x,t];
upI_s.FX[i,s,t] = upI_s.L[i,s,t];
fpCTurist.FX[c,t] = fpCTurist.L[c,t];
$onlisting 
# ----------------------------------------------------------------------------------------------------$UNFIX G_post_endo;
# ----------------------------------------------------------------------------------------------------
$offlisting
nSoegBase.lo[t]$((tx0[t]) and (t.val > 2015)) = -inf;
nSoegBase.up[t]$((tx0[t]) and (t.val > 2015)) = inf;
pLxUdn.lo[sp,t]$(tx0[t]) = -inf;
pLxUdn.up[sp,t]$(tx0[t]) = inf;
pI_s.lo[i_,s_,t]$((tx0[t]) and ((spTot[s_] and k[i_]) or iTot[i_])) = -inf;
pI_s.up[i_,s_,t]$((tx0[t]) and ((spTot[s_] and k[i_]) or iTot[i_])) = inf;
qLxUdn.lo[s,t]$(tx0[t]) = -inf;
qLxUdn.up[s,t]$(tx0[t]) = inf;
qI_s.lo[i_,s_,t]$((tx0[t]) and ((spTot[s_] and k[i_]) or iTot[i_])) = -inf;
qI_s.up[i_,s_,t]$((tx0[t]) and ((spTot[s_] and k[i_]) or iTot[i_])) = inf;
qCR_NR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
qCR_NR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
qCHtM_NR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
qCHtM_NR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
qC_NR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
qC_NR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vI_s.lo[i_,s_,t]$((tx0[t]) and (spTot[s_] and k[i_])) = -inf;
vI_s.up[i_,s_,t]$((tx0[t]) and (spTot[s_] and k[i_])) = inf;
vhWVirk.lo[t]$(tx0[t]) = -inf;
vhWVirk.up[t]$(tx0[t]) = inf;
vOffLoen.lo[t]$(tx0[t]) = -inf;
vOffLoen.up[t]$(tx0[t]) = inf;
vHhFormueR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhFormueR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhFormueHtM.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhFormueHtM.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhxR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhxR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhPensR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhPensR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhPensHtM.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhPensHtM.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhPens.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhPens.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vFrivaerdiR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vFrivaerdiR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vFrivaerdiHtM.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vFrivaerdiHtM.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhIndHtM.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhIndHtM.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhIndR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhIndR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhNetFinR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhNetFinR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhNetFinHtM.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhNetFinHtM.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhNetFin.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhNetFin.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhIndMvHtM.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhIndMvHtM.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhIndMvR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhIndMvR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vHhIndMv.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vHhIndMv.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vCR_NR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vCR_NR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vCHtM_NR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vCHtM_NR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vC_NR.lo[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = -inf;
vC_NR.up[a_,t]$((tx0[t]) and (a0t100[a_] or aTot[a_])) = inf;
vW.lo[s_,t]$((tx0[t]) and (sTot[s_] or spTot[s_])) = -inf;
vW.up[s_,t]$((tx0[t]) and (sTot[s_] or spTot[s_])) = inf;
vHhFormue.lo[a_,t]$((tx0[t]) and ((a0t100[a_] and t.val > 2015) or aTot[a_])) = -inf;
vHhFormue.up[a_,t]$((tx0[t]) and ((a0t100[a_] and t.val > 2015) or aTot[a_])) = inf;
vBoligUdgiftR.lo[a_,t]$((tx0[t]) and (t.val > 2015)) = -inf;
vBoligUdgiftR.up[a_,t]$((tx0[t]) and (t.val > 2015)) = inf;
vBoligR.lo[a_,t]$((tx0[t]) and ((a18t100[a_] or atot[a_]) and t.val > 2015)) = -inf;
vBoligR.up[a_,t]$((tx0[t]) and ((a18t100[a_] or atot[a_]) and t.val > 2015)) = inf;
$onlisting
B_post.optfile = 1;
  B_post.holdFixed = 1;
  B_post.workfactor = 2;
  #  B_post.workspace = 8000;
  #  B_post.tolinfeas = 1e-12;
  PUT logfile;
  PUT_UTILITY "log" / "---------------------------------------- Solve start ----------------------------------------";

  solve B_post using CNS;
  PUT logfile;
  PUT_UTILITY "log" / "---------------------------------------- Solve finished ----------------------------------------";

;
$offlisting;
    
# ----------------------------------------------------------------------------------------------------
#  Loop over G_ZeroShockTest
# ----------------------------------------------------------------------------------------------------

      parameter qX_difference[x_,t];
      qX_difference[x_,t]$(1) = qX.l[x_,t] - qX_saved[x_,t];
      qX_difference[x_,t]$(abs(qX_difference[x_,t]) < 1e-6) = 0;
      if (sum([x_,t]$(1), abs(qX_difference[x_,t])),
        display qX_difference;
      );
    
      parameter qXy_difference[x,t];
      qXy_difference[x,t]$(1) = qXy.l[x,t] - qXy_saved[x,t];
      qXy_difference[x,t]$(abs(qXy_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(qXy_difference[x,t])),
        display qXy_difference;
      );
    
      parameter qXm_difference[x,t];
      qXm_difference[x,t]$(1) = qXm.l[x,t] - qXm_saved[x,t];
      qXm_difference[x,t]$(abs(qXm_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(qXm_difference[x,t])),
        display qXm_difference;
      );
    
      parameter qCTurist_difference[c,t];
      qCTurist_difference[c,t]$(1) = qCTurist.l[c,t] - qCTurist_saved[c,t];
      qCTurist_difference[c,t]$(abs(qCTurist_difference[c,t]) < 1e-6) = 0;
      if (sum([c,t]$(1), abs(qCTurist_difference[c,t])),
        display qCTurist_difference;
      );
    
      parameter qXSkala_difference[x,t];
      qXSkala_difference[x,t]$(1) = qXSkala.l[x,t] - qXSkala_saved[x,t];
      qXSkala_difference[x,t]$(abs(qXSkala_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(qXSkala_difference[x,t])),
        display qXSkala_difference;
      );
    
      parameter qXTraek_difference[x,t];
      qXTraek_difference[x,t]$(1) = qXTraek.l[x,t] - qXTraek_saved[x,t];
      qXTraek_difference[x,t]$(abs(qXTraek_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(qXTraek_difference[x,t])),
        display qXTraek_difference;
      );
    
      parameter empty_group_dummy_difference[t];
      empty_group_dummy_difference[t]$(1) = empty_group_dummy.l[t] - empty_group_dummy_saved[t];
      empty_group_dummy_difference[t]$(abs(empty_group_dummy_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(empty_group_dummy_difference[t])),
        display empty_group_dummy_difference;
      );
    
      parameter rpXUdl2pXy_difference[x,t];
      rpXUdl2pXy_difference[x,t]$(1) = rpXUdl2pXy.l[x,t] - rpXUdl2pXy_saved[x,t];
      rpXUdl2pXy_difference[x,t]$(abs(rpXUdl2pXy_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(rpXUdl2pXy_difference[x,t])),
        display rpXUdl2pXy_difference;
      );
    
      parameter rpXy2pXUdl_difference[x,t];
      rpXy2pXUdl_difference[x,t]$(1) = rpXy2pXUdl.l[x,t] - rpXy2pXUdl_saved[x,t];
      rpXy2pXUdl_difference[x,t]$(abs(rpXy2pXUdl_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(rpXy2pXUdl_difference[x,t])),
        display rpXy2pXUdl_difference;
      );
    
      parameter uXy_difference[x,t];
      uXy_difference[x,t]$(1) = uXy.l[x,t] - uXy_saved[x,t];
      uXy_difference[x,t]$(abs(uXy_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(uXy_difference[x,t])),
        display uXy_difference;
      );
    
      parameter uCturisme_difference[c,t];
      uCturisme_difference[c,t]$(1) = uCturisme.l[c,t] - uCturisme_saved[c,t];
      uCturisme_difference[c,t]$(abs(uCturisme_difference[c,t]) < 1e-6) = 0;
      if (sum([c,t]$(1), abs(uCturisme_difference[c,t])),
        display uCturisme_difference;
      );
    
      parameter rpM2pXm_difference[x,t];
      rpM2pXm_difference[x,t]$(1) = rpM2pXm.l[x,t] - rpM2pXm_saved[x,t];
      rpM2pXm_difference[x,t]$(abs(rpM2pXm_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(rpM2pXm_difference[x,t])),
        display rpM2pXm_difference;
      );
    
      parameter dqLdnL_difference[s_,t];
      dqLdnL_difference[s_,t]$(1) = dqLdnL.l[s_,t] - dqLdnL_saved[s_,t];
      dqLdnL_difference[s_,t]$(abs(dqLdnL_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(dqLdnL_difference[s_,t])),
        display dqLdnL_difference;
      );
    
      parameter dqLLeaddnL_difference[sp,t];
      dqLLeaddnL_difference[sp,t]$(1) = dqLLeaddnL.l[sp,t] - dqLLeaddnL_saved[sp,t];
      dqLLeaddnL_difference[sp,t]$(abs(dqLLeaddnL_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(dqLLeaddnL_difference[sp,t])),
        display dqLLeaddnL_difference;
      );
    
      parameter vWHh_difference[a_,t];
      vWHh_difference[a_,t]$(1) = vWHh.l[a_,t] - vWHh_saved[a_,t];
      vWHh_difference[a_,t]$(abs(vWHh_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vWHh_difference[a_,t])),
        display vWHh_difference;
      );
    
      parameter vhW_difference[t];
      vhW_difference[t]$(1) = vhW.l[t] - vhW_saved[t];
      vhW_difference[t]$(abs(vhW_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vhW_difference[t])),
        display vhW_difference;
      );
    
      parameter vhWNy_difference[t];
      vhWNy_difference[t]$(1) = vhWNy.l[t] - vhWNy_saved[t];
      vhWNy_difference[t]$(abs(vhWNy_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vhWNy_difference[t])),
        display vhWNy_difference;
      );
    
      parameter vWUdl_difference[t];
      vWUdl_difference[t]$(1) = vWUdl.l[t] - vWUdl_saved[t];
      vWUdl_difference[t]$(abs(vWUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vWUdl_difference[t])),
        display vWUdl_difference;
      );
    
      parameter vhWForhandlet_difference[t];
      vhWForhandlet_difference[t]$(1) = vhWForhandlet.l[t] - vhWForhandlet_saved[t];
      vhWForhandlet_difference[t]$(abs(vhWForhandlet_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vhWForhandlet_difference[t])),
        display vhWForhandlet_difference;
      );
    
      parameter vVirkLoenPos_difference[t];
      vVirkLoenPos_difference[t]$(1) = vVirkLoenPos.l[t] - vVirkLoenPos_saved[t];
      vVirkLoenPos_difference[t]$(abs(vVirkLoenPos_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vVirkLoenPos_difference[t])),
        display vVirkLoenPos_difference;
      );
    
      parameter vVirkLoenPos0_difference[t];
      vVirkLoenPos0_difference[t]$(1) = vVirkLoenPos0.l[t] - vVirkLoenPos0_saved[t];
      vVirkLoenPos0_difference[t]$(abs(vVirkLoenPos0_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vVirkLoenPos0_difference[t])),
        display vVirkLoenPos0_difference;
      );
    
      parameter vVirkLoenNeg_difference[t];
      vVirkLoenNeg_difference[t]$(1) = vVirkLoenNeg.l[t] - vVirkLoenNeg_saved[t];
      vVirkLoenNeg_difference[t]$(abs(vVirkLoenNeg_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vVirkLoenNeg_difference[t])),
        display vVirkLoenNeg_difference;
      );
    
      parameter vVirkLoenNeg0_difference[t];
      vVirkLoenNeg0_difference[t]$(1) = vVirkLoenNeg0.l[t] - vVirkLoenNeg0_saved[t];
      vVirkLoenNeg0_difference[t]$(abs(vVirkLoenNeg0_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vVirkLoenNeg0_difference[t])),
        display vVirkLoenNeg0_difference;
      );
    
      parameter vFFLoenPos_difference[t];
      vFFLoenPos_difference[t]$(1) = vFFLoenPos.l[t] - vFFLoenPos_saved[t];
      vFFLoenPos_difference[t]$(abs(vFFLoenPos_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vFFLoenPos_difference[t])),
        display vFFLoenPos_difference;
      );
    
      parameter vFFLoenPos0_difference[t];
      vFFLoenPos0_difference[t]$(1) = vFFLoenPos0.l[t] - vFFLoenPos0_saved[t];
      vFFLoenPos0_difference[t]$(abs(vFFLoenPos0_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vFFLoenPos0_difference[t])),
        display vFFLoenPos0_difference;
      );
    
      parameter vFFLoenNeg_difference[t];
      vFFLoenNeg_difference[t]$(1) = vFFLoenNeg.l[t] - vFFLoenNeg_saved[t];
      vFFLoenNeg_difference[t]$(abs(vFFLoenNeg_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vFFLoenNeg_difference[t])),
        display vFFLoenNeg_difference;
      );
    
      parameter vFFLoenNeg0_difference[t];
      vFFLoenNeg0_difference[t]$(1) = vFFLoenNeg0.l[t] - vFFLoenNeg0_saved[t];
      vFFLoenNeg0_difference[t]$(abs(vFFLoenNeg0_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vFFLoenNeg0_difference[t])),
        display vFFLoenNeg0_difference;
      );
    
      parameter vW_difference[s_,t];
      vW_difference[s_,t]$(1) = vW.l[s_,t] - vW_saved[s_,t];
      vW_difference[s_,t]$(abs(vW_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vW_difference[s_,t])),
        display vW_difference;
      );
    
      parameter vSelvstLoen_difference[s_,t];
      vSelvstLoen_difference[s_,t]$(1) = vSelvstLoen.l[s_,t] - vSelvstLoen_saved[s_,t];
      vSelvstLoen_difference[s_,t]$(abs(vSelvstLoen_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vSelvstLoen_difference[s_,t])),
        display vSelvstLoen_difference;
      );
    
      parameter vLoensum_difference[s_,t];
      vLoensum_difference[s_,t]$(1) = vLoensum.l[s_,t] - vLoensum_saved[s_,t];
      vLoensum_difference[s_,t]$(abs(vLoensum_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vLoensum_difference[s_,t])),
        display vLoensum_difference;
      );
    
      parameter pL_difference[sp,t];
      pL_difference[sp,t]$(1) = pL.l[sp,t] - pL_saved[sp,t];
      pL_difference[sp,t]$(abs(pL_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(pL_difference[sp,t])),
        display pL_difference;
      );
    
      parameter rL2nL_difference[t];
      rL2nL_difference[t]$(1) = rL2nL.l[t] - rL2nL_saved[t];
      rL2nL_difference[t]$(abs(rL2nL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rL2nL_difference[t])),
        display rL2nL_difference;
      );
    
      parameter dOpslagOmk2dnL_difference[sp,t];
      dOpslagOmk2dnL_difference[sp,t]$(1) = dOpslagOmk2dnL.l[sp,t] - dOpslagOmk2dnL_saved[sp,t];
      dOpslagOmk2dnL_difference[sp,t]$(abs(dOpslagOmk2dnL_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(dOpslagOmk2dnL_difference[sp,t])),
        display dOpslagOmk2dnL_difference;
      );
    
      parameter dOpslagOmk2dnLLag_difference[sp,t];
      dOpslagOmk2dnLLag_difference[sp,t]$(1) = dOpslagOmk2dnLLag.l[sp,t] - dOpslagOmk2dnLLag_saved[sp,t];
      dOpslagOmk2dnLLag_difference[sp,t]$(abs(dOpslagOmk2dnLLag_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(dOpslagOmk2dnLLag_difference[sp,t])),
        display dOpslagOmk2dnLLag_difference;
      );
    
      parameter nSoegBaseHh_difference[a_,t];
      nSoegBaseHh_difference[a_,t]$(1) = nSoegBaseHh.l[a_,t] - nSoegBaseHh_saved[a_,t];
      nSoegBaseHh_difference[a_,t]$(abs(nSoegBaseHh_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(nSoegBaseHh_difference[a_,t])),
        display nSoegBaseHh_difference;
      );
    
      parameter nLHh_difference[a_,t];
      nLHh_difference[a_,t]$(1) = nLHh.l[a_,t] - nLHh_saved[a_,t];
      nLHh_difference[a_,t]$(abs(nLHh_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(nLHh_difference[a_,t])),
        display nLHh_difference;
      );
    
      parameter nSoegHh_difference[a_,t];
      nSoegHh_difference[a_,t]$(1) = nSoegHh.l[a_,t] - nSoegHh_saved[a_,t];
      nSoegHh_difference[a_,t]$(abs(nSoegHh_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(nSoegHh_difference[a_,t])),
        display nSoegHh_difference;
      );
    
      parameter fDeltag_difference[a,t];
      fDeltag_difference[a,t]$(1) = fDeltag.l[a,t] - fDeltag_saved[a,t];
      fDeltag_difference[a,t]$(abs(fDeltag_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(fDeltag_difference[a,t])),
        display fDeltag_difference;
      );
    
      parameter nLUdl_difference[t];
      nLUdl_difference[t]$(1) = nLUdl.l[t] - nLUdl_saved[t];
      nLUdl_difference[t]$(abs(nLUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(nLUdl_difference[t])),
        display nLUdl_difference;
      );
    
      parameter nSoegUdl_difference[t];
      nSoegUdl_difference[t]$(1) = nSoegUdl.l[t] - nSoegUdl_saved[t];
      nSoegUdl_difference[t]$(abs(nSoegUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(nSoegUdl_difference[t])),
        display nSoegUdl_difference;
      );
    
      parameter hLHh_difference[a_,t];
      hLHh_difference[a_,t]$(1) = hLHh.l[a_,t] - hLHh_saved[a_,t];
      hLHh_difference[a_,t]$(abs(hLHh_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(hLHh_difference[a_,t])),
        display hLHh_difference;
      );
    
      parameter hL_difference[t];
      hL_difference[t]$(1) = hL.l[t] - hL_saved[t];
      hL_difference[t]$(abs(hL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(hL_difference[t])),
        display hL_difference;
      );
    
      parameter hLUdl_difference[t];
      hLUdl_difference[t]$(1) = hLUdl.l[t] - hLUdl_saved[t];
      hLUdl_difference[t]$(abs(hLUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(hLUdl_difference[t])),
        display hLUdl_difference;
      );
    
      parameter rJobFinding_difference[t];
      rJobFinding_difference[t]$(1) = rJobFinding.l[t] - rJobFinding_saved[t];
      rJobFinding_difference[t]$(abs(rJobFinding_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rJobFinding_difference[t])),
        display rJobFinding_difference;
      );
    
      parameter rMatch_difference[t];
      rMatch_difference[t]$(1) = rMatch.l[t] - rMatch_saved[t];
      rMatch_difference[t]$(abs(rMatch_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rMatch_difference[t])),
        display rMatch_difference;
      );
    
      parameter rOpslag2soeg_difference[t];
      rOpslag2soeg_difference[t]$(1) = rOpslag2soeg.l[t] - rOpslag2soeg_saved[t];
      rOpslag2soeg_difference[t]$(abs(rOpslag2soeg_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOpslag2soeg_difference[t])),
        display rOpslag2soeg_difference;
      );
    
      parameter nOpslag_difference[s_,t];
      nOpslag_difference[s_,t]$(1) = nOpslag.l[s_,t] - nOpslag_saved[s_,t];
      nOpslag_difference[s_,t]$(abs(nOpslag_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(nOpslag_difference[s_,t])),
        display nOpslag_difference;
      );
    
      parameter rOpslagOmk_difference[s_,t];
      rOpslagOmk_difference[s_,t]$(1) = rOpslagOmk.l[s_,t] - rOpslagOmk_saved[s_,t];
      rOpslagOmk_difference[s_,t]$(abs(rOpslagOmk_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(rOpslagOmk_difference[s_,t])),
        display rOpslagOmk_difference;
      );
    
      parameter rSeparation_difference[a_,t];
      rSeparation_difference[a_,t]$(1) = rSeparation.l[a_,t] - rSeparation_saved[a_,t];
      rSeparation_difference[a_,t]$(abs(rSeparation_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(rSeparation_difference[a_,t])),
        display rSeparation_difference;
      );
    
      parameter fZh_difference[a,t];
      fZh_difference[a,t]$(1) = fZh.l[a,t] - fZh_saved[a,t];
      fZh_difference[a,t]$(abs(fZh_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(fZh_difference[a,t])),
        display fZh_difference;
      );
    
      parameter cZh_difference[a,t];
      cZh_difference[a,t]$(1) = cZh.l[a,t] - cZh_saved[a,t];
      cZh_difference[a,t]$(abs(cZh_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(cZh_difference[a,t])),
        display cZh_difference;
      );
    
      parameter nL_difference[s_,t];
      nL_difference[s_,t]$(1) = nL.l[s_,t] - nL_saved[s_,t];
      nL_difference[s_,t]$(abs(nL_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(nL_difference[s_,t])),
        display nL_difference;
      );
    
      parameter nPop_difference[a_,t];
      nPop_difference[a_,t]$(1) = nPop.l[a_,t] - nPop_saved[a_,t];
      nPop_difference[a_,t]$(abs(nPop_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(nPop_difference[a_,t])),
        display nPop_difference;
      );
    
      parameter nSoc_difference[soc_,t];
      nSoc_difference[soc_,t]$(1) = nSoc.l[soc_,t] - nSoc_saved[soc_,t];
      nSoc_difference[soc_,t]$(abs(nSoc_difference[soc_,t]) < 1e-6) = 0;
      if (sum([soc_,t]$(1), abs(nSoc_difference[soc_,t])),
        display nSoc_difference;
      );
    
      parameter rLedig_difference[t];
      rLedig_difference[t]$(1) = rLedig.l[t] - rLedig_saved[t];
      rLedig_difference[t]$(abs(rLedig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rLedig_difference[t])),
        display rLedig_difference;
      );
    
      parameter rLedigGab_difference[t];
      rLedigGab_difference[t]$(1) = rLedigGab.l[t] - rLedigGab_saved[t];
      rLedigGab_difference[t]$(abs(rLedigGab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rLedigGab_difference[t])),
        display rLedigGab_difference;
      );
    
      parameter fProdHh_difference[a_,t];
      fProdHh_difference[a_,t]$(1) = fProdHh.l[a_,t] - fProdHh_saved[a_,t];
      fProdHh_difference[a_,t]$(abs(fProdHh_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(fProdHh_difference[a_,t])),
        display fProdHh_difference;
      );
    
      parameter fW_difference[s_,t];
      fW_difference[s_,t]$(1) = fW.l[s_,t] - fW_saved[s_,t];
      fW_difference[s_,t]$(abs(fW_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(fW_difference[s_,t])),
        display fW_difference;
      );
    
      parameter mtInd_difference[a_,t];
      mtInd_difference[a_,t]$(1) = mtInd.l[a_,t] - mtInd_saved[a_,t];
      mtInd_difference[a_,t]$(abs(mtInd_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(mtInd_difference[a_,t])),
        display mtInd_difference;
      );
    
      parameter pY_difference[s_,t];
      pY_difference[s_,t]$(1) = pY.l[s_,t] - pY_saved[s_,t];
      pY_difference[s_,t]$(abs(pY_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(pY_difference[s_,t])),
        display pY_difference;
      );
    
      parameter pXUdl_difference[x_,t];
      pXUdl_difference[x_,t]$(1) = pXUdl.l[x_,t] - pXUdl_saved[x_,t];
      pXUdl_difference[x_,t]$(abs(pXUdl_difference[x_,t]) < 1e-6) = 0;
      if (sum([x_,t]$(1), abs(pXUdl_difference[x_,t])),
        display pXUdl_difference;
      );
    
      parameter pM_difference[s_,t];
      pM_difference[s_,t]$(1) = pM.l[s_,t] - pM_saved[s_,t];
      pM_difference[s_,t]$(abs(pM_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(pM_difference[s_,t])),
        display pM_difference;
      );
    
      parameter jrMarkup_difference[s_,t];
      jrMarkup_difference[s_,t]$(1) = jrMarkup.l[s_,t] - jrMarkup_saved[s_,t];
      jrMarkup_difference[s_,t]$(abs(jrMarkup_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(jrMarkup_difference[s_,t])),
        display jrMarkup_difference;
      );
    
      parameter rMarkup_difference[s_,t];
      rMarkup_difference[s_,t]$(1) = rMarkup.l[s_,t] - rMarkup_saved[s_,t];
      rMarkup_difference[s_,t]$(abs(rMarkup_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(rMarkup_difference[s_,t])),
        display rMarkup_difference;
      );
    
      parameter srMarkup_difference[s_,t];
      srMarkup_difference[s_,t]$(1) = srMarkup.l[s_,t] - srMarkup_saved[s_,t];
      srMarkup_difference[s_,t]$(abs(srMarkup_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(srMarkup_difference[s_,t])),
        display srMarkup_difference;
      );
    
      parameter rLUdn_difference[s_,t];
      rLUdn_difference[s_,t]$(1) = rLUdn.l[s_,t] - rLUdn_saved[s_,t];
      rLUdn_difference[s_,t]$(abs(rLUdn_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(rLUdn_difference[s_,t])),
        display rLUdn_difference;
      );
    
      parameter rKUdn_difference[k,s_,t];
      rKUdn_difference[k,s_,t]$(1) = rKUdn.l[k,s_,t] - rKUdn_saved[k,s_,t];
      rKUdn_difference[k,s_,t]$(abs(rKUdn_difference[k,s_,t]) < 1e-6) = 0;
      if (sum([k,s_,t]$(1), abs(rKUdn_difference[k,s_,t])),
        display rKUdn_difference;
      );
    
      parameter rKUdnSpBy_difference[t];
      rKUdnSpBy_difference[t]$(1) = rKUdnSpBy.l[t] - rKUdnSpBy_saved[t];
      rKUdnSpBy_difference[t]$(abs(rKUdnSpBy_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rKUdnSpBy_difference[t])),
        display rKUdnSpBy_difference;
      );
    
      parameter ErSkatAfskr_difference[k,sp,t];
      ErSkatAfskr_difference[k,sp,t]$(1) = ErSkatAfskr.l[k,sp,t] - ErSkatAfskr_saved[k,sp,t];
      ErSkatAfskr_difference[k,sp,t]$(abs(ErSkatAfskr_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(ErSkatAfskr_difference[k,sp,t])),
        display ErSkatAfskr_difference;
      );
    
      parameter qL_difference[s_,t];
      qL_difference[s_,t]$(1) = qL.l[s_,t] - qL_saved[s_,t];
      qL_difference[s_,t]$(abs(qL_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(qL_difference[s_,t])),
        display qL_difference;
      );
    
      parameter dKInstOmk2dK_difference[k,sp,t];
      dKInstOmk2dK_difference[k,sp,t]$(1) = dKInstOmk2dK.l[k,sp,t] - dKInstOmk2dK_saved[k,sp,t];
      dKInstOmk2dK_difference[k,sp,t]$(abs(dKInstOmk2dK_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(dKInstOmk2dK_difference[k,sp,t])),
        display dKInstOmk2dK_difference;
      );
    
      parameter dKInstOmk2dI_difference[k,sp,t];
      dKInstOmk2dI_difference[k,sp,t]$(1) = dKInstOmk2dI.l[k,sp,t] - dKInstOmk2dI_saved[k,sp,t];
      dKInstOmk2dI_difference[k,sp,t]$(abs(dKInstOmk2dI_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(dKInstOmk2dI_difference[k,sp,t])),
        display dKInstOmk2dI_difference;
      );
    
      parameter dKInstOmkLead2dI_difference[k,sp,t];
      dKInstOmkLead2dI_difference[k,sp,t]$(1) = dKInstOmkLead2dI.l[k,sp,t] - dKInstOmkLead2dI_saved[k,sp,t];
      dKInstOmkLead2dI_difference[k,sp,t]$(abs(dKInstOmkLead2dI_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(dKInstOmkLead2dI_difference[k,sp,t])),
        display dKInstOmkLead2dI_difference;
      );
    
      parameter pKL_difference[sp,t];
      pKL_difference[sp,t]$(1) = pKL.l[sp,t] - pKL_saved[sp,t];
      pKL_difference[sp,t]$(abs(pKL_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(pKL_difference[sp,t])),
        display pKL_difference;
      );
    
      parameter pKLB_difference[sp,t];
      pKLB_difference[sp,t]$(1) = pKLB.l[sp,t] - pKLB_saved[sp,t];
      pKLB_difference[sp,t]$(abs(pKLB_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(pKLB_difference[sp,t])),
        display pKLB_difference;
      );
    
      parameter pKLBR_difference[s_,t];
      pKLBR_difference[s_,t]$(1) = pKLBR.l[s_,t] - pKLBR_saved[s_,t];
      pKLBR_difference[s_,t]$(abs(pKLBR_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(pKLBR_difference[s_,t])),
        display pKLBR_difference;
      );
    
      parameter pK_difference[k,sp,t];
      pK_difference[k,sp,t]$(1) = pK.l[k,sp,t] - pK_saved[k,sp,t];
      pK_difference[k,sp,t]$(abs(pK_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(pK_difference[k,sp,t])),
        display pK_difference;
      );
    
      parameter pTobinsQ_difference[k,sp,t];
      pTobinsQ_difference[k,sp,t]$(1) = pTobinsQ.l[k,sp,t] - pTobinsQ_saved[k,sp,t];
      pTobinsQ_difference[k,sp,t]$(abs(pTobinsQ_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(pTobinsQ_difference[k,sp,t])),
        display pTobinsQ_difference;
      );
    
      parameter qKInstOmk_difference[i_,sp,t];
      qKInstOmk_difference[i_,sp,t]$(1) = qKInstOmk.l[i_,sp,t] - qKInstOmk_saved[i_,sp,t];
      qKInstOmk_difference[i_,sp,t]$(abs(qKInstOmk_difference[i_,sp,t]) < 1e-6) = 0;
      if (sum([i_,sp,t]$(1), abs(qKInstOmk_difference[i_,sp,t])),
        display qKInstOmk_difference;
      );
    
      parameter qKLBR_difference[sp,t];
      qKLBR_difference[sp,t]$(1) = qKLBR.l[sp,t] - qKLBR_saved[sp,t];
      qKLBR_difference[sp,t]$(abs(qKLBR_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(qKLBR_difference[sp,t])),
        display qKLBR_difference;
      );
    
      parameter qKLB_difference[sp,t];
      qKLB_difference[sp,t]$(1) = qKLB.l[sp,t] - qKLB_saved[sp,t];
      qKLB_difference[sp,t]$(abs(qKLB_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(qKLB_difference[sp,t])),
        display qKLB_difference;
      );
    
      parameter qKL_difference[sp,t];
      qKL_difference[sp,t]$(1) = qKL.l[sp,t] - qKL_saved[sp,t];
      qKL_difference[sp,t]$(abs(qKL_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(qKL_difference[sp,t])),
        display qKL_difference;
      );
    
      parameter qR_difference[r_,t];
      qR_difference[r_,t]$(1) = qR.l[r_,t] - qR_saved[r_,t];
      qR_difference[r_,t]$(abs(qR_difference[r_,t]) < 1e-6) = 0;
      if (sum([r_,t]$(1), abs(qR_difference[r_,t])),
        display qR_difference;
      );
    
      parameter qK_difference[k,s_,t];
      qK_difference[k,s_,t]$(1) = qK.l[k,s_,t] - qK_saved[k,s_,t];
      qK_difference[k,s_,t]$(abs(qK_difference[k,s_,t]) < 1e-6) = 0;
      if (sum([k,s_,t]$(1), abs(qK_difference[k,s_,t])),
        display qK_difference;
      );
    
      parameter qI_s_difference[i_,s_,t];
      qI_s_difference[i_,s_,t]$(1) = qI_s.l[i_,s_,t] - qI_s_saved[i_,s_,t];
      qI_s_difference[i_,s_,t]$(abs(qI_s_difference[i_,s_,t]) < 1e-6) = 0;
      if (sum([i_,s_,t]$(1), abs(qI_s_difference[i_,s_,t])),
        display qI_s_difference;
      );
    
      parameter qY_difference[s_,t];
      qY_difference[s_,t]$(1) = qY.l[s_,t] - qY_saved[s_,t];
      qY_difference[s_,t]$(abs(qY_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(qY_difference[s_,t])),
        display qY_difference;
      );
    
      parameter pOffAfskr_difference[i_,t];
      pOffAfskr_difference[i_,t]$(1) = pOffAfskr.l[i_,t] - pOffAfskr_saved[i_,t];
      pOffAfskr_difference[i_,t]$(abs(pOffAfskr_difference[i_,t]) < 1e-6) = 0;
      if (sum([i_,t]$(1), abs(pOffAfskr_difference[i_,t])),
        display pOffAfskr_difference;
      );
    
      parameter pOffNyInv_difference[t];
      pOffNyInv_difference[t]$(1) = pOffNyInv.l[t] - pOffNyInv_saved[t];
      pOffNyInv_difference[t]$(abs(pOffNyInv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(pOffNyInv_difference[t])),
        display pOffNyInv_difference;
      );
    
      parameter qOffAfskr_difference[i_,t];
      qOffAfskr_difference[i_,t]$(1) = qOffAfskr.l[i_,t] - qOffAfskr_saved[i_,t];
      qOffAfskr_difference[i_,t]$(abs(qOffAfskr_difference[i_,t]) < 1e-6) = 0;
      if (sum([i_,t]$(1), abs(qOffAfskr_difference[i_,t])),
        display qOffAfskr_difference;
      );
    
      parameter qOffNyInv_difference[t];
      qOffNyInv_difference[t]$(1) = qOffNyInv.l[t] - qOffNyInv_saved[t];
      qOffNyInv_difference[t]$(abs(qOffNyInv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qOffNyInv_difference[t])),
        display qOffNyInv_difference;
      );
    
      parameter vOffAfskr_difference[i_,t];
      vOffAfskr_difference[i_,t]$(1) = vOffAfskr.l[i_,t] - vOffAfskr_saved[i_,t];
      vOffAfskr_difference[i_,t]$(abs(vOffAfskr_difference[i_,t]) < 1e-6) = 0;
      if (sum([i_,t]$(1), abs(vOffAfskr_difference[i_,t])),
        display vOffAfskr_difference;
      );
    
      parameter vOffLR_difference[t];
      vOffLR_difference[t]$(1) = vOffLR.l[t] - vOffLR_saved[t];
      vOffLR_difference[t]$(abs(vOffLR_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffLR_difference[t])),
        display vOffLR_difference;
      );
    
      parameter vI_s_difference[i_,s_,t];
      vI_s_difference[i_,s_,t]$(1) = vI_s.l[i_,s_,t] - vI_s_saved[i_,s_,t];
      vI_s_difference[i_,s_,t]$(abs(vI_s_difference[i_,s_,t]) < 1e-6) = 0;
      if (sum([i_,s_,t]$(1), abs(vI_s_difference[i_,s_,t])),
        display vI_s_difference;
      );
    
      parameter vOffDirInv_difference[t];
      vOffDirInv_difference[t]$(1) = vOffDirInv.l[t] - vOffDirInv_saved[t];
      vOffDirInv_difference[t]$(abs(vOffDirInv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffDirInv_difference[t])),
        display vOffDirInv_difference;
      );
    
      parameter vOffIndirInv_difference[t];
      vOffIndirInv_difference[t]$(1) = vOffIndirInv.l[t] - vOffIndirInv_saved[t];
      vOffIndirInv_difference[t]$(abs(vOffIndirInv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffIndirInv_difference[t])),
        display vOffIndirInv_difference;
      );
    
      parameter vOffNyInv_difference[t];
      vOffNyInv_difference[t]$(1) = vOffNyInv.l[t] - vOffNyInv_saved[t];
      vOffNyInv_difference[t]$(abs(vOffNyInv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffNyInv_difference[t])),
        display vOffNyInv_difference;
      );
    
      parameter srvOffL2LR_difference[t];
      srvOffL2LR_difference[t]$(1) = srvOffL2LR.l[t] - srvOffL2LR_saved[t];
      srvOffL2LR_difference[t]$(abs(srvOffL2LR_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(srvOffL2LR_difference[t])),
        display srvOffL2LR_difference;
      );
    
      parameter rOffK2Y_difference[k,t];
      rOffK2Y_difference[k,t]$(1) = rOffK2Y.l[k,t] - rOffK2Y_saved[k,t];
      rOffK2Y_difference[k,t]$(abs(rOffK2Y_difference[k,t]) < 1e-6) = 0;
      if (sum([k,t]$(1), abs(rOffK2Y_difference[k,t])),
        display rOffK2Y_difference;
      );
    
      parameter rvOffDirInv2BNP_difference[t];
      rvOffDirInv2BNP_difference[t]$(1) = rvOffDirInv2BNP.l[t] - rvOffDirInv2BNP_saved[t];
      rvOffDirInv2BNP_difference[t]$(abs(rvOffDirInv2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rvOffDirInv2BNP_difference[t])),
        display rvOffDirInv2BNP_difference;
      );
    
      parameter vAktie_difference[t];
      vAktie_difference[t]$(1) = vAktie.l[t] - vAktie_saved[t];
      vAktie_difference[t]$(abs(vAktie_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vAktie_difference[t])),
        display vAktie_difference;
      );
    
      parameter vAktiex_difference[s_,t];
      vAktiex_difference[s_,t]$(1) = vAktiex.l[s_,t] - vAktiex_saved[s_,t];
      vAktiex_difference[s_,t]$(abs(vAktiex_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vAktiex_difference[s_,t])),
        display vAktiex_difference;
      );
    
      parameter vAktieRes_difference[t];
      vAktieRes_difference[t]$(1) = vAktieRes.l[t] - vAktieRes_saved[t];
      vAktieRes_difference[t]$(abs(vAktieRes_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vAktieRes_difference[t])),
        display vAktieRes_difference;
      );
    
      parameter vEBT_difference[s_,t];
      vEBT_difference[s_,t]$(1) = vEBT.l[s_,t] - vEBT_saved[s_,t];
      vEBT_difference[s_,t]$(abs(vEBT_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vEBT_difference[s_,t])),
        display vEBT_difference;
      );
    
      parameter vEBTx_difference[s_,t];
      vEBTx_difference[s_,t]$(1) = vEBTx.l[s_,t] - vEBTx_saved[s_,t];
      vEBTx_difference[s_,t]$(abs(vEBTx_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vEBTx_difference[s_,t])),
        display vEBTx_difference;
      );
    
      parameter vEBITDA_difference[s_,t];
      vEBITDA_difference[s_,t]$(1) = vEBITDA.l[s_,t] - vEBITDA_saved[s_,t];
      vEBITDA_difference[s_,t]$(abs(vEBITDA_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vEBITDA_difference[s_,t])),
        display vEBITDA_difference;
      );
    
      parameter vFCF_difference[s_,t];
      vFCF_difference[s_,t]$(1) = vFCF.l[s_,t] - vFCF_saved[s_,t];
      vFCF_difference[s_,t]$(abs(vFCF_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vFCF_difference[s_,t])),
        display vFCF_difference;
      );
    
      parameter vVirkRenter_difference[t];
      vVirkRenter_difference[t]$(1) = vVirkRenter.l[t] - vVirkRenter_saved[t];
      vVirkRenter_difference[t]$(abs(vVirkRenter_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vVirkRenter_difference[t])),
        display vVirkRenter_difference;
      );
    
      parameter vVirkOmv_difference[t];
      vVirkOmv_difference[t]$(1) = vVirkOmv.l[t] - vVirkOmv_saved[t];
      vVirkOmv_difference[t]$(abs(vVirkOmv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vVirkOmv_difference[t])),
        display vVirkOmv_difference;
      );
    
      parameter vVirkNFE_difference[t];
      vVirkNFE_difference[t]$(1) = vVirkNFE.l[t] - vVirkNFE_saved[t];
      vVirkNFE_difference[t]$(abs(vVirkNFE_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vVirkNFE_difference[t])),
        display vVirkNFE_difference;
      );
    
      parameter vKskat_difference[i_,s_,t];
      vKskat_difference[i_,s_,t]$(1) = vKskat.l[i_,s_,t] - vKskat_saved[i_,s_,t];
      vKskat_difference[i_,s_,t]$(abs(vKskat_difference[i_,s_,t]) < 1e-6) = 0;
      if (sum([i_,s_,t]$(1), abs(vKskat_difference[i_,s_,t])),
        display vKskat_difference;
      );
    
      parameter vAfskrFradrag_difference[s_,t];
      vAfskrFradrag_difference[s_,t]$(1) = vAfskrFradrag.l[s_,t] - vAfskrFradrag_saved[s_,t];
      vAfskrFradrag_difference[s_,t]$(abs(vAfskrFradrag_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vAfskrFradrag_difference[s_,t])),
        display vAfskrFradrag_difference;
      );
    
      parameter vDividender_difference[t];
      vDividender_difference[t]$(1) = vDividender.l[t] - vDividender_saved[t];
      vDividender_difference[t]$(abs(vDividender_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vDividender_difference[t])),
        display vDividender_difference;
      );
    
      parameter vUdstedelser_difference[t];
      vUdstedelser_difference[t]$(1) = vUdstedelser.l[t] - vUdstedelser_saved[t];
      vUdstedelser_difference[t]$(abs(vUdstedelser_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vUdstedelser_difference[t])),
        display vUdstedelser_difference;
      );
    
      parameter vVirkK_difference[s_,t];
      vVirkK_difference[s_,t]$(1) = vVirkK.l[s_,t] - vVirkK_saved[s_,t];
      vVirkK_difference[s_,t]$(abs(vVirkK_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vVirkK_difference[s_,t])),
        display vVirkK_difference;
      );
    
      parameter vVirk_difference[portf_,t];
      vVirk_difference[portf_,t]$(1) = vVirk.l[portf_,t] - vVirk_saved[portf_,t];
      vVirk_difference[portf_,t]$(abs(vVirk_difference[portf_,t]) < 1e-6) = 0;
      if (sum([portf_,t]$(1), abs(vVirk_difference[portf_,t])),
        display vVirk_difference;
      );
    
      parameter vVirkLaan_difference[s_,t];
      vVirkLaan_difference[s_,t]$(1) = vVirkLaan.l[s_,t] - vVirkLaan_saved[s_,t];
      vVirkLaan_difference[s_,t]$(abs(vVirkLaan_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vVirkLaan_difference[s_,t])),
        display vVirkLaan_difference;
      );
    
      parameter vVirkx_difference[t];
      vVirkx_difference[t]$(1) = vVirkx.l[t] - vVirkx_saved[t];
      vVirkx_difference[t]$(abs(vVirkx_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vVirkx_difference[t])),
        display vVirkx_difference;
      );
    
      parameter vPension_difference[akt,t];
      vPension_difference[akt,t]$(1) = vPension.l[akt,t] - vPension_saved[akt,t];
      vPension_difference[akt,t]$(abs(vPension_difference[akt,t]) < 1e-6) = 0;
      if (sum([akt,t]$(1), abs(vPension_difference[akt,t])),
        display vPension_difference;
      );
    
      parameter vtSelskabx_difference[s_,t];
      vtSelskabx_difference[s_,t]$(1) = vtSelskabx.l[s_,t] - vtSelskabx_saved[s_,t];
      vtSelskabx_difference[s_,t]$(abs(vtSelskabx_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vtSelskabx_difference[s_,t])),
        display vtSelskabx_difference;
      );
    
      parameter vVirkFinInd_difference[t];
      vVirkFinInd_difference[t]$(1) = vVirkFinInd.l[t] - vVirkFinInd_saved[t];
      vVirkFinInd_difference[t]$(abs(vVirkFinInd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vVirkFinInd_difference[t])),
        display vVirkFinInd_difference;
      );
    
      parameter rVirkDisk_difference[sp,t];
      rVirkDisk_difference[sp,t]$(1) = rVirkDisk.l[sp,t] - rVirkDisk_saved[sp,t];
      rVirkDisk_difference[sp,t]$(abs(rVirkDisk_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(rVirkDisk_difference[sp,t])),
        display rVirkDisk_difference;
      );
    
      parameter rAfkastKrav_difference[s_,t];
      rAfkastKrav_difference[s_,t]$(1) = rAfkastKrav.l[s_,t] - rAfkastKrav_saved[s_,t];
      rAfkastKrav_difference[s_,t]$(abs(rAfkastKrav_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(rAfkastKrav_difference[s_,t])),
        display rAfkastKrav_difference;
      );
    
      parameter rVirkxAfk_difference[t];
      rVirkxAfk_difference[t]$(1) = rVirkxAfk.l[t] - rVirkxAfk_saved[t];
      rVirkxAfk_difference[t]$(abs(rVirkxAfk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rVirkxAfk_difference[t])),
        display rVirkxAfk_difference;
      );
    
      parameter rRente_difference[portf,t];
      rRente_difference[portf,t]$(1) = rRente.l[portf,t] - rRente_saved[portf,t];
      rRente_difference[portf,t]$(abs(rRente_difference[portf,t]) < 1e-6) = 0;
      if (sum([portf,t]$(1), abs(rRente_difference[portf,t])),
        display rRente_difference;
      );
    
      parameter rOmv_difference[portf,t];
      rOmv_difference[portf,t]$(1) = rOmv.l[portf,t] - rOmv_saved[portf,t];
      rOmv_difference[portf,t]$(abs(rOmv_difference[portf,t]) < 1e-6) = 0;
      if (sum([portf,t]$(1), abs(rOmv_difference[portf,t])),
        display rOmv_difference;
      );
    
      parameter rLaan2K_difference[t];
      rLaan2K_difference[t]$(1) = rLaan2K.l[t] - rLaan2K_saved[t];
      rLaan2K_difference[t]$(abs(rLaan2K_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rLaan2K_difference[t])),
        display rLaan2K_difference;
      );
    
      parameter rIndlAktiePrem_difference[s_,t];
      rIndlAktiePrem_difference[s_,t]$(1) = rIndlAktiePrem.l[s_,t] - rIndlAktiePrem_saved[s_,t];
      rIndlAktiePrem_difference[s_,t]$(abs(rIndlAktiePrem_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(rIndlAktiePrem_difference[s_,t])),
        display rIndlAktiePrem_difference;
      );
    
      parameter rFinAccelPrem_difference[sp,t];
      rFinAccelPrem_difference[sp,t]$(1) = rFinAccelPrem.l[sp,t] - rFinAccelPrem_saved[sp,t];
      rFinAccelPrem_difference[sp,t]$(abs(rFinAccelPrem_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(rFinAccelPrem_difference[sp,t])),
        display rFinAccelPrem_difference;
      );
    
      parameter vFCFxRef_difference[sp,t];
      vFCFxRef_difference[sp,t]$(1) = vFCFxRef.l[sp,t] - vFCFxRef_saved[sp,t];
      vFCFxRef_difference[sp,t]$(abs(vFCFxRef_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(vFCFxRef_difference[sp,t])),
        display vFCFxRef_difference;
      );
    
      parameter EpC_difference[t];
      EpC_difference[t]$(1) = EpC.l[t] - EpC_saved[t];
      EpC_difference[t]$(abs(EpC_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(EpC_difference[t])),
        display EpC_difference;
      );
    
      parameter pBolig_difference[t];
      pBolig_difference[t]$(1) = pBolig.l[t] - pBolig_saved[t];
      pBolig_difference[t]$(abs(pBolig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(pBolig_difference[t])),
        display pBolig_difference;
      );
    
      parameter pLand_difference[t];
      pLand_difference[t]$(1) = pLand.l[t] - pLand_saved[t];
      pLand_difference[t]$(abs(pLand_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(pLand_difference[t])),
        display pLand_difference;
      );
    
      parameter pC_difference[c_,t];
      pC_difference[c_,t]$(1) = pC.l[c_,t] - pC_saved[c_,t];
      pC_difference[c_,t]$(abs(pC_difference[c_,t]) < 1e-6) = 0;
      if (sum([c_,t]$(1), abs(pC_difference[c_,t])),
        display pC_difference;
      );
    
      parameter EpBolig_difference[t];
      EpBolig_difference[t]$(1) = EpBolig.l[t] - EpBolig_saved[t];
      EpBolig_difference[t]$(abs(EpBolig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(EpBolig_difference[t])),
        display EpBolig_difference;
      );
    
      parameter EpLand_difference[t];
      EpLand_difference[t]$(1) = EpLand.l[t] - EpLand_saved[t];
      EpLand_difference[t]$(abs(EpLand_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(EpLand_difference[t])),
        display EpLand_difference;
      );
    
      parameter pBoligUC_difference[a,t];
      pBoligUC_difference[a,t]$(1) = pBoligUC.l[a,t] - pBoligUC_saved[a,t];
      pBoligUC_difference[a,t]$(abs(pBoligUC_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(pBoligUC_difference[a,t])),
        display pBoligUC_difference;
      );
    
      parameter qC_difference[c_,t];
      qC_difference[c_,t]$(1) = qC.l[c_,t] - qC_saved[c_,t];
      qC_difference[c_,t]$(abs(qC_difference[c_,t]) < 1e-6) = 0;
      if (sum([c_,t]$(1), abs(qC_difference[c_,t])),
        display qC_difference;
      );
    
      parameter qC_a_difference[a,t];
      qC_a_difference[a,t]$(1) = qC_a.l[a,t] - qC_a_saved[a,t];
      qC_a_difference[a,t]$(abs(qC_a_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(qC_a_difference[a,t])),
        display qC_a_difference;
      );
    
      parameter qCR_difference[a_,t];
      qCR_difference[a_,t]$(1) = qCR.l[a_,t] - qCR_saved[a_,t];
      qCR_difference[a_,t]$(abs(qCR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(qCR_difference[a_,t])),
        display qCR_difference;
      );
    
      parameter qCHtM_difference[a_,t];
      qCHtM_difference[a_,t]$(1) = qCHtM.l[a_,t] - qCHtM_saved[a_,t];
      qCHtM_difference[a_,t]$(abs(qCHtM_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(qCHtM_difference[a_,t])),
        display qCHtM_difference;
      );
    
      parameter qCRxRef_difference[a,t];
      qCRxRef_difference[a,t]$(1) = qCRxRef.l[a,t] - qCRxRef_saved[a,t];
      qCRxRef_difference[a,t]$(abs(qCRxRef_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(qCRxRef_difference[a,t])),
        display qCRxRef_difference;
      );
    
      parameter qCHtMxRef_difference[a_,t];
      qCHtMxRef_difference[a_,t]$(1) = qCHtMxRef.l[a_,t] - qCHtMxRef_saved[a_,t];
      qCHtMxRef_difference[a_,t]$(abs(qCHtMxRef_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(qCHtMxRef_difference[a_,t])),
        display qCHtMxRef_difference;
      );
    
      parameter qBiler_difference[t];
      qBiler_difference[t]$(1) = qBiler.l[t] - qBiler_saved[t];
      qBiler_difference[t]$(abs(qBiler_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qBiler_difference[t])),
        display qBiler_difference;
      );
    
      parameter qBoligHtM_difference[a_,t];
      qBoligHtM_difference[a_,t]$(1) = qBoligHtM.l[a_,t] - qBoligHtM_saved[a_,t];
      qBoligHtM_difference[a_,t]$(abs(qBoligHtM_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(qBoligHtM_difference[a_,t])),
        display qBoligHtM_difference;
      );
    
      parameter qBoligHtMxRef_difference[a_,t];
      qBoligHtMxRef_difference[a_,t]$(1) = qBoligHtMxRef.l[a_,t] - qBoligHtMxRef_saved[a_,t];
      qBoligHtMxRef_difference[a_,t]$(abs(qBoligHtMxRef_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(qBoligHtMxRef_difference[a_,t])),
        display qBoligHtMxRef_difference;
      );
    
      parameter qBoligR_difference[a_,t];
      qBoligR_difference[a_,t]$(1) = qBoligR.l[a_,t] - qBoligR_saved[a_,t];
      qBoligR_difference[a_,t]$(abs(qBoligR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(qBoligR_difference[a_,t])),
        display qBoligR_difference;
      );
    
      parameter qBolig_difference[a_,t];
      qBolig_difference[a_,t]$(1) = qBolig.l[a_,t] - qBolig_saved[a_,t];
      qBolig_difference[a_,t]$(abs(qBolig_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(qBolig_difference[a_,t])),
        display qBolig_difference;
      );
    
      parameter qBoligRxRef_difference[a_,t];
      qBoligRxRef_difference[a_,t]$(1) = qBoligRxRef.l[a_,t] - qBoligRxRef_saved[a_,t];
      qBoligRxRef_difference[a_,t]$(abs(qBoligRxRef_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(qBoligRxRef_difference[a_,t])),
        display qBoligRxRef_difference;
      );
    
      parameter qYBolig_difference[t];
      qYBolig_difference[t]$(1) = qYBolig.l[t] - qYBolig_saved[t];
      qYBolig_difference[t]$(abs(qYBolig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qYBolig_difference[t])),
        display qYBolig_difference;
      );
    
      parameter qIBoligInstOmk_difference[t];
      qIBoligInstOmk_difference[t]$(1) = qIBoligInstOmk.l[t] - qIBoligInstOmk_saved[t];
      qIBoligInstOmk_difference[t]$(abs(qIBoligInstOmk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qIBoligInstOmk_difference[t])),
        display qIBoligInstOmk_difference;
      );
    
      parameter qLandSalg_difference[t];
      qLandSalg_difference[t]$(1) = qLandSalg.l[t] - qLandSalg_saved[t];
      qLandSalg_difference[t]$(abs(qLandSalg_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qLandSalg_difference[t])),
        display qLandSalg_difference;
      );
    
      parameter qKBolig_difference[t];
      qKBolig_difference[t]$(1) = qKBolig.l[t] - qKBolig_saved[t];
      qKBolig_difference[t]$(abs(qKBolig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qKBolig_difference[t])),
        display qKBolig_difference;
      );
    
      parameter qIBolig_difference[t];
      qIBolig_difference[t]$(1) = qIBolig.l[t] - qIBolig_saved[t];
      qIBolig_difference[t]$(abs(qIBolig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qIBolig_difference[t])),
        display qIBolig_difference;
      );
    
      parameter qNytte_difference[a,t];
      qNytte_difference[a,t]$(1) = qNytte.l[a,t] - qNytte_saved[a,t];
      qNytte_difference[a,t]$(abs(qNytte_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(qNytte_difference[a,t])),
        display qNytte_difference;
      );
    
      parameter qArvBase_difference[a,t];
      qArvBase_difference[a,t]$(1) = qArvBase.l[a,t] - qArvBase_saved[a,t];
      qArvBase_difference[a,t]$(abs(qArvBase_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(qArvBase_difference[a,t])),
        display qArvBase_difference;
      );
    
      parameter qFormueBase_difference[a,t];
      qFormueBase_difference[a,t]$(1) = qFormueBase.l[a,t] - qFormueBase_saved[a,t];
      qFormueBase_difference[a,t]$(abs(qFormueBase_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(qFormueBase_difference[a,t])),
        display qFormueBase_difference;
      );
    
      parameter vC_a_difference[a,t];
      vC_a_difference[a,t]$(1) = vC_a.l[a,t] - vC_a_saved[a,t];
      vC_a_difference[a,t]$(abs(vC_a_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(vC_a_difference[a,t])),
        display vC_a_difference;
      );
    
      parameter vHhx_difference[a_,t];
      vHhx_difference[a_,t]$(1) = vHhx.l[a_,t] - vHhx_saved[a_,t];
      vHhx_difference[a_,t]$(abs(vHhx_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhx_difference[a_,t])),
        display vHhx_difference;
      );
    
      parameter vCLejeBolig_difference[a_,t];
      vCLejeBolig_difference[a_,t]$(1) = vCLejeBolig.l[a_,t] - vCLejeBolig_saved[a_,t];
      vCLejeBolig_difference[a_,t]$(abs(vCLejeBolig_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vCLejeBolig_difference[a_,t])),
        display vCLejeBolig_difference;
      );
    
      parameter vArvGivet_difference[a,t];
      vArvGivet_difference[a,t]$(1) = vArvGivet.l[a,t] - vArvGivet_saved[a,t];
      vArvGivet_difference[a,t]$(abs(vArvGivet_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(vArvGivet_difference[a,t])),
        display vArvGivet_difference;
      );
    
      parameter vArv_difference[a_,t];
      vArv_difference[a_,t]$(1) = vArv.l[a_,t] - vArv_saved[a_,t];
      vArv_difference[a_,t]$(abs(vArv_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vArv_difference[a_,t])),
        display vArv_difference;
      );
    
      parameter vtArv_difference[a_,t];
      vtArv_difference[a_,t]$(1) = vtArv.l[a_,t] - vtArv_saved[a_,t];
      vtArv_difference[a_,t]$(abs(vtArv_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtArv_difference[a_,t])),
        display vtArv_difference;
      );
    
      parameter vtHhx_difference[a_,t];
      vtHhx_difference[a_,t]$(1) = vtHhx.l[a_,t] - vtHhx_saved[a_,t];
      vtHhx_difference[a_,t]$(abs(vtHhx_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtHhx_difference[a_,t])),
        display vtHhx_difference;
      );
    
      parameter vBoligUdgift_difference[a_,t];
      vBoligUdgift_difference[a_,t]$(1) = vBoligUdgift.l[a_,t] - vBoligUdgift_saved[a_,t];
      vBoligUdgift_difference[a_,t]$(abs(vBoligUdgift_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vBoligUdgift_difference[a_,t])),
        display vBoligUdgift_difference;
      );
    
      parameter vBoligUdgiftHtM_difference[a_,t];
      vBoligUdgiftHtM_difference[a_,t]$(1) = vBoligUdgiftHtM.l[a_,t] - vBoligUdgiftHtM_saved[a_,t];
      vBoligUdgiftHtM_difference[a_,t]$(abs(vBoligUdgiftHtM_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vBoligUdgiftHtM_difference[a_,t])),
        display vBoligUdgiftHtM_difference;
      );
    
      parameter vBoligUdgiftArv_difference[t];
      vBoligUdgiftArv_difference[t]$(1) = vBoligUdgiftArv.l[t] - vBoligUdgiftArv_saved[t];
      vBoligUdgiftArv_difference[t]$(abs(vBoligUdgiftArv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBoligUdgiftArv_difference[t])),
        display vBoligUdgiftArv_difference;
      );
    
      parameter vHhNFErest_difference[a_,t];
      vHhNFErest_difference[a_,t]$(1) = vHhNFErest.l[a_,t] - vHhNFErest_saved[a_,t];
      vHhNFErest_difference[a_,t]$(abs(vHhNFErest_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhNFErest_difference[a_,t])),
        display vHhNFErest_difference;
      );
    
      parameter jvHhNFErest_difference[a_,t];
      jvHhNFErest_difference[a_,t]$(1) = jvHhNFErest.l[a_,t] - jvHhNFErest_saved[a_,t];
      jvHhNFErest_difference[a_,t]$(abs(jvHhNFErest_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(jvHhNFErest_difference[a_,t])),
        display jvHhNFErest_difference;
      );
    
      parameter vBoernFraHh_difference[a,t];
      vBoernFraHh_difference[a,t]$(1) = vBoernFraHh.l[a,t] - vBoernFraHh_saved[a,t];
      vBoernFraHh_difference[a,t]$(abs(vBoernFraHh_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(vBoernFraHh_difference[a,t])),
        display vBoernFraHh_difference;
      );
    
      parameter vHhTilBoern_difference[a_,t];
      vHhTilBoern_difference[a_,t]$(1) = vHhTilBoern.l[a_,t] - vHhTilBoern_saved[a_,t];
      vHhTilBoern_difference[a_,t]$(abs(vHhTilBoern_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhTilBoern_difference[a_,t])),
        display vHhTilBoern_difference;
      );
    
      parameter vBolig_difference[a_,t];
      vBolig_difference[a_,t]$(1) = vBolig.l[a_,t] - vBolig_saved[a_,t];
      vBolig_difference[a_,t]$(abs(vBolig_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vBolig_difference[a_,t])),
        display vBolig_difference;
      );
    
      parameter vBoligHtM_difference[a_,t];
      vBoligHtM_difference[a_,t]$(1) = vBoligHtM.l[a_,t] - vBoligHtM_saved[a_,t];
      vBoligHtM_difference[a_,t]$(abs(vBoligHtM_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vBoligHtM_difference[a_,t])),
        display vBoligHtM_difference;
      );
    
      parameter vKBolig_difference[t];
      vKBolig_difference[t]$(1) = vKBolig.l[t] - vKBolig_saved[t];
      vKBolig_difference[t]$(abs(vKBolig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vKBolig_difference[t])),
        display vKBolig_difference;
      );
    
      parameter vIBolig_difference[t];
      vIBolig_difference[t]$(1) = vIBolig.l[t] - vIBolig_saved[t];
      vIBolig_difference[t]$(abs(vIBolig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vIBolig_difference[t])),
        display vIBolig_difference;
      );
    
      parameter vHhInvestx_difference[a_,t];
      vHhInvestx_difference[a_,t]$(1) = vHhInvestx.l[a_,t] - vHhInvestx_saved[a_,t];
      vHhInvestx_difference[a_,t]$(abs(vHhInvestx_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhInvestx_difference[a_,t])),
        display vHhInvestx_difference;
      );
    
      parameter vSelvstKapInd_difference[a_,t];
      vSelvstKapInd_difference[a_,t]$(1) = vSelvstKapInd.l[a_,t] - vSelvstKapInd_saved[a_,t];
      vSelvstKapInd_difference[a_,t]$(abs(vSelvstKapInd_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vSelvstKapInd_difference[a_,t])),
        display vSelvstKapInd_difference;
      );
    
      parameter vArvKorrektion_difference[a_,t];
      vArvKorrektion_difference[a_,t]$(1) = vArvKorrektion.l[a_,t] - vArvKorrektion_saved[a_,t];
      vArvKorrektion_difference[a_,t]$(abs(vArvKorrektion_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vArvKorrektion_difference[a_,t])),
        display vArvKorrektion_difference;
      );
    
      parameter rDisk_difference[a,t];
      rDisk_difference[a,t]$(1) = rDisk.l[a,t] - rDisk_saved[a,t];
      rDisk_difference[a,t]$(abs(rDisk_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(rDisk_difference[a,t])),
        display rDisk_difference;
      );
    
      parameter rKLeje2Bolig_difference[t];
      rKLeje2Bolig_difference[t]$(1) = rKLeje2Bolig.l[t] - rKLeje2Bolig_saved[t];
      rKLeje2Bolig_difference[t]$(abs(rKLeje2Bolig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rKLeje2Bolig_difference[t])),
        display rKLeje2Bolig_difference;
      );
    
      parameter rvCLejeBolig_difference[a_,t];
      rvCLejeBolig_difference[a_,t]$(1) = rvCLejeBolig.l[a_,t] - rvCLejeBolig_saved[a_,t];
      rvCLejeBolig_difference[a_,t]$(abs(rvCLejeBolig_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(rvCLejeBolig_difference[a_,t])),
        display rvCLejeBolig_difference;
      );
    
      parameter fHh_difference[a,t];
      fHh_difference[a,t]$(1) = fHh.l[a,t] - fHh_saved[a,t];
      fHh_difference[a,t]$(abs(fHh_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(fHh_difference[a,t])),
        display fHh_difference;
      );
    
      parameter uBolig_difference[a,t];
      uBolig_difference[a,t]$(1) = uBolig.l[a,t] - uBolig_saved[a,t];
      uBolig_difference[a,t]$(abs(uBolig_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uBolig_difference[a,t])),
        display uBolig_difference;
      );
    
      parameter uBoligHtM_difference[a,t];
      uBoligHtM_difference[a,t]$(1) = uBoligHtM.l[a,t] - uBoligHtM_saved[a,t];
      uBoligHtM_difference[a,t]$(abs(uBoligHtM_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uBoligHtM_difference[a,t])),
        display uBoligHtM_difference;
      );
    
      parameter fBoligUdgift_difference[a,t];
      fBoligUdgift_difference[a,t]$(1) = fBoligUdgift.l[a,t] - fBoligUdgift_saved[a,t];
      fBoligUdgift_difference[a,t]$(abs(fBoligUdgift_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(fBoligUdgift_difference[a,t])),
        display fBoligUdgift_difference;
      );
    
      parameter mUBolig_difference[a,t];
      mUBolig_difference[a,t]$(1) = mUBolig.l[a,t] - mUBolig_saved[a,t];
      mUBolig_difference[a,t]$(abs(mUBolig_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(mUBolig_difference[a,t])),
        display mUBolig_difference;
      );
    
      parameter dqIBoligInstOmk_difference[t];
      dqIBoligInstOmk_difference[t]$(1) = dqIBoligInstOmk.l[t] - dqIBoligInstOmk_saved[t];
      dqIBoligInstOmk_difference[t]$(abs(dqIBoligInstOmk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(dqIBoligInstOmk_difference[t])),
        display dqIBoligInstOmk_difference;
      );
    
      parameter mUC_difference[a,t];
      mUC_difference[a,t]$(1) = mUC.l[a,t] - mUC_saved[a,t];
      mUC_difference[a,t]$(abs(mUC_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(mUC_difference[a,t])),
        display mUC_difference;
      );
    
      parameter EmUC_difference[a,t];
      EmUC_difference[a,t]$(1) = EmUC.l[a,t] - EmUC_saved[a,t];
      EmUC_difference[a,t]$(abs(EmUC_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(EmUC_difference[a,t])),
        display EmUC_difference;
      );
    
      parameter uC_difference[c_,t];
      uC_difference[c_,t]$(1) = uC.l[c_,t] - uC_saved[c_,t];
      uC_difference[c_,t]$(abs(uC_difference[c_,t]) < 1e-6) = 0;
      if (sum([c_,t]$(1), abs(uC_difference[c_,t])),
        display uC_difference;
      );
    
      parameter fMigration_difference[a_,t];
      fMigration_difference[a_,t]$(1) = fMigration.l[a_,t] - fMigration_saved[a_,t];
      fMigration_difference[a_,t]$(abs(fMigration_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(fMigration_difference[a_,t])),
        display fMigration_difference;
      );
    
      parameter uBoernFraHh_difference[a,t];
      uBoernFraHh_difference[a,t]$(1) = uBoernFraHh.l[a,t] - uBoernFraHh_saved[a,t];
      uBoernFraHh_difference[a,t]$(abs(uBoernFraHh_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uBoernFraHh_difference[a,t])),
        display uBoernFraHh_difference;
      );
    
      parameter dFormue_difference[a_,t];
      dFormue_difference[a_,t]$(1) = dFormue.l[a_,t] - dFormue_saved[a_,t];
      dFormue_difference[a_,t]$(abs(dFormue_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(dFormue_difference[a_,t])),
        display dFormue_difference;
      );
    
      parameter jvHhx_difference[a_,t];
      jvHhx_difference[a_,t]$(1) = jvHhx.l[a_,t] - jvHhx_saved[a_,t];
      jvHhx_difference[a_,t]$(abs(jvHhx_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(jvHhx_difference[a_,t])),
        display jvHhx_difference;
      );
    
      parameter vPrimSaldo_difference[t];
      vPrimSaldo_difference[t]$(1) = vPrimSaldo.l[t] - vPrimSaldo_saved[t];
      vPrimSaldo_difference[t]$(abs(vPrimSaldo_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vPrimSaldo_difference[t])),
        display vPrimSaldo_difference;
      );
    
      parameter vSaldo_difference[t];
      vSaldo_difference[t]$(1) = vSaldo.l[t] - vSaldo_saved[t];
      vSaldo_difference[t]$(abs(vSaldo_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vSaldo_difference[t])),
        display vSaldo_difference;
      );
    
      parameter vOff_difference[portf_,t];
      vOff_difference[portf_,t]$(1) = vOff.l[portf_,t] - vOff_saved[portf_,t];
      vOff_difference[portf_,t]$(abs(vOff_difference[portf_,t]) < 1e-6) = 0;
      if (sum([portf_,t]$(1), abs(vOff_difference[portf_,t])),
        display vOff_difference;
      );
    
      parameter vOffOmv_difference[t];
      vOffOmv_difference[t]$(1) = vOffOmv.l[t] - vOffOmv_saved[t];
      vOffOmv_difference[t]$(abs(vOffOmv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffOmv_difference[t])),
        display vOffOmv_difference;
      );
    
      parameter vOffNetRenter_difference[t];
      vOffNetRenter_difference[t]$(1) = vOffNetRenter.l[t] - vOffNetRenter_saved[t];
      vOffNetRenter_difference[t]$(abs(vOffNetRenter_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffNetRenter_difference[t])),
        display vOffNetRenter_difference;
      );
    
      parameter vNROffNetRenter_difference[t];
      vNROffNetRenter_difference[t]$(1) = vNROffNetRenter.l[t] - vNROffNetRenter_saved[t];
      vNROffNetRenter_difference[t]$(abs(vNROffNetRenter_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vNROffNetRenter_difference[t])),
        display vNROffNetRenter_difference;
      );
    
      parameter vOffRenteInd_difference[t];
      vOffRenteInd_difference[t]$(1) = vOffRenteInd.l[t] - vOffRenteInd_saved[t];
      vOffRenteInd_difference[t]$(abs(vOffRenteInd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffRenteInd_difference[t])),
        display vOffRenteInd_difference;
      );
    
      parameter vOffRenteUd_difference[t];
      vOffRenteUd_difference[t]$(1) = vOffRenteUd.l[t] - vOffRenteUd_saved[t];
      vOffRenteUd_difference[t]$(abs(vOffRenteUd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffRenteUd_difference[t])),
        display vOffRenteUd_difference;
      );
    
      parameter vOffNetFormue_difference[t];
      vOffNetFormue_difference[t]$(1) = vOffNetFormue.l[t] - vOffNetFormue_saved[t];
      vOffNetFormue_difference[t]$(abs(vOffNetFormue_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffNetFormue_difference[t])),
        display vOffNetFormue_difference;
      );
    
      parameter vOffPas_difference[t];
      vOffPas_difference[t]$(1) = vOffPas.l[t] - vOffPas_saved[t];
      vOffPas_difference[t]$(abs(vOffPas_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffPas_difference[t])),
        display vOffPas_difference;
      );
    
      parameter vOffY2C_difference[t];
      vOffY2C_difference[t]$(1) = vOffY2C.l[t] - vOffY2C_saved[t];
      vOffY2C_difference[t]$(abs(vOffY2C_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffY2C_difference[t])),
        display vOffY2C_difference;
      );
    
      parameter vSatsIndeks_difference[t];
      vSatsIndeks_difference[t]$(1) = vSatsIndeks.l[t] - vSatsIndeks_saved[t];
      vSatsIndeks_difference[t]$(abs(vSatsIndeks_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vSatsIndeks_difference[t])),
        display vSatsIndeks_difference;
      );
    
      parameter rOffRenteUd_difference[t];
      rOffRenteUd_difference[t]$(1) = rOffRenteUd.l[t] - rOffRenteUd_saved[t];
      rOffRenteUd_difference[t]$(abs(rOffRenteUd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffRenteUd_difference[t])),
        display rOffRenteUd_difference;
      );
    
      parameter nvBNP_difference[t];
      nvBNP_difference[t]$(1) = nvBNP.l[t] - nvBNP_saved[t];
      nvBNP_difference[t]$(abs(nvBNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(nvBNP_difference[t])),
        display nvBNP_difference;
      );
    
      parameter nvPrimSaldo_difference[t];
      nvPrimSaldo_difference[t]$(1) = nvPrimSaldo.l[t] - nvPrimSaldo_saved[t];
      nvPrimSaldo_difference[t]$(abs(nvPrimSaldo_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(nvPrimSaldo_difference[t])),
        display nvPrimSaldo_difference;
      );
    
      parameter nvtLukning_difference[t];
      nvtLukning_difference[t]$(1) = nvtLukning.l[t] - nvtLukning_saved[t];
      nvtLukning_difference[t]$(abs(nvtLukning_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(nvtLukning_difference[t])),
        display nvtLukning_difference;
      );
    
      parameter nvGLukning_difference[t];
      nvGLukning_difference[t]$(1) = nvGLukning.l[t] - nvGLukning_saved[t];
      nvGLukning_difference[t]$(abs(nvGLukning_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(nvGLukning_difference[t])),
        display nvGLukning_difference;
      );
    
      parameter rHBI_difference[t];
      rHBI_difference[t]$(1) = rHBI.l[t] - rHBI_saved[t];
      rHBI_difference[t]$(abs(rHBI_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rHBI_difference[t])),
        display rHBI_difference;
      );
    
      parameter fHBIDisk_difference[t];
      fHBIDisk_difference[t]$(1) = fHBIDisk.l[t] - fHBIDisk_saved[t];
      fHBIDisk_difference[t]$(abs(fHBIDisk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(fHBIDisk_difference[t])),
        display fHBIDisk_difference;
      );
    
      parameter rOffRenteInd_difference[t];
      rOffRenteInd_difference[t]$(1) = rOffRenteInd.l[t] - rOffRenteInd_saved[t];
      rOffRenteInd_difference[t]$(abs(rOffRenteInd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffRenteInd_difference[t])),
        display rOffRenteInd_difference;
      );
    
      parameter rOffAkt2BNP_difference[t];
      rOffAkt2BNP_difference[t]$(1) = rOffAkt2BNP.l[t] - rOffAkt2BNP_saved[t];
      rOffAkt2BNP_difference[t]$(abs(rOffAkt2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffAkt2BNP_difference[t])),
        display rOffAkt2BNP_difference;
      );
    
      parameter vOffPrimInd_difference[t];
      vOffPrimInd_difference[t]$(1) = vOffPrimInd.l[t] - vOffPrimInd_saved[t];
      vOffPrimInd_difference[t]$(abs(vOffPrimInd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffPrimInd_difference[t])),
        display vOffPrimInd_difference;
      );
    
      parameter vtY_difference[t];
      vtY_difference[t]$(1) = vtY.l[t] - vtY_saved[t];
      vtY_difference[t]$(abs(vtY_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtY_difference[t])),
        display vtY_difference;
      );
    
      parameter vtYRest_difference[t];
      vtYRest_difference[t]$(1) = vtYRest.l[t] - vtYRest_saved[t];
      vtYRest_difference[t]$(abs(vtYRest_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtYRest_difference[t])),
        display vtYRest_difference;
      );
    
      parameter vtDirekte_difference[t];
      vtDirekte_difference[t]$(1) = vtDirekte.l[t] - vtDirekte_saved[t];
      vtDirekte_difference[t]$(abs(vtDirekte_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtDirekte_difference[t])),
        display vtDirekte_difference;
      );
    
      parameter vtKilde_difference[t];
      vtKilde_difference[t]$(1) = vtKilde.l[t] - vtKilde_saved[t];
      vtKilde_difference[t]$(abs(vtKilde_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtKilde_difference[t])),
        display vtKilde_difference;
      );
    
      parameter vtBund_difference[a_,t];
      vtBund_difference[a_,t]$(1) = vtBund.l[a_,t] - vtBund_saved[a_,t];
      vtBund_difference[a_,t]$(abs(vtBund_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtBund_difference[a_,t])),
        display vtBund_difference;
      );
    
      parameter vtTop_difference[a_,t];
      vtTop_difference[a_,t]$(1) = vtTop.l[a_,t] - vtTop_saved[a_,t];
      vtTop_difference[a_,t]$(abs(vtTop_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtTop_difference[a_,t])),
        display vtTop_difference;
      );
    
      parameter vtKommune_difference[a_,t];
      vtKommune_difference[a_,t]$(1) = vtKommune.l[a_,t] - vtKommune_saved[a_,t];
      vtKommune_difference[a_,t]$(abs(vtKommune_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtKommune_difference[a_,t])),
        display vtKommune_difference;
      );
    
      parameter vtEjd_difference[a_,t];
      vtEjd_difference[a_,t]$(1) = vtEjd.l[a_,t] - vtEjd_saved[a_,t];
      vtEjd_difference[a_,t]$(abs(vtEjd_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtEjd_difference[a_,t])),
        display vtEjd_difference;
      );
    
      parameter vtAktie_difference[a_,t];
      vtAktie_difference[a_,t]$(1) = vtAktie.l[a_,t] - vtAktie_saved[a_,t];
      vtAktie_difference[a_,t]$(abs(vtAktie_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtAktie_difference[a_,t])),
        display vtAktie_difference;
      );
    
      parameter vtVirksomhed_difference[a_,t];
      vtVirksomhed_difference[a_,t]$(1) = vtVirksomhed.l[a_,t] - vtVirksomhed_saved[a_,t];
      vtVirksomhed_difference[a_,t]$(abs(vtVirksomhed_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtVirksomhed_difference[a_,t])),
        display vtVirksomhed_difference;
      );
    
      parameter vtDoedsbo_difference[a_,t];
      vtDoedsbo_difference[a_,t]$(1) = vtDoedsbo.l[a_,t] - vtDoedsbo_saved[a_,t];
      vtDoedsbo_difference[a_,t]$(abs(vtDoedsbo_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtDoedsbo_difference[a_,t])),
        display vtDoedsbo_difference;
      );
    
      parameter vtHhAM_difference[a_,t];
      vtHhAM_difference[a_,t]$(1) = vtHhAM.l[a_,t] - vtHhAM_saved[a_,t];
      vtHhAM_difference[a_,t]$(abs(vtHhAM_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtHhAM_difference[a_,t])),
        display vtHhAM_difference;
      );
    
      parameter vtPersRest_difference[a_,t];
      vtPersRest_difference[a_,t]$(1) = vtPersRest.l[a_,t] - vtPersRest_saved[a_,t];
      vtPersRest_difference[a_,t]$(abs(vtPersRest_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtPersRest_difference[a_,t])),
        display vtPersRest_difference;
      );
    
      parameter vtKapPens_difference[a_,t];
      vtKapPens_difference[a_,t]$(1) = vtKapPens.l[a_,t] - vtKapPens_saved[a_,t];
      vtKapPens_difference[a_,t]$(abs(vtKapPens_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtKapPens_difference[a_,t])),
        display vtKapPens_difference;
      );
    
      parameter vtKapPensArv_difference[a_,t];
      vtKapPensArv_difference[a_,t]$(1) = vtKapPensArv.l[a_,t] - vtKapPensArv_saved[a_,t];
      vtKapPensArv_difference[a_,t]$(abs(vtKapPensArv_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtKapPensArv_difference[a_,t])),
        display vtKapPensArv_difference;
      );
    
      parameter vtSelskab_difference[s_,t];
      vtSelskab_difference[s_,t]$(1) = vtSelskab.l[s_,t] - vtSelskab_saved[s_,t];
      vtSelskab_difference[s_,t]$(abs(vtSelskab_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vtSelskab_difference[s_,t])),
        display vtSelskab_difference;
      );
    
      parameter vtSelskabRest_difference[s_,t];
      vtSelskabRest_difference[s_,t]$(1) = vtSelskabRest.l[s_,t] - vtSelskabRest_saved[s_,t];
      vtSelskabRest_difference[s_,t]$(abs(vtSelskabRest_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vtSelskabRest_difference[s_,t])),
        display vtSelskabRest_difference;
      );
    
      parameter vtSelskabNord_difference[t];
      vtSelskabNord_difference[t]$(1) = vtSelskabNord.l[t] - vtSelskabNord_saved[t];
      vtSelskabNord_difference[t]$(abs(vtSelskabNord_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtSelskabNord_difference[t])),
        display vtSelskabNord_difference;
      );
    
      parameter vtPAL_difference[t];
      vtPAL_difference[t]$(1) = vtPAL.l[t] - vtPAL_saved[t];
      vtPAL_difference[t]$(abs(vtPAL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtPAL_difference[t])),
        display vtPAL_difference;
      );
    
      parameter vtMedie_difference[t];
      vtMedie_difference[t]$(1) = vtMedie.l[t] - vtMedie_saved[t];
      vtMedie_difference[t]$(abs(vtMedie_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtMedie_difference[t])),
        display vtMedie_difference;
      );
    
      parameter vtHhVaegt_difference[a_,t];
      vtHhVaegt_difference[a_,t]$(1) = vtHhVaegt.l[a_,t] - vtHhVaegt_saved[a_,t];
      vtHhVaegt_difference[a_,t]$(abs(vtHhVaegt_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtHhVaegt_difference[a_,t])),
        display vtHhVaegt_difference;
      );
    
      parameter vtAfgEU_difference[t];
      vtAfgEU_difference[t]$(1) = vtAfgEU.l[t] - vtAfgEU_saved[t];
      vtAfgEU_difference[t]$(abs(vtAfgEU_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtAfgEU_difference[t])),
        display vtAfgEU_difference;
      );
    
      parameter vtLukning_difference[a_,t];
      vtLukning_difference[a_,t]$(1) = vtLukning.l[a_,t] - vtLukning_saved[a_,t];
      vtLukning_difference[a_,t]$(abs(vtLukning_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtLukning_difference[a_,t])),
        display vtLukning_difference;
      );
    
      parameter vtIndirekte_difference[t];
      vtIndirekte_difference[t]$(1) = vtIndirekte.l[t] - vtIndirekte_saved[t];
      vtIndirekte_difference[t]$(abs(vtIndirekte_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtIndirekte_difference[t])),
        display vtIndirekte_difference;
      );
    
      parameter vtEU_difference[t];
      vtEU_difference[t]$(1) = vtEU.l[t] - vtEU_saved[t];
      vtEU_difference[t]$(abs(vtEU_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtEU_difference[t])),
        display vtEU_difference;
      );
    
      parameter vBidrag_difference[a_,t];
      vBidrag_difference[a_,t]$(1) = vBidrag.l[a_,t] - vBidrag_saved[a_,t];
      vBidrag_difference[a_,t]$(abs(vBidrag_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vBidrag_difference[a_,t])),
        display vBidrag_difference;
      );
    
      parameter vBidragAK_difference[t];
      vBidragAK_difference[t]$(1) = vBidragAK.l[t] - vBidragAK_saved[t];
      vBidragAK_difference[t]$(abs(vBidragAK_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBidragAK_difference[t])),
        display vBidragAK_difference;
      );
    
      parameter vBidragEL_difference[t];
      vBidragEL_difference[t]$(1) = vBidragEL.l[t] - vBidragEL_saved[t];
      vBidragEL_difference[t]$(abs(vBidragEL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBidragEL_difference[t])),
        display vBidragEL_difference;
      );
    
      parameter vBidragFri_difference[t];
      vBidragFri_difference[t]$(1) = vBidragFri.l[t] - vBidragFri_saved[t];
      vBidragFri_difference[t]$(abs(vBidragFri_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBidragFri_difference[t])),
        display vBidragFri_difference;
      );
    
      parameter vBidragObl_difference[t];
      vBidragObl_difference[t]$(1) = vBidragObl.l[t] - vBidragObl_saved[t];
      vBidragObl_difference[t]$(abs(vBidragObl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBidragObl_difference[t])),
        display vBidragObl_difference;
      );
    
      parameter vBidragOblTjm_difference[t];
      vBidragOblTjm_difference[t]$(1) = vBidragOblTjm.l[t] - vBidragOblTjm_saved[t];
      vBidragOblTjm_difference[t]$(abs(vBidragOblTjm_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBidragOblTjm_difference[t])),
        display vBidragOblTjm_difference;
      );
    
      parameter vBidragATP_difference[t];
      vBidragATP_difference[t]$(1) = vBidragATP.l[t] - vBidragATP_saved[t];
      vBidragATP_difference[t]$(abs(vBidragATP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBidragATP_difference[t])),
        display vBidragATP_difference;
      );
    
      parameter vBidragOblRest_difference[t];
      vBidragOblRest_difference[t]$(1) = vBidragOblRest.l[t] - vBidragOblRest_saved[t];
      vBidragOblRest_difference[t]$(abs(vBidragOblRest_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBidragOblRest_difference[t])),
        display vBidragOblRest_difference;
      );
    
      parameter vBidragTjmp_difference[t];
      vBidragTjmp_difference[t]$(1) = vBidragTjmp.l[t] - vBidragTjmp_saved[t];
      vBidragTjmp_difference[t]$(abs(vBidragTjmp_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBidragTjmp_difference[t])),
        display vBidragTjmp_difference;
      );
    
      parameter vOffIndRest_difference[t];
      vOffIndRest_difference[t]$(1) = vOffIndRest.l[t] - vOffIndRest_saved[t];
      vOffIndRest_difference[t]$(abs(vOffIndRest_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffIndRest_difference[t])),
        display vOffIndRest_difference;
      );
    
      parameter vtKirke_difference[a_,t];
      vtKirke_difference[a_,t]$(1) = vtKirke.l[a_,t] - vtKirke_saved[a_,t];
      vtKirke_difference[a_,t]$(abs(vtKirke_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtKirke_difference[a_,t])),
        display vtKirke_difference;
      );
    
      parameter vJordrente_difference[t];
      vJordrente_difference[t]$(1) = vJordrente.l[t] - vJordrente_saved[t];
      vJordrente_difference[t]$(abs(vJordrente_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vJordrente_difference[t])),
        display vJordrente_difference;
      );
    
      parameter vPersInd_difference[a_,t];
      vPersInd_difference[a_,t]$(1) = vPersInd.l[a_,t] - vPersInd_saved[a_,t];
      vPersInd_difference[a_,t]$(abs(vPersInd_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vPersInd_difference[a_,t])),
        display vPersInd_difference;
      );
    
      parameter vPersIndRest_difference[a_,t];
      vPersIndRest_difference[a_,t]$(1) = vPersIndRest.l[a_,t] - vPersIndRest_saved[a_,t];
      vPersIndRest_difference[a_,t]$(abs(vPersIndRest_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vPersIndRest_difference[a_,t])),
        display vPersIndRest_difference;
      );
    
      parameter vSkatteplInd_difference[a_,t];
      vSkatteplInd_difference[a_,t]$(1) = vSkatteplInd.l[a_,t] - vSkatteplInd_saved[a_,t];
      vSkatteplInd_difference[a_,t]$(abs(vSkatteplInd_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vSkatteplInd_difference[a_,t])),
        display vSkatteplInd_difference;
      );
    
      parameter vNetKapIndPos_difference[a_,t];
      vNetKapIndPos_difference[a_,t]$(1) = vNetKapIndPos.l[a_,t] - vNetKapIndPos_saved[a_,t];
      vNetKapIndPos_difference[a_,t]$(abs(vNetKapIndPos_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vNetKapIndPos_difference[a_,t])),
        display vNetKapIndPos_difference;
      );
    
      parameter vNetKapInd_difference[a_,t];
      vNetKapInd_difference[a_,t]$(1) = vNetKapInd.l[a_,t] - vNetKapInd_saved[a_,t];
      vNetKapInd_difference[a_,t]$(abs(vNetKapInd_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vNetKapInd_difference[a_,t])),
        display vNetKapInd_difference;
      );
    
      parameter vKapIndPos_difference[a_,t];
      vKapIndPos_difference[a_,t]$(1) = vKapIndPos.l[a_,t] - vKapIndPos_saved[a_,t];
      vKapIndPos_difference[a_,t]$(abs(vKapIndPos_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vKapIndPos_difference[a_,t])),
        display vKapIndPos_difference;
      );
    
      parameter vKapIndNeg_difference[a_,t];
      vKapIndNeg_difference[a_,t]$(1) = vKapIndNeg.l[a_,t] - vKapIndNeg_saved[a_,t];
      vKapIndNeg_difference[a_,t]$(abs(vKapIndNeg_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vKapIndNeg_difference[a_,t])),
        display vKapIndNeg_difference;
      );
    
      parameter vPersFradrag_difference[a_,t];
      vPersFradrag_difference[a_,t]$(1) = vPersFradrag.l[a_,t] - vPersFradrag_saved[a_,t];
      vPersFradrag_difference[a_,t]$(abs(vPersFradrag_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vPersFradrag_difference[a_,t])),
        display vPersFradrag_difference;
      );
    
      parameter vAKFradrag_difference[a_,t];
      vAKFradrag_difference[a_,t]$(1) = vAKFradrag.l[a_,t] - vAKFradrag_saved[a_,t];
      vAKFradrag_difference[a_,t]$(abs(vAKFradrag_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vAKFradrag_difference[a_,t])),
        display vAKFradrag_difference;
      );
    
      parameter vELFradrag_difference[a_,t];
      vELFradrag_difference[a_,t]$(1) = vELFradrag.l[a_,t] - vELFradrag_saved[a_,t];
      vELFradrag_difference[a_,t]$(abs(vELFradrag_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vELFradrag_difference[a_,t])),
        display vELFradrag_difference;
      );
    
      parameter vRestFradrag_difference[a_,t];
      vRestFradrag_difference[a_,t]$(1) = vRestFradrag.l[a_,t] - vRestFradrag_saved[a_,t];
      vRestFradrag_difference[a_,t]$(abs(vRestFradrag_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vRestFradrag_difference[a_,t])),
        display vRestFradrag_difference;
      );
    
      parameter vBeskFradrag_difference[a_,t];
      vBeskFradrag_difference[a_,t]$(1) = vBeskFradrag.l[a_,t] - vBeskFradrag_saved[a_,t];
      vBeskFradrag_difference[a_,t]$(abs(vBeskFradrag_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vBeskFradrag_difference[a_,t])),
        display vBeskFradrag_difference;
      );
    
      parameter vRealiseretAktieOmv_difference[a_,t];
      vRealiseretAktieOmv_difference[a_,t]$(1) = vRealiseretAktieOmv.l[a_,t] - vRealiseretAktieOmv_saved[a_,t];
      vRealiseretAktieOmv_difference[a_,t]$(abs(vRealiseretAktieOmv_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vRealiseretAktieOmv_difference[a_,t])),
        display vRealiseretAktieOmv_difference;
      );
    
      parameter vUrealiseretAktieOmv_difference[t];
      vUrealiseretAktieOmv_difference[t]$(1) = vUrealiseretAktieOmv.l[t] - vUrealiseretAktieOmv_saved[t];
      vUrealiseretAktieOmv_difference[t]$(abs(vUrealiseretAktieOmv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vUrealiseretAktieOmv_difference[t])),
        display vUrealiseretAktieOmv_difference;
      );
    
      parameter ftBund_difference[a_,t];
      ftBund_difference[a_,t]$(1) = ftBund.l[a_,t] - ftBund_saved[a_,t];
      ftBund_difference[a_,t]$(abs(ftBund_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(ftBund_difference[a_,t])),
        display ftBund_difference;
      );
    
      parameter rTopSkatInd_difference[a_,t];
      rTopSkatInd_difference[a_,t]$(1) = rTopSkatInd.l[a_,t] - rTopSkatInd_saved[a_,t];
      rTopSkatInd_difference[a_,t]$(abs(rTopSkatInd_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(rTopSkatInd_difference[a_,t])),
        display rTopSkatInd_difference;
      );
    
      parameter ftKommune_difference[a_,t];
      ftKommune_difference[a_,t]$(1) = ftKommune.l[a_,t] - ftKommune_saved[a_,t];
      ftKommune_difference[a_,t]$(abs(ftKommune_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(ftKommune_difference[a_,t])),
        display ftKommune_difference;
      );
    
      parameter fvtEjd_difference[t];
      fvtEjd_difference[t]$(1) = fvtEjd.l[t] - fvtEjd_saved[t];
      fvtEjd_difference[t]$(abs(fvtEjd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(fvtEjd_difference[t])),
        display fvtEjd_difference;
      );
    
      parameter fvtAktie_difference[t];
      fvtAktie_difference[t]$(1) = fvtAktie.l[t] - fvtAktie_saved[t];
      fvtAktie_difference[t]$(abs(fvtAktie_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(fvtAktie_difference[t])),
        display fvtAktie_difference;
      );
    
      parameter fvtDoedsbo_difference[t];
      fvtDoedsbo_difference[t]$(1) = fvtDoedsbo.l[t] - fvtDoedsbo_saved[t];
      fvtDoedsbo_difference[t]$(abs(fvtDoedsbo_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(fvtDoedsbo_difference[t])),
        display fvtDoedsbo_difference;
      );
    
      parameter jvKapIndPos_difference[a_,t];
      jvKapIndPos_difference[a_,t]$(1) = jvKapIndPos.l[a_,t] - jvKapIndPos_saved[a_,t];
      jvKapIndPos_difference[a_,t]$(abs(jvKapIndPos_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(jvKapIndPos_difference[a_,t])),
        display jvKapIndPos_difference;
      );
    
      parameter jvKapIndneg_difference[a_,t];
      jvKapIndneg_difference[a_,t]$(1) = jvKapIndneg.l[a_,t] - jvKapIndneg_saved[a_,t];
      jvKapIndneg_difference[a_,t]$(abs(jvKapIndneg_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(jvKapIndneg_difference[a_,t])),
        display jvKapIndneg_difference;
      );
    
      parameter uvPersFradrag_difference[a_,t];
      uvPersFradrag_difference[a_,t]$(1) = uvPersFradrag.l[a_,t] - uvPersFradrag_saved[a_,t];
      uvPersFradrag_difference[a_,t]$(abs(uvPersFradrag_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(uvPersFradrag_difference[a_,t])),
        display uvPersFradrag_difference;
      );
    
      parameter rOffFraUdl2BNP_difference[t];
      rOffFraUdl2BNP_difference[t]$(1) = rOffFraUdl2BNP.l[t] - rOffFraUdl2BNP_saved[t];
      rOffFraUdl2BNP_difference[t]$(abs(rOffFraUdl2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffFraUdl2BNP_difference[t])),
        display rOffFraUdl2BNP_difference;
      );
    
      parameter rOffFraHh2BNP_difference[t];
      rOffFraHh2BNP_difference[t]$(1) = rOffFraHh2BNP.l[t] - rOffFraHh2BNP_saved[t];
      rOffFraHh2BNP_difference[t]$(abs(rOffFraHh2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffFraHh2BNP_difference[t])),
        display rOffFraHh2BNP_difference;
      );
    
      parameter rOffFraVirk2BNP_difference[t];
      rOffFraVirk2BNP_difference[t]$(1) = rOffFraVirk2BNP.l[t] - rOffFraVirk2BNP_saved[t];
      rOffFraVirk2BNP_difference[t]$(abs(rOffFraVirk2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffFraVirk2BNP_difference[t])),
        display rOffFraVirk2BNP_difference;
      );
    
      parameter rOffVirk2BNP_difference[t];
      rOffVirk2BNP_difference[t]$(1) = rOffVirk2BNP.l[t] - rOffVirk2BNP_saved[t];
      rOffVirk2BNP_difference[t]$(abs(rOffVirk2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffVirk2BNP_difference[t])),
        display rOffVirk2BNP_difference;
      );
    
      parameter rPersIndRest_a2PersInd_difference[a,t];
      rPersIndRest_a2PersInd_difference[a,t]$(1) = rPersIndRest_a2PersInd.l[a,t] - rPersIndRest_a2PersInd_saved[a,t];
      rPersIndRest_a2PersInd_difference[a,t]$(abs(rPersIndRest_a2PersInd_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(rPersIndRest_a2PersInd_difference[a,t])),
        display rPersIndRest_a2PersInd_difference;
      );
    
      parameter rPersIndRest_t2PersInd_difference[t];
      rPersIndRest_t2PersInd_difference[t]$(1) = rPersIndRest_t2PersInd.l[t] - rPersIndRest_t2PersInd_saved[t];
      rPersIndRest_t2PersInd_difference[t]$(abs(rPersIndRest_t2PersInd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rPersIndRest_t2PersInd_difference[t])),
        display rPersIndRest_t2PersInd_difference;
      );
    
      parameter rRestFradragSats2SatsIndeks_difference[t];
      rRestFradragSats2SatsIndeks_difference[t]$(1) = rRestFradragSats2SatsIndeks.l[t] - rRestFradragSats2SatsIndeks_saved[t];
      rRestFradragSats2SatsIndeks_difference[t]$(abs(rRestFradragSats2SatsIndeks_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rRestFradragSats2SatsIndeks_difference[t])),
        display rRestFradragSats2SatsIndeks_difference;
      );
    
      parameter mtVirk_difference[s_,t];
      mtVirk_difference[s_,t]$(1) = mtVirk.l[s_,t] - mtVirk_saved[s_,t];
      mtVirk_difference[s_,t]$(abs(mtVirk_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(mtVirk_difference[s_,t])),
        display mtVirk_difference;
      );
    
      parameter tLukning_difference[t];
      tLukning_difference[t]$(1) = tLukning.l[t] - tLukning_saved[t];
      tLukning_difference[t]$(abs(tLukning_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tLukning_difference[t])),
        display tLukning_difference;
      );
    
      parameter pGxAfskr_difference[t];
      pGxAfskr_difference[t]$(1) = pGxAfskr.l[t] - pGxAfskr_saved[t];
      pGxAfskr_difference[t]$(abs(pGxAfskr_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(pGxAfskr_difference[t])),
        display pGxAfskr_difference;
      );
    
      parameter qGxAfskr_difference[t];
      qGxAfskr_difference[t]$(1) = qGxAfskr.l[t] - qGxAfskr_saved[t];
      qGxAfskr_difference[t]$(abs(qGxAfskr_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qGxAfskr_difference[t])),
        display qGxAfskr_difference;
      );
    
      parameter qG_difference[g_,t];
      qG_difference[g_,t]$(1) = qG.l[g_,t] - qG_saved[g_,t];
      qG_difference[g_,t]$(abs(qG_difference[g_,t]) < 1e-6) = 0;
      if (sum([g_,t]$(1), abs(qG_difference[g_,t])),
        display qG_difference;
      );
    
      parameter vGxAfskr_difference[t];
      vGxAfskr_difference[t]$(1) = vGxAfskr.l[t] - vGxAfskr_saved[t];
      vGxAfskr_difference[t]$(abs(vGxAfskr_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vGxAfskr_difference[t])),
        display vGxAfskr_difference;
      );
    
      parameter vOffPrimUd_difference[t];
      vOffPrimUd_difference[t]$(1) = vOffPrimUd.l[t] - vOffPrimUd_saved[t];
      vOffPrimUd_difference[t]$(abs(vOffPrimUd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffPrimUd_difference[t])),
        display vOffPrimUd_difference;
      );
    
      parameter vOffInv_difference[t];
      vOffInv_difference[t]$(1) = vOffInv.l[t] - vOffInv_saved[t];
      vOffInv_difference[t]$(abs(vOffInv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffInv_difference[t])),
        display vOffInv_difference;
      );
    
      parameter vOffSub_difference[t];
      vOffSub_difference[t]$(1) = vOffSub.l[t] - vOffSub_saved[t];
      vOffSub_difference[t]$(abs(vOffSub_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffSub_difference[t])),
        display vOffSub_difference;
      );
    
      parameter vSubY_difference[t];
      vSubY_difference[t]$(1) = vSubY.l[t] - vSubY_saved[t];
      vSubY_difference[t]$(abs(vSubY_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vSubY_difference[t])),
        display vSubY_difference;
      );
    
      parameter vSubYRes_difference[t];
      vSubYRes_difference[t]$(1) = vSubYRes.l[t] - vSubYRes_saved[t];
      vSubYRes_difference[t]$(abs(vSubYRes_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vSubYRes_difference[t])),
        display vSubYRes_difference;
      );
    
      parameter vOffUdRest_difference[t];
      vOffUdRest_difference[t]$(1) = vOffUdRest.l[t] - vOffUdRest_saved[t];
      vOffUdRest_difference[t]$(abs(vOffUdRest_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffUdRest_difference[t])),
        display vOffUdRest_difference;
      );
    
      parameter vOffTilHh_difference[t];
      vOffTilHh_difference[t]$(1) = vOffTilHh.l[t] - vOffTilHh_saved[t];
      vOffTilHh_difference[t]$(abs(vOffTilHh_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffTilHh_difference[t])),
        display vOffTilHh_difference;
      );
    
      parameter vOvf_difference[ovf_,t];
      vOvf_difference[ovf_,t]$(1) = vOvf.l[ovf_,t] - vOvf_saved[ovf_,t];
      vOvf_difference[ovf_,t]$(abs(vOvf_difference[ovf_,t]) < 1e-6) = 0;
      if (sum([ovf_,t]$(1), abs(vOvf_difference[ovf_,t])),
        display vOvf_difference;
      );
    
      parameter vHhOvf_difference[a,t];
      vHhOvf_difference[a,t]$(1) = vHhOvf.l[a,t] - vHhOvf_saved[a,t];
      vHhOvf_difference[a,t]$(abs(vHhOvf_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(vHhOvf_difference[a,t])),
        display vHhOvf_difference;
      );
    
      parameter vOvfSkatPl_difference[a_,t];
      vOvfSkatPl_difference[a_,t]$(1) = vOvfSkatPl.l[a_,t] - vOvfSkatPl_saved[a_,t];
      vOvfSkatPl_difference[a_,t]$(abs(vOvfSkatPl_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vOvfSkatPl_difference[a_,t])),
        display vOvfSkatPl_difference;
      );
    
      parameter vOvfSats_difference[ovf,t];
      vOvfSats_difference[ovf,t]$(1) = vOvfSats.l[ovf,t] - vOvfSats_saved[ovf,t];
      vOvfSats_difference[ovf,t]$(abs(vOvfSats_difference[ovf,t]) < 1e-6) = 0;
      if (sum([ovf,t]$(1), abs(vOvfSats_difference[ovf,t])),
        display vOvfSats_difference;
      );
    
      parameter vOvfUbeskat_difference[a_,t];
      vOvfUbeskat_difference[a_,t]$(1) = vOvfUbeskat.l[a_,t] - vOvfUbeskat_saved[a_,t];
      vOvfUbeskat_difference[a_,t]$(abs(vOvfUbeskat_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vOvfUbeskat_difference[a_,t])),
        display vOvfUbeskat_difference;
      );
    
      parameter vGLukning_difference[t];
      vGLukning_difference[t]$(1) = vGLukning.l[t] - vGLukning_saved[t];
      vGLukning_difference[t]$(abs(vGLukning_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vGLukning_difference[t])),
        display vGLukning_difference;
      );
    
      parameter uvGxAfskr_difference[t];
      uvGxAfskr_difference[t]$(1) = uvGxAfskr.l[t] - uvGxAfskr_saved[t];
      uvGxAfskr_difference[t]$(abs(uvGxAfskr_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uvGxAfskr_difference[t])),
        display uvGxAfskr_difference;
      );
    
      parameter nOvf_difference[ovf,t];
      nOvf_difference[ovf,t]$(1) = nOvf.l[ovf,t] - nOvf_saved[ovf,t];
      nOvf_difference[ovf,t]$(abs(nOvf_difference[ovf,t]) < 1e-6) = 0;
      if (sum([ovf,t]$(1), abs(nOvf_difference[ovf,t])),
        display nOvf_difference;
      );
    
      parameter fHhOvf_difference[t];
      fHhOvf_difference[t]$(1) = fHhOvf.l[t] - fHhOvf_saved[t];
      fHhOvf_difference[t]$(abs(fHhOvf_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(fHhOvf_difference[t])),
        display fHhOvf_difference;
      );
    
      parameter dnOvf2dBesk_difference[ovf,t];
      dnOvf2dBesk_difference[ovf,t]$(1) = dnOvf2dBesk.l[ovf,t] - dnOvf2dBesk_saved[ovf,t];
      dnOvf2dBesk_difference[ovf,t]$(abs(dnOvf2dBesk_difference[ovf,t]) < 1e-6) = 0;
      if (sum([ovf,t]$(1), abs(dnOvf2dBesk_difference[ovf,t])),
        display dnOvf2dBesk_difference;
      );
    
      parameter dnOvf2dPop_difference[ovf,t];
      dnOvf2dPop_difference[ovf,t]$(1) = dnOvf2dPop.l[ovf,t] - dnOvf2dPop_saved[ovf,t];
      dnOvf2dPop_difference[ovf,t]$(abs(dnOvf2dPop_difference[ovf,t]) < 1e-6) = 0;
      if (sum([ovf,t]$(1), abs(dnOvf2dPop_difference[ovf,t])),
        display dnOvf2dPop_difference;
      );
    
      parameter dvOvf2dBesk_difference[ovf_,t];
      dvOvf2dBesk_difference[ovf_,t]$(1) = dvOvf2dBesk.l[ovf_,t] - dvOvf2dBesk_saved[ovf_,t];
      dvOvf2dBesk_difference[ovf_,t]$(abs(dvOvf2dBesk_difference[ovf_,t]) < 1e-6) = 0;
      if (sum([ovf_,t]$(1), abs(dvOvf2dBesk_difference[ovf_,t])),
        display dvOvf2dBesk_difference;
      );
    
      parameter dvOvf2dPop_difference[ovf_,t];
      dvOvf2dPop_difference[ovf_,t]$(1) = dvOvf2dPop.l[ovf_,t] - dvOvf2dPop_saved[ovf_,t];
      dvOvf2dPop_difference[ovf_,t]$(abs(dvOvf2dPop_difference[ovf_,t]) < 1e-6) = 0;
      if (sum([ovf_,t]$(1), abs(dvOvf2dPop_difference[ovf_,t])),
        display dvOvf2dPop_difference;
      );
    
      parameter rOffLandKoeb2BNP_difference[t];
      rOffLandKoeb2BNP_difference[t]$(1) = rOffLandKoeb2BNP.l[t] - rOffLandKoeb2BNP_saved[t];
      rOffLandKoeb2BNP_difference[t]$(abs(rOffLandKoeb2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffLandKoeb2BNP_difference[t])),
        display rOffLandKoeb2BNP_difference;
      );
    
      parameter rOffTilUdl2BNP_difference[t];
      rOffTilUdl2BNP_difference[t]$(1) = rOffTilUdl2BNP.l[t] - rOffTilUdl2BNP_saved[t];
      rOffTilUdl2BNP_difference[t]$(abs(rOffTilUdl2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffTilUdl2BNP_difference[t])),
        display rOffTilUdl2BNP_difference;
      );
    
      parameter rOffTilVirk2BNP_difference[t];
      rOffTilVirk2BNP_difference[t]$(1) = rOffTilVirk2BNP.l[t] - rOffTilVirk2BNP_saved[t];
      rOffTilVirk2BNP_difference[t]$(abs(rOffTilVirk2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffTilVirk2BNP_difference[t])),
        display rOffTilVirk2BNP_difference;
      );
    
      parameter rOffTilHhKap2BNP_difference[t];
      rOffTilHhKap2BNP_difference[t]$(1) = rOffTilHhKap2BNP.l[t] - rOffTilHhKap2BNP_saved[t];
      rOffTilHhKap2BNP_difference[t]$(abs(rOffTilHhKap2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffTilHhKap2BNP_difference[t])),
        display rOffTilHhKap2BNP_difference;
      );
    
      parameter rOffTilHhOev2BNP_difference[t];
      rOffTilHhOev2BNP_difference[t]$(1) = rOffTilHhOev2BNP.l[t] - rOffTilHhOev2BNP_saved[t];
      rOffTilHhOev2BNP_difference[t]$(abs(rOffTilHhOev2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffTilHhOev2BNP_difference[t])),
        display rOffTilHhOev2BNP_difference;
      );
    
      parameter rSubEU2BNP_difference[t];
      rSubEU2BNP_difference[t]$(1) = rSubEU2BNP.l[t] - rSubEU2BNP_saved[t];
      rSubEU2BNP_difference[t]$(abs(rSubEU2BNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rSubEU2BNP_difference[t])),
        display rSubEU2BNP_difference;
      );
    
      parameter vtMoms_difference[d_,s_,t];
      vtMoms_difference[d_,s_,t]$(1) = vtMoms.l[d_,s_,t] - vtMoms_saved[d_,s_,t];
      vtMoms_difference[d_,s_,t]$(abs(vtMoms_difference[d_,s_,t]) < 1e-6) = 0;
      if (sum([d_,s_,t]$(1), abs(vtMoms_difference[d_,s_,t])),
        display vtMoms_difference;
      );
    
      parameter vtNetAfg_difference[d_,s_,t];
      vtNetAfg_difference[d_,s_,t]$(1) = vtNetAfg.l[d_,s_,t] - vtNetAfg_saved[d_,s_,t];
      vtNetAfg_difference[d_,s_,t]$(abs(vtNetAfg_difference[d_,s_,t]) < 1e-6) = 0;
      if (sum([d_,s_,t]$(1), abs(vtNetAfg_difference[d_,s_,t])),
        display vtNetAfg_difference;
      );
    
      parameter vtAfg_difference[d_,s_,t];
      vtAfg_difference[d_,s_,t]$(1) = vtAfg.l[d_,s_,t] - vtAfg_saved[d_,s_,t];
      vtAfg_difference[d_,s_,t]$(abs(vtAfg_difference[d_,s_,t]) < 1e-6) = 0;
      if (sum([d_,s_,t]$(1), abs(vtAfg_difference[d_,s_,t])),
        display vtAfg_difference;
      );
    
      parameter vtReg_difference[d_,t];
      vtReg_difference[d_,t]$(1) = vtReg.l[d_,t] - vtReg_saved[d_,t];
      vtReg_difference[d_,t]$(abs(vtReg_difference[d_,t]) < 1e-6) = 0;
      if (sum([d_,t]$(1), abs(vtReg_difference[d_,t])),
        display vtReg_difference;
      );
    
      parameter vPunktSub_difference[t];
      vPunktSub_difference[t]$(1) = vPunktSub.l[t] - vPunktSub_saved[t];
      vPunktSub_difference[t]$(abs(vPunktSub_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vPunktSub_difference[t])),
        display vPunktSub_difference;
      );
    
      parameter vtTold_difference[d_,s_,t];
      vtTold_difference[d_,s_,t]$(1) = vtTold.l[d_,s_,t] - vtTold_saved[d_,s_,t];
      vtTold_difference[d_,s_,t]$(abs(vtTold_difference[d_,s_,t]) < 1e-6) = 0;
      if (sum([d_,s_,t]$(1), abs(vtTold_difference[d_,s_,t])),
        display vtTold_difference;
      );
    
      parameter vtGrund_difference[s_,t];
      vtGrund_difference[s_,t]$(1) = vtGrund.l[s_,t] - vtGrund_saved[s_,t];
      vtGrund_difference[s_,t]$(abs(vtGrund_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vtGrund_difference[s_,t])),
        display vtGrund_difference;
      );
    
      parameter vtVirkVaegt_difference[s_,t];
      vtVirkVaegt_difference[s_,t]$(1) = vtVirkVaegt.l[s_,t] - vtVirkVaegt_saved[s_,t];
      vtVirkVaegt_difference[s_,t]$(abs(vtVirkVaegt_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vtVirkVaegt_difference[s_,t])),
        display vtVirkVaegt_difference;
      );
    
      parameter vtVirkAM_difference[s_,t];
      vtVirkAM_difference[s_,t]$(1) = vtVirkAM.l[s_,t] - vtVirkAM_saved[s_,t];
      vtVirkAM_difference[s_,t]$(abs(vtVirkAM_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vtVirkAM_difference[s_,t])),
        display vtVirkAM_difference;
      );
    
      parameter vtAUB_difference[s_,t];
      vtAUB_difference[s_,t]$(1) = vtAUB.l[s_,t] - vtAUB_saved[s_,t];
      vtAUB_difference[s_,t]$(abs(vtAUB_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vtAUB_difference[s_,t])),
        display vtAUB_difference;
      );
    
      parameter vtSubLoen_difference[s_,t];
      vtSubLoen_difference[s_,t]$(1) = vtSubLoen.l[s_,t] - vtSubLoen_saved[s_,t];
      vtSubLoen_difference[s_,t]$(abs(vtSubLoen_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vtSubLoen_difference[s_,t])),
        display vtSubLoen_difference;
      );
    
      parameter vtNetLoenAfg_difference[s_,t];
      vtNetLoenAfg_difference[s_,t]$(1) = vtNetLoenAfg.l[s_,t] - vtNetLoenAfg_saved[s_,t];
      vtNetLoenAfg_difference[s_,t]$(abs(vtNetLoenAfg_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vtNetLoenAfg_difference[s_,t])),
        display vtNetLoenAfg_difference;
      );
    
      parameter vtNetYAfg_difference[s_,t];
      vtNetYAfg_difference[s_,t]$(1) = vtNetYAfg.l[s_,t] - vtNetYAfg_saved[s_,t];
      vtNetYAfg_difference[s_,t]$(abs(vtNetYAfg_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vtNetYAfg_difference[s_,t])),
        display vtNetYAfg_difference;
      );
    
      parameter vtNetYAfgRest_difference[s_,t];
      vtNetYAfgRest_difference[s_,t]$(1) = vtNetYAfgRest.l[s_,t] - vtNetYAfgRest_saved[s_,t];
      vtNetYAfgRest_difference[s_,t]$(abs(vtNetYAfgRest_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vtNetYAfgRest_difference[s_,t])),
        display vtNetYAfgRest_difference;
      );
    
      parameter tNetAfg_y_difference[d_,s,t];
      tNetAfg_y_difference[d_,s,t]$(1) = tNetAfg_y.l[d_,s,t] - tNetAfg_y_saved[d_,s,t];
      tNetAfg_y_difference[d_,s,t]$(abs(tNetAfg_y_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tNetAfg_y_difference[d_,s,t])),
        display tNetAfg_y_difference;
      );
    
      parameter tNetAfg_m_difference[d_,s,t];
      tNetAfg_m_difference[d_,s,t]$(1) = tNetAfg_m.l[d_,s,t] - tNetAfg_m_saved[d_,s,t];
      tNetAfg_m_difference[d_,s,t]$(abs(tNetAfg_m_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tNetAfg_m_difference[d_,s,t])),
        display tNetAfg_m_difference;
      );
    
      parameter tL_difference[s_,t];
      tL_difference[s_,t]$(1) = tL.l[s_,t] - tL_saved[s_,t];
      tL_difference[s_,t]$(abs(tL_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(tL_difference[s_,t])),
        display tL_difference;
      );
    
      parameter tIOy_difference[d_,s,t];
      tIOy_difference[d_,s,t]$(1) = tIOy.l[d_,s,t] - tIOy_saved[d_,s,t];
      tIOy_difference[d_,s,t]$(abs(tIOy_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tIOy_difference[d_,s,t])),
        display tIOy_difference;
      );
    
      parameter tIOm_difference[d_,s,t];
      tIOm_difference[d_,s,t]$(1) = tIOm.l[d_,s,t] - tIOm_saved[d_,s,t];
      tIOm_difference[d_,s,t]$(abs(tIOm_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tIOm_difference[d_,s,t])),
        display tIOm_difference;
      );
    
      parameter vVirkBVT5aarSnit_difference[t];
      vVirkBVT5aarSnit_difference[t]$(1) = vVirkBVT5aarSnit.l[t] - vVirkBVT5aarSnit_saved[t];
      vVirkBVT5aarSnit_difference[t]$(abs(vVirkBVT5aarSnit_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vVirkBVT5aarSnit_difference[t])),
        display vVirkBVT5aarSnit_difference;
      );
    
      parameter vBVT2hL_difference[t];
      vBVT2hL_difference[t]$(1) = vBVT2hL.l[t] - vBVT2hL_saved[t];
      vBVT2hL_difference[t]$(abs(vBVT2hL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBVT2hL_difference[t])),
        display vBVT2hL_difference;
      );
    
      parameter vBVT2hLsnit_difference[t];
      vBVT2hLsnit_difference[t]$(1) = vBVT2hLsnit.l[t] - vBVT2hLsnit_saved[t];
      vBVT2hLsnit_difference[t]$(abs(vBVT2hLsnit_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBVT2hLsnit_difference[t])),
        display vBVT2hLsnit_difference;
      );
    
      parameter qBVT2hL_difference[t];
      qBVT2hL_difference[t]$(1) = qBVT2hL.l[t] - qBVT2hL_saved[t];
      qBVT2hL_difference[t]$(abs(qBVT2hL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qBVT2hL_difference[t])),
        display qBVT2hL_difference;
      );
    
      parameter qBVT2hLsnit_difference[t];
      qBVT2hLsnit_difference[t]$(1) = qBVT2hLsnit.l[t] - qBVT2hLsnit_saved[t];
      qBVT2hLsnit_difference[t]$(abs(qBVT2hLsnit_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qBVT2hLsnit_difference[t])),
        display qBVT2hLsnit_difference;
      );
    
      parameter vBFI_difference[t];
      vBFI_difference[t]$(1) = vBFI.l[t] - vBFI_saved[t];
      vBFI_difference[t]$(abs(vBFI_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBFI_difference[t])),
        display vBFI_difference;
      );
    
      parameter vUdl_difference[portf_,t];
      vUdl_difference[portf_,t]$(1) = vUdl.l[portf_,t] - vUdl_saved[portf_,t];
      vUdl_difference[portf_,t]$(abs(vUdl_difference[portf_,t]) < 1e-6) = 0;
      if (sum([portf_,t]$(1), abs(vUdl_difference[portf_,t])),
        display vUdl_difference;
      );
    
      parameter vUdlRenter_difference[t];
      vUdlRenter_difference[t]$(1) = vUdlRenter.l[t] - vUdlRenter_saved[t];
      vUdlRenter_difference[t]$(abs(vUdlRenter_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vUdlRenter_difference[t])),
        display vUdlRenter_difference;
      );
    
      parameter vUdlOmv_difference[t];
      vUdlOmv_difference[t]$(1) = vUdlOmv.l[t] - vUdlOmv_saved[t];
      vUdlOmv_difference[t]$(abs(vUdlOmv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vUdlOmv_difference[t])),
        display vUdlOmv_difference;
      );
    
      parameter vUdlNFE_difference[t];
      vUdlNFE_difference[t]$(1) = vUdlNFE.l[t] - vUdlNFE_saved[t];
      vUdlNFE_difference[t]$(abs(vUdlNFE_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vUdlNFE_difference[t])),
        display vUdlNFE_difference;
      );
    
      parameter rArbProd_difference[t];
      rArbProd_difference[t]$(1) = rArbProd.l[t] - rArbProd_saved[t];
      rArbProd_difference[t]$(abs(rArbProd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rArbProd_difference[t])),
        display rArbProd_difference;
      );
    
      parameter rBVTGab_difference[t];
      rBVTGab_difference[t]$(1) = rBVTGab.l[t] - rBVTGab_saved[t];
      rBVTGab_difference[t]$(abs(rBVTGab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rBVTGab_difference[t])),
        display rBVTGab_difference;
      );
    
      parameter rBeskGab_difference[t];
      rBeskGab_difference[t]$(1) = rBeskGab.l[t] - rBeskGab_saved[t];
      rBeskGab_difference[t]$(abs(rBeskGab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rBeskGab_difference[t])),
        display rBeskGab_difference;
      );
    
      parameter pCInflSnit_difference[t];
      pCInflSnit_difference[t]$(1) = pCInflSnit.l[t] - pCInflSnit_saved[t];
      pCInflSnit_difference[t]$(abs(pCInflSnit_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(pCInflSnit_difference[t])),
        display pCInflSnit_difference;
      );
    
      parameter pBNP_difference[t];
      pBNP_difference[t]$(1) = pBNP.l[t] - pBNP_saved[t];
      pBNP_difference[t]$(abs(pBNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(pBNP_difference[t])),
        display pBNP_difference;
      );
    
      parameter pBVT_difference[s_,t];
      pBVT_difference[s_,t]$(1) = pBVT.l[s_,t] - pBVT_saved[s_,t];
      pBVT_difference[s_,t]$(abs(pBVT_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(pBVT_difference[s_,t])),
        display pBVT_difference;
      );
    
      parameter pIO_difference[d_,s,t];
      pIO_difference[d_,s,t]$(1) = pIO.l[d_,s,t] - pIO_saved[d_,s,t];
      pIO_difference[d_,s,t]$(abs(pIO_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(pIO_difference[d_,s,t])),
        display pIO_difference;
      );
    
      parameter pIOy_difference[d_,s,t];
      pIOy_difference[d_,s,t]$(1) = pIOy.l[d_,s,t] - pIOy_saved[d_,s,t];
      pIOy_difference[d_,s,t]$(abs(pIOy_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(pIOy_difference[d_,s,t])),
        display pIOy_difference;
      );
    
      parameter pIOm_difference[d_,s,t];
      pIOm_difference[d_,s,t]$(1) = pIOm.l[d_,s,t] - pIOm_saved[d_,s,t];
      pIOm_difference[d_,s,t]$(abs(pIOm_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(pIOm_difference[d_,s,t])),
        display pIOm_difference;
      );
    
      parameter pX_difference[x_,t];
      pX_difference[x_,t]$(1) = pX.l[x_,t] - pX_saved[x_,t];
      pX_difference[x_,t]$(abs(pX_difference[x_,t]) < 1e-6) = 0;
      if (sum([x_,t]$(1), abs(pX_difference[x_,t])),
        display pX_difference;
      );
    
      parameter pXm_difference[x,t];
      pXm_difference[x,t]$(1) = pXm.l[x,t] - pXm_saved[x,t];
      pXm_difference[x,t]$(abs(pXm_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(pXm_difference[x,t])),
        display pXm_difference;
      );
    
      parameter pXy_difference[x,t];
      pXy_difference[x,t]$(1) = pXy.l[x,t] - pXy_saved[x,t];
      pXy_difference[x,t]$(abs(pXy_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(pXy_difference[x,t])),
        display pXy_difference;
      );
    
      parameter pR_difference[r_,t];
      pR_difference[r_,t]$(1) = pR.l[r_,t] - pR_saved[r_,t];
      pR_difference[r_,t]$(abs(pR_difference[r_,t]) < 1e-6) = 0;
      if (sum([r_,t]$(1), abs(pR_difference[r_,t])),
        display pR_difference;
      );
    
      parameter pCDK_difference[c_,t];
      pCDK_difference[c_,t]$(1) = pCDK.l[c_,t] - pCDK_saved[c_,t];
      pCDK_difference[c_,t]$(abs(pCDK_difference[c_,t]) < 1e-6) = 0;
      if (sum([c_,t]$(1), abs(pCDK_difference[c_,t])),
        display pCDK_difference;
      );
    
      parameter pCTurist_difference[c,t];
      pCTurist_difference[c,t]$(1) = pCTurist.l[c,t] - pCTurist_saved[c,t];
      pCTurist_difference[c,t]$(abs(pCTurist_difference[c,t]) < 1e-6) = 0;
      if (sum([c,t]$(1), abs(pCTurist_difference[c,t])),
        display pCTurist_difference;
      );
    
      parameter pG_difference[g_,t];
      pG_difference[g_,t]$(1) = pG.l[g_,t] - pG_saved[g_,t];
      pG_difference[g_,t]$(abs(pG_difference[g_,t]) < 1e-6) = 0;
      if (sum([g_,t]$(1), abs(pG_difference[g_,t])),
        display pG_difference;
      );
    
      parameter pI_difference[i_,t];
      pI_difference[i_,t]$(1) = pI.l[i_,t] - pI_saved[i_,t];
      pI_difference[i_,t]$(abs(pI_difference[i_,t]) < 1e-6) = 0;
      if (sum([i_,t]$(1), abs(pI_difference[i_,t])),
        display pI_difference;
      );
    
      parameter pI_s_difference[i_,s_,t];
      pI_s_difference[i_,s_,t]$(1) = pI_s.l[i_,s_,t] - pI_s_saved[i_,s_,t];
      pI_s_difference[i_,s_,t]$(abs(pI_s_difference[i_,s_,t]) < 1e-6) = 0;
      if (sum([i_,s_,t]$(1), abs(pI_s_difference[i_,s_,t])),
        display pI_s_difference;
      );
    
      parameter vY_difference[s_,t];
      vY_difference[s_,t]$(1) = vY.l[s_,t] - vY_saved[s_,t];
      vY_difference[s_,t]$(abs(vY_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vY_difference[s_,t])),
        display vY_difference;
      );
    
      parameter vM_difference[s_,t];
      vM_difference[s_,t]$(1) = vM.l[s_,t] - vM_saved[s_,t];
      vM_difference[s_,t]$(abs(vM_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vM_difference[s_,t])),
        display vM_difference;
      );
    
      parameter vBNP_difference[t];
      vBNP_difference[t]$(1) = vBNP.l[t] - vBNP_saved[t];
      vBNP_difference[t]$(abs(vBNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vBNP_difference[t])),
        display vBNP_difference;
      );
    
      parameter vBVT_difference[s_,t];
      vBVT_difference[s_,t]$(1) = vBVT.l[s_,t] - vBVT_saved[s_,t];
      vBVT_difference[s_,t]$(abs(vBVT_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(vBVT_difference[s_,t])),
        display vBVT_difference;
      );
    
      parameter vIO_difference[d_,s_,t];
      vIO_difference[d_,s_,t]$(1) = vIO.l[d_,s_,t] - vIO_saved[d_,s_,t];
      vIO_difference[d_,s_,t]$(abs(vIO_difference[d_,s_,t]) < 1e-6) = 0;
      if (sum([d_,s_,t]$(1), abs(vIO_difference[d_,s_,t])),
        display vIO_difference;
      );
    
      parameter vIOy_difference[d_,s_,t];
      vIOy_difference[d_,s_,t]$(1) = vIOy.l[d_,s_,t] - vIOy_saved[d_,s_,t];
      vIOy_difference[d_,s_,t]$(abs(vIOy_difference[d_,s_,t]) < 1e-6) = 0;
      if (sum([d_,s_,t]$(1), abs(vIOy_difference[d_,s_,t])),
        display vIOy_difference;
      );
    
      parameter vIOm_difference[d_,s_,t];
      vIOm_difference[d_,s_,t]$(1) = vIOm.l[d_,s_,t] - vIOm_saved[d_,s_,t];
      vIOm_difference[d_,s_,t]$(abs(vIOm_difference[d_,s_,t]) < 1e-6) = 0;
      if (sum([d_,s_,t]$(1), abs(vIOm_difference[d_,s_,t])),
        display vIOm_difference;
      );
    
      parameter vX_difference[x_,t];
      vX_difference[x_,t]$(1) = vX.l[x_,t] - vX_saved[x_,t];
      vX_difference[x_,t]$(abs(vX_difference[x_,t]) < 1e-6) = 0;
      if (sum([x_,t]$(1), abs(vX_difference[x_,t])),
        display vX_difference;
      );
    
      parameter vXy_difference[x,t];
      vXy_difference[x,t]$(1) = vXy.l[x,t] - vXy_saved[x,t];
      vXy_difference[x,t]$(abs(vXy_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(vXy_difference[x,t])),
        display vXy_difference;
      );
    
      parameter vR_difference[r_,t];
      vR_difference[r_,t]$(1) = vR.l[r_,t] - vR_saved[r_,t];
      vR_difference[r_,t]$(abs(vR_difference[r_,t]) < 1e-6) = 0;
      if (sum([r_,t]$(1), abs(vR_difference[r_,t])),
        display vR_difference;
      );
    
      parameter vC_difference[c_,t];
      vC_difference[c_,t]$(1) = vC.l[c_,t] - vC_saved[c_,t];
      vC_difference[c_,t]$(abs(vC_difference[c_,t]) < 1e-6) = 0;
      if (sum([c_,t]$(1), abs(vC_difference[c_,t])),
        display vC_difference;
      );
    
      parameter vCTurist_difference[c,t];
      vCTurist_difference[c,t]$(1) = vCTurist.l[c,t] - vCTurist_saved[c,t];
      vCTurist_difference[c,t]$(abs(vCTurist_difference[c,t]) < 1e-6) = 0;
      if (sum([c,t]$(1), abs(vCTurist_difference[c,t])),
        display vCTurist_difference;
      );
    
      parameter vG_difference[g_,t];
      vG_difference[g_,t]$(1) = vG.l[g_,t] - vG_saved[g_,t];
      vG_difference[g_,t]$(abs(vG_difference[g_,t]) < 1e-6) = 0;
      if (sum([g_,t]$(1), abs(vG_difference[g_,t])),
        display vG_difference;
      );
    
      parameter vI_difference[i_,t];
      vI_difference[i_,t]$(1) = vI.l[i_,t] - vI_saved[i_,t];
      vI_difference[i_,t]$(abs(vI_difference[i_,t]) < 1e-6) = 0;
      if (sum([i_,t]$(1), abs(vI_difference[i_,t])),
        display vI_difference;
      );
    
      parameter qM_difference[s_,t];
      qM_difference[s_,t]$(1) = qM.l[s_,t] - qM_saved[s_,t];
      qM_difference[s_,t]$(abs(qM_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(qM_difference[s_,t])),
        display qM_difference;
      );
    
      parameter qBNP_difference[t];
      qBNP_difference[t]$(1) = qBNP.l[t] - qBNP_saved[t];
      qBNP_difference[t]$(abs(qBNP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qBNP_difference[t])),
        display qBNP_difference;
      );
    
      parameter qBVT_difference[s_,t];
      qBVT_difference[s_,t]$(1) = qBVT.l[s_,t] - qBVT_saved[s_,t];
      qBVT_difference[s_,t]$(abs(qBVT_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(qBVT_difference[s_,t])),
        display qBVT_difference;
      );
    
      parameter qIO_difference[d_,s_,t];
      qIO_difference[d_,s_,t]$(1) = qIO.l[d_,s_,t] - qIO_saved[d_,s_,t];
      qIO_difference[d_,s_,t]$(abs(qIO_difference[d_,s_,t]) < 1e-6) = 0;
      if (sum([d_,s_,t]$(1), abs(qIO_difference[d_,s_,t])),
        display qIO_difference;
      );
    
      parameter qIOy_difference[d_,s_,t];
      qIOy_difference[d_,s_,t]$(1) = qIOy.l[d_,s_,t] - qIOy_saved[d_,s_,t];
      qIOy_difference[d_,s_,t]$(abs(qIOy_difference[d_,s_,t]) < 1e-6) = 0;
      if (sum([d_,s_,t]$(1), abs(qIOy_difference[d_,s_,t])),
        display qIOy_difference;
      );
    
      parameter qIOm_difference[d_,s_,t];
      qIOm_difference[d_,s_,t]$(1) = qIOm.l[d_,s_,t] - qIOm_saved[d_,s_,t];
      qIOm_difference[d_,s_,t]$(abs(qIOm_difference[d_,s_,t]) < 1e-6) = 0;
      if (sum([d_,s_,t]$(1), abs(qIOm_difference[d_,s_,t])),
        display qIOm_difference;
      );
    
      parameter qCDK_difference[c,t];
      qCDK_difference[c,t]$(1) = qCDK.l[c,t] - qCDK_saved[c,t];
      qCDK_difference[c,t]$(abs(qCDK_difference[c,t]) < 1e-6) = 0;
      if (sum([c,t]$(1), abs(qCDK_difference[c,t])),
        display qCDK_difference;
      );
    
      parameter qI_difference[i_,t];
      qI_difference[i_,t]$(1) = qI.l[i_,t] - qI_saved[i_,t];
      qI_difference[i_,t]$(abs(qI_difference[i_,t]) < 1e-6) = 0;
      if (sum([i_,t]$(1), abs(qI_difference[i_,t])),
        display qI_difference;
      );
    
      parameter juIOm_difference[s,t];
      juIOm_difference[s,t]$(1) = juIOm.l[s,t] - juIOm_saved[s,t];
      juIOm_difference[s,t]$(abs(juIOm_difference[s,t]) < 1e-6) = 0;
      if (sum([s,t]$(1), abs(juIOm_difference[s,t])),
        display juIOm_difference;
      );
    
      parameter juIOXy_difference[s,t];
      juIOXy_difference[s,t]$(1) = juIOXy.l[s,t] - juIOXy_saved[s,t];
      juIOXy_difference[s,t]$(abs(juIOXy_difference[s,t]) < 1e-6) = 0;
      if (sum([s,t]$(1), abs(juIOXy_difference[s,t])),
        display juIOXy_difference;
      );
    
      parameter uIO_difference[d_,s,t];
      uIO_difference[d_,s,t]$(1) = uIO.l[d_,s,t] - uIO_saved[d_,s,t];
      uIO_difference[d_,s,t]$(abs(uIO_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(uIO_difference[d_,s,t])),
        display uIO_difference;
      );
    
      parameter uIOy_difference[dux,s,t];
      uIOy_difference[dux,s,t]$(1) = uIOy.l[dux,s,t] - uIOy_saved[dux,s,t];
      uIOy_difference[dux,s,t]$(abs(uIOy_difference[dux,s,t]) < 1e-6) = 0;
      if (sum([dux,s,t]$(1), abs(uIOy_difference[dux,s,t])),
        display uIOy_difference;
      );
    
      parameter uIOm_difference[dux,s,t];
      uIOm_difference[dux,s,t]$(1) = uIOm.l[dux,s,t] - uIOm_saved[dux,s,t];
      uIOm_difference[dux,s,t]$(abs(uIOm_difference[dux,s,t]) < 1e-6) = 0;
      if (sum([dux,s,t]$(1), abs(uIOm_difference[dux,s,t])),
        display uIOm_difference;
      );
    
      parameter uIOXy_difference[x,s,t];
      uIOXy_difference[x,s,t]$(1) = uIOXy.l[x,s,t] - uIOXy_saved[x,s,t];
      uIOXy_difference[x,s,t]$(abs(uIOXy_difference[x,s,t]) < 1e-6) = 0;
      if (sum([x,s,t]$(1), abs(uIOXy_difference[x,s,t])),
        display uIOXy_difference;
      );
    
      parameter uIOXm_difference[x,s,t];
      uIOXm_difference[x,s,t]$(1) = uIOXm.l[x,s,t] - uIOXm_saved[x,s,t];
      uIOXm_difference[x,s,t]$(abs(uIOXm_difference[x,s,t]) < 1e-6) = 0;
      if (sum([x,s,t]$(1), abs(uIOXm_difference[x,s,t])),
        display uIOXm_difference;
      );
    
      parameter fpI_s_difference[i,t];
      fpI_s_difference[i,t]$(1) = fpI_s.l[i,t] - fpI_s_saved[i,t];
      fpI_s_difference[i,t]$(abs(fpI_s_difference[i,t]) < 1e-6) = 0;
      if (sum([i,t]$(1), abs(fpI_s_difference[i,t])),
        display fpI_s_difference;
      );
    
      parameter uIO0_difference[dux,s_,t];
      uIO0_difference[dux,s_,t]$(1) = uIO0.l[dux,s_,t] - uIO0_saved[dux,s_,t];
      uIO0_difference[dux,s_,t]$(abs(uIO0_difference[dux,s_,t]) < 1e-6) = 0;
      if (sum([dux,s_,t]$(1), abs(uIO0_difference[dux,s_,t])),
        display uIO0_difference;
      );
    
      parameter rpIOm2pIOy_difference[d_,s,t];
      rpIOm2pIOy_difference[d_,s,t]$(1) = rpIOm2pIOy.l[d_,s,t] - rpIOm2pIOy_saved[d_,s,t];
      rpIOm2pIOy_difference[d_,s,t]$(abs(rpIOm2pIOy_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(rpIOm2pIOy_difference[d_,s,t])),
        display rpIOm2pIOy_difference;
      );
    
      parameter fqMKortsigt_difference[dux,s,t];
      fqMKortsigt_difference[dux,s,t]$(1) = fqMKortsigt.l[dux,s,t] - fqMKortsigt_saved[dux,s,t];
      fqMKortsigt_difference[dux,s,t]$(abs(fqMKortsigt_difference[dux,s,t]) < 1e-6) = 0;
      if (sum([dux,s,t]$(1), abs(fqMKortsigt_difference[dux,s,t])),
        display fqMKortsigt_difference;
      );
    
      parameter pBoligRigid_difference[a,t];
      pBoligRigid_difference[a,t]$(1) = pBoligRigid.l[a,t] - pBoligRigid_saved[a,t];
      pBoligRigid_difference[a,t]$(abs(pBoligRigid_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(pBoligRigid_difference[a,t])),
        display pBoligRigid_difference;
      );
    
      parameter vtHh_difference[a_,t];
      vtHh_difference[a_,t]$(1) = vtHh.l[a_,t] - vtHh_saved[a_,t];
      vtHh_difference[a_,t]$(abs(vtHh_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vtHh_difference[a_,t])),
        display vtHh_difference;
      );
    
      parameter vDispInd_difference[t];
      vDispInd_difference[t]$(1) = vDispInd.l[t] - vDispInd_saved[t];
      vDispInd_difference[t]$(abs(vDispInd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vDispInd_difference[t])),
        display vDispInd_difference;
      );
    
      parameter vHhInd_difference[a_,t];
      vHhInd_difference[a_,t]$(1) = vHhInd.l[a_,t] - vHhInd_saved[a_,t];
      vHhInd_difference[a_,t]$(abs(vHhInd_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhInd_difference[a_,t])),
        display vHhInd_difference;
      );
    
      parameter vHhxAfk_difference[a_,t];
      vHhxAfk_difference[a_,t]$(1) = vHhxAfk.l[a_,t] - vHhxAfk_saved[a_,t];
      vHhxAfk_difference[a_,t]$(abs(vHhxAfk_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhxAfk_difference[a_,t])),
        display vHhxAfk_difference;
      );
    
      parameter vHhFinAkt_difference[a_,t];
      vHhFinAkt_difference[a_,t]$(1) = vHhFinAkt.l[a_,t] - vHhFinAkt_saved[a_,t];
      vHhFinAkt_difference[a_,t]$(abs(vHhFinAkt_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhFinAkt_difference[a_,t])),
        display vHhFinAkt_difference;
      );
    
      parameter vHh_difference[portf_,a_,t];
      vHh_difference[portf_,a_,t]$(1) = vHh.l[portf_,a_,t] - vHh_saved[portf_,a_,t];
      vHh_difference[portf_,a_,t]$(abs(vHh_difference[portf_,a_,t]) < 1e-6) = 0;
      if (sum([portf_,a_,t]$(1), abs(vHh_difference[portf_,a_,t])),
        display vHh_difference;
      );
    
      parameter vHhRenter_difference[portf_,t];
      vHhRenter_difference[portf_,t]$(1) = vHhRenter.l[portf_,t] - vHhRenter_saved[portf_,t];
      vHhRenter_difference[portf_,t]$(abs(vHhRenter_difference[portf_,t]) < 1e-6) = 0;
      if (sum([portf_,t]$(1), abs(vHhRenter_difference[portf_,t])),
        display vHhRenter_difference;
      );
    
      parameter vHhOmv_difference[portf_,t];
      vHhOmv_difference[portf_,t]$(1) = vHhOmv.l[portf_,t] - vHhOmv_saved[portf_,t];
      vHhOmv_difference[portf_,t]$(abs(vHhOmv_difference[portf_,t]) < 1e-6) = 0;
      if (sum([portf_,t]$(1), abs(vHhOmv_difference[portf_,t])),
        display vHhOmv_difference;
      );
    
      parameter vHhPensAfk_difference[portf_,a_,t];
      vHhPensAfk_difference[portf_,a_,t]$(1) = vHhPensAfk.l[portf_,a_,t] - vHhPensAfk_saved[portf_,a_,t];
      vHhPensAfk_difference[portf_,a_,t]$(abs(vHhPensAfk_difference[portf_,a_,t]) < 1e-6) = 0;
      if (sum([portf_,a_,t]$(1), abs(vHhPensAfk_difference[portf_,a_,t])),
        display vHhPensAfk_difference;
      );
    
      parameter vHhNFE_difference[t];
      vHhNFE_difference[t]$(1) = vHhNFE.l[t] - vHhNFE_saved[t];
      vHhNFE_difference[t]$(abs(vHhNFE_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vHhNFE_difference[t])),
        display vHhNFE_difference;
      );
    
      parameter vPensIndb_difference[portf_,a_,t];
      vPensIndb_difference[portf_,a_,t]$(1) = vPensIndb.l[portf_,a_,t] - vPensIndb_saved[portf_,a_,t];
      vPensIndb_difference[portf_,a_,t]$(abs(vPensIndb_difference[portf_,a_,t]) < 1e-6) = 0;
      if (sum([portf_,a_,t]$(1), abs(vPensIndb_difference[portf_,a_,t])),
        display vPensIndb_difference;
      );
    
      parameter vPensUdb_difference[portf_,a_,t];
      vPensUdb_difference[portf_,a_,t]$(1) = vPensUdb.l[portf_,a_,t] - vPensUdb_saved[portf_,a_,t];
      vPensUdb_difference[portf_,a_,t]$(abs(vPensUdb_difference[portf_,a_,t]) < 1e-6) = 0;
      if (sum([portf_,a_,t]$(1), abs(vPensUdb_difference[portf_,a_,t])),
        display vPensUdb_difference;
      );
    
      parameter vPensArv_difference[portf_,a_,t];
      vPensArv_difference[portf_,a_,t]$(1) = vPensArv.l[portf_,a_,t] - vPensArv_saved[portf_,a_,t];
      vPensArv_difference[portf_,a_,t]$(abs(vPensArv_difference[portf_,a_,t]) < 1e-6) = 0;
      if (sum([portf_,a_,t]$(1), abs(vPensArv_difference[portf_,a_,t])),
        display vPensArv_difference;
      );
    
      parameter vNetIndPensUdb_difference[t];
      vNetIndPensUdb_difference[t]$(1) = vNetIndPensUdb.l[t] - vNetIndPensUdb_saved[t];
      vNetIndPensUdb_difference[t]$(abs(vNetIndPensUdb_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vNetIndPensUdb_difference[t])),
        display vNetIndPensUdb_difference;
      );
    
      parameter vNetKolPensUdb_difference[t];
      vNetKolPensUdb_difference[t]$(1) = vNetKolPensUdb.l[t] - vNetKolPensUdb_saved[t];
      vNetKolPensUdb_difference[t]$(abs(vNetKolPensUdb_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vNetKolPensUdb_difference[t])),
        display vNetKolPensUdb_difference;
      );
    
      parameter vKolPensRenter_difference[t];
      vKolPensRenter_difference[t]$(1) = vKolPensRenter.l[t] - vKolPensRenter_saved[t];
      vKolPensRenter_difference[t]$(abs(vKolPensRenter_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vKolPensRenter_difference[t])),
        display vKolPensRenter_difference;
      );
    
      parameter vLejeAfEjerBolig_difference[t];
      vLejeAfEjerBolig_difference[t]$(1) = vLejeAfEjerBolig.l[t] - vLejeAfEjerBolig_saved[t];
      vLejeAfEjerBolig_difference[t]$(abs(vLejeAfEjerBolig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vLejeAfEjerBolig_difference[t])),
        display vLejeAfEjerBolig_difference;
      );
    
      parameter vHhFraVirkKap_difference[t];
      vHhFraVirkKap_difference[t]$(1) = vHhFraVirkKap.l[t] - vHhFraVirkKap_saved[t];
      vHhFraVirkKap_difference[t]$(abs(vHhFraVirkKap_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vHhFraVirkKap_difference[t])),
        display vHhFraVirkKap_difference;
      );
    
      parameter vHhFraVirkOev_difference[t];
      vHhFraVirkOev_difference[t]$(1) = vHhFraVirkOev.l[t] - vHhFraVirkOev_saved[t];
      vHhFraVirkOev_difference[t]$(abs(vHhFraVirkOev_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vHhFraVirkOev_difference[t])),
        display vHhFraVirkOev_difference;
      );
    
      parameter vHhFraVirk_difference[t];
      vHhFraVirk_difference[t]$(1) = vHhFraVirk.l[t] - vHhFraVirk_saved[t];
      vHhFraVirk_difference[t]$(abs(vHhFraVirk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vHhFraVirk_difference[t])),
        display vHhFraVirk_difference;
      );
    
      parameter vHhTilUdl_difference[t];
      vHhTilUdl_difference[t]$(1) = vHhTilUdl.l[t] - vHhTilUdl_saved[t];
      vHhTilUdl_difference[t]$(abs(vHhTilUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vHhTilUdl_difference[t])),
        display vHhTilUdl_difference;
      );
    
      parameter mrHhxAfk_difference[t];
      mrHhxAfk_difference[t]$(1) = mrHhxAfk.l[t] - mrHhxAfk_saved[t];
      mrHhxAfk_difference[t]$(abs(mrHhxAfk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(mrHhxAfk_difference[t])),
        display mrHhxAfk_difference;
      );
    
      parameter mrRealKredAfk_difference[t];
      mrRealKredAfk_difference[t]$(1) = mrRealKredAfk.l[t] - mrRealKredAfk_saved[t];
      mrRealKredAfk_difference[t]$(abs(mrRealKredAfk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(mrRealKredAfk_difference[t])),
        display mrRealKredAfk_difference;
      );
    
      parameter rRealKred2Bolig_difference[a_,t];
      rRealKred2Bolig_difference[a_,t]$(1) = rRealKred2Bolig.l[a_,t] - rRealKred2Bolig_saved[a_,t];
      rRealKred2Bolig_difference[a_,t]$(abs(rRealKred2Bolig_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(rRealKred2Bolig_difference[a_,t])),
        display rRealKred2Bolig_difference;
      );
    
      parameter rPensIndb_difference[pens,a_,t];
      rPensIndb_difference[pens,a_,t]$(1) = rPensIndb.l[pens,a_,t] - rPensIndb_saved[pens,a_,t];
      rPensIndb_difference[pens,a_,t]$(abs(rPensIndb_difference[pens,a_,t]) < 1e-6) = 0;
      if (sum([pens,a_,t]$(1), abs(rPensIndb_difference[pens,a_,t])),
        display rPensIndb_difference;
      );
    
      parameter rPensUdb_difference[pens,a_,t];
      rPensUdb_difference[pens,a_,t]$(1) = rPensUdb.l[pens,a_,t] - rPensUdb_saved[pens,a_,t];
      rPensUdb_difference[pens,a_,t]$(abs(rPensUdb_difference[pens,a_,t]) < 1e-6) = 0;
      if (sum([pens,a_,t]$(1), abs(rPensUdb_difference[pens,a_,t])),
        display rPensUdb_difference;
      );
    
      parameter rBoligOmkRest_difference[t];
      rBoligOmkRest_difference[t]$(1) = rBoligOmkRest.l[t] - rBoligOmkRest_saved[t];
      rBoligOmkRest_difference[t]$(abs(rBoligOmkRest_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rBoligOmkRest_difference[t])),
        display rBoligOmkRest_difference;
      );
    
      parameter rHhAfk_difference[portf,t];
      rHhAfk_difference[portf,t]$(1) = rHhAfk.l[portf,t] - rHhAfk_saved[portf,t];
      rHhAfk_difference[portf,t]$(abs(rHhAfk_difference[portf,t]) < 1e-6) = 0;
      if (sum([portf,t]$(1), abs(rHhAfk_difference[portf,t])),
        display rHhAfk_difference;
      );
    
      parameter jvHhxAfk_difference[a_,t];
      jvHhxAfk_difference[a_,t]$(1) = jvHhxAfk.l[a_,t] - jvHhxAfk_saved[a_,t];
      jvHhxAfk_difference[a_,t]$(abs(jvHhxAfk_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(jvHhxAfk_difference[a_,t])),
        display jvHhxAfk_difference;
      );
    
      parameter jvHhPensAfk_difference[portf_,a_,t];
      jvHhPensAfk_difference[portf_,a_,t]$(1) = jvHhPensAfk.l[portf_,a_,t] - jvHhPensAfk_saved[portf_,a_,t];
      jvHhPensAfk_difference[portf_,a_,t]$(abs(jvHhPensAfk_difference[portf_,a_,t]) < 1e-6) = 0;
      if (sum([portf_,a_,t]$(1), abs(jvHhPensAfk_difference[portf_,a_,t])),
        display jvHhPensAfk_difference;
      );
    
      parameter jvHh_difference[t];
      jvHh_difference[t]$(1) = jvHh.l[t] - jvHh_saved[t];
      jvHh_difference[t]$(abs(jvHh_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvHh_difference[t])),
        display jvHh_difference;
      );
    
      parameter mtAktie_difference[t];
      mtAktie_difference[t]$(1) = mtAktie.l[t] - mtAktie_saved[t];
      mtAktie_difference[t]$(abs(mtAktie_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(mtAktie_difference[t])),
        display mtAktie_difference;
      );
    
      parameter pKspBy_difference[t];
      pKspBy_difference[t]$(1) = pKspBy.l[t] - pKspBy_saved[t];
      pKspBy_difference[t]$(abs(pKspBy_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(pKspBy_difference[t])),
        display pKspBy_difference;
      );
    
      parameter sqBVT_difference[t];
      sqBVT_difference[t]$(1) = sqBVT.l[t] - sqBVT_saved[t];
      sqBVT_difference[t]$(abs(sqBVT_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(sqBVT_difference[t])),
        display sqBVT_difference;
      );
    
      parameter sdqLdnL_difference[s_,t];
      sdqLdnL_difference[s_,t]$(1) = sdqLdnL.l[s_,t] - sdqLdnL_saved[s_,t];
      sdqLdnL_difference[s_,t]$(abs(sdqLdnL_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(sdqLdnL_difference[s_,t])),
        display sdqLdnL_difference;
      );
    
      parameter sdOpslagOmk2dnLLag_difference[t];
      sdOpslagOmk2dnLLag_difference[t]$(1) = sdOpslagOmk2dnLLag.l[t] - sdOpslagOmk2dnLLag_saved[t];
      sdOpslagOmk2dnLLag_difference[t]$(abs(sdOpslagOmk2dnLLag_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(sdOpslagOmk2dnLLag_difference[t])),
        display sdOpslagOmk2dnLLag_difference;
      );
    
      parameter sqL_difference[s_,t];
      sqL_difference[s_,t]$(1) = sqL.l[s_,t] - sqL_saved[s_,t];
      sqL_difference[s_,t]$(abs(sqL_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(sqL_difference[s_,t])),
        display sqL_difference;
      );
    
      parameter qKspBy_difference[t];
      qKspBy_difference[t]$(1) = qKspBy.l[t] - qKspBy_saved[t];
      qKspBy_difference[t]$(abs(qKspBy_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qKspBy_difference[t])),
        display qKspBy_difference;
      );
    
      parameter qLspBy_difference[t];
      qLspBy_difference[t]$(1) = qLspBy.l[t] - qLspBy_saved[t];
      qLspBy_difference[t]$(abs(qLspBy_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qLspBy_difference[t])),
        display qLspBy_difference;
      );
    
      parameter sqLspBy_difference[t];
      sqLspBy_difference[t]$(1) = sqLspBy.l[t] - sqLspBy_saved[t];
      sqLspBy_difference[t]$(abs(sqLspBy_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(sqLspBy_difference[t])),
        display sqLspBy_difference;
      );
    
      parameter uY_difference[t];
      uY_difference[t]$(1) = uY.l[t] - uY_saved[t];
      uY_difference[t]$(abs(uY_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uY_difference[t])),
        display uY_difference;
      );
    
      parameter shL_difference[t];
      shL_difference[t]$(1) = shL.l[t] - shL_saved[t];
      shL_difference[t]$(abs(shL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(shL_difference[t])),
        display shL_difference;
      );
    
      parameter srL2nL_difference[t];
      srL2nL_difference[t]$(1) = srL2nL.l[t] - srL2nL_saved[t];
      srL2nL_difference[t]$(abs(srL2nL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(srL2nL_difference[t])),
        display srL2nL_difference;
      );
    
      parameter sfW_difference[s_,t];
      sfW_difference[s_,t]$(1) = sfW.l[s_,t] - sfW_saved[s_,t];
      sfW_difference[s_,t]$(abs(sfW_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(sfW_difference[s_,t])),
        display sfW_difference;
      );
    
      parameter sdOpslagOmk2dnL_difference[t];
      sdOpslagOmk2dnL_difference[t]$(1) = sdOpslagOmk2dnL.l[t] - sdOpslagOmk2dnL_saved[t];
      sdOpslagOmk2dnL_difference[t]$(abs(sdOpslagOmk2dnL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(sdOpslagOmk2dnL_difference[t])),
        display sdOpslagOmk2dnL_difference;
      );
    
      parameter sfProdHh_difference[t];
      sfProdHh_difference[t]$(1) = sfProdHh.l[t] - sfProdHh_saved[t];
      sfProdHh_difference[t]$(abs(sfProdHh_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(sfProdHh_difference[t])),
        display sfProdHh_difference;
      );
    
      parameter snSoegBaseHh_difference[a_,t];
      snSoegBaseHh_difference[a_,t]$(1) = snSoegBaseHh.l[a_,t] - snSoegBaseHh_saved[a_,t];
      snSoegBaseHh_difference[a_,t]$(abs(snSoegBaseHh_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(snSoegBaseHh_difference[a_,t])),
        display snSoegBaseHh_difference;
      );
    
      parameter snLHh_difference[a_,t];
      snLHh_difference[a_,t]$(1) = snLHh.l[a_,t] - snLHh_saved[a_,t];
      snLHh_difference[a_,t]$(abs(snLHh_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(snLHh_difference[a_,t])),
        display snLHh_difference;
      );
    
      parameter snSoegHh_difference[a_,t];
      snSoegHh_difference[a_,t]$(1) = snSoegHh.l[a_,t] - snSoegHh_saved[a_,t];
      snSoegHh_difference[a_,t]$(abs(snSoegHh_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(snSoegHh_difference[a_,t])),
        display snSoegHh_difference;
      );
    
      parameter sfDeltag_difference[a,t];
      sfDeltag_difference[a,t]$(1) = sfDeltag.l[a,t] - sfDeltag_saved[a,t];
      sfDeltag_difference[a,t]$(abs(sfDeltag_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(sfDeltag_difference[a,t])),
        display sfDeltag_difference;
      );
    
      parameter srJobFinding_difference[t];
      srJobFinding_difference[t]$(1) = srJobFinding.l[t] - srJobFinding_saved[t];
      srJobFinding_difference[t]$(abs(srJobFinding_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(srJobFinding_difference[t])),
        display srJobFinding_difference;
      );
    
      parameter srMatch_difference[t];
      srMatch_difference[t]$(1) = srMatch.l[t] - srMatch_saved[t];
      srMatch_difference[t]$(abs(srMatch_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(srMatch_difference[t])),
        display srMatch_difference;
      );
    
      parameter srOpslag2soeg_difference[t];
      srOpslag2soeg_difference[t]$(1) = srOpslag2soeg.l[t] - srOpslag2soeg_saved[t];
      srOpslag2soeg_difference[t]$(abs(srOpslag2soeg_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(srOpslag2soeg_difference[t])),
        display srOpslag2soeg_difference;
      );
    
      parameter shLHh_difference[a_,t];
      shLHh_difference[a_,t]$(1) = shLHh.l[a_,t] - shLHh_saved[a_,t];
      shLHh_difference[a_,t]$(abs(shLHh_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(shLHh_difference[a_,t])),
        display shLHh_difference;
      );
    
      parameter srOpslagOmk_difference[t];
      srOpslagOmk_difference[t]$(1) = srOpslagOmk.l[t] - srOpslagOmk_saved[t];
      srOpslagOmk_difference[t]$(abs(srOpslagOmk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(srOpslagOmk_difference[t])),
        display srOpslagOmk_difference;
      );
    
      parameter snOpslag_difference[t];
      snOpslag_difference[t]$(1) = snOpslag.l[t] - snOpslag_saved[t];
      snOpslag_difference[t]$(abs(snOpslag_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(snOpslag_difference[t])),
        display snOpslag_difference;
      );
    
      parameter srSeparation_difference[t];
      srSeparation_difference[t]$(1) = srSeparation.l[t] - srSeparation_saved[t];
      srSeparation_difference[t]$(abs(srSeparation_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(srSeparation_difference[t])),
        display srSeparation_difference;
      );
    
      parameter snLUdl_difference[t];
      snLUdl_difference[t]$(1) = snLUdl.l[t] - snLUdl_saved[t];
      snLUdl_difference[t]$(abs(snLUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(snLUdl_difference[t])),
        display snLUdl_difference;
      );
    
      parameter shLUdl_difference[t];
      shLUdl_difference[t]$(1) = shLUdl.l[t] - shLUdl_saved[t];
      shLUdl_difference[t]$(abs(shLUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(shLUdl_difference[t])),
        display shLUdl_difference;
      );
    
      parameter snL_difference[s_,t];
      snL_difference[s_,t]$(1) = snL.l[s_,t] - snL_saved[s_,t];
      snL_difference[s_,t]$(abs(snL_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(snL_difference[s_,t])),
        display snL_difference;
      );
    
      parameter snSoegUdl_difference[t];
      snSoegUdl_difference[t]$(1) = snSoegUdl.l[t] - snSoegUdl_saved[t];
      snSoegUdl_difference[t]$(abs(snSoegUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(snSoegUdl_difference[t])),
        display snSoegUdl_difference;
      );
    
      parameter snSoc_difference[soc_,t];
      snSoc_difference[soc_,t]$(1) = snSoc.l[soc_,t] - snSoc_saved[soc_,t];
      snSoc_difference[soc_,t]$(abs(snSoc_difference[soc_,t]) < 1e-6) = 0;
      if (sum([soc_,t]$(1), abs(snSoc_difference[soc_,t])),
        display snSoc_difference;
      );
    
      parameter dSoc2dPop_difference[soc_,t];
      dSoc2dPop_difference[soc_,t]$(1) = dSoc2dPop.l[soc_,t] - dSoc2dPop_saved[soc_,t];
      dSoc2dPop_difference[soc_,t]$(abs(dSoc2dPop_difference[soc_,t]) < 1e-6) = 0;
      if (sum([soc_,t]$(1), abs(dSoc2dPop_difference[soc_,t])),
        display dSoc2dPop_difference;
      );
    
      parameter srLedig_difference[t];
      srLedig_difference[t]$(1) = srLedig.l[t] - srLedig_saved[t];
      srLedig_difference[t]$(abs(srLedig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(srLedig_difference[t])),
        display srLedig_difference;
      );
    
      parameter pUdl_difference[t];
      pUdl_difference[t]$(1) = pUdl.l[t] - pUdl_saved[t];
      pUdl_difference[t]$(abs(pUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(pUdl_difference[t])),
        display pUdl_difference;
      );
    
      parameter pOlie_difference[t];
      pOlie_difference[t]$(1) = pOlie.l[t] - pOlie_saved[t];
      pOlie_difference[t]$(abs(pOlie_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(pOlie_difference[t])),
        display pOlie_difference;
      );
    
      parameter pLxUdn_difference[sp,t];
      pLxUdn_difference[sp,t]$(1) = pLxUdn.l[sp,t] - pLxUdn_saved[sp,t];
      pLxUdn_difference[sp,t]$(abs(pLxUdn_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(pLxUdn_difference[sp,t])),
        display pLxUdn_difference;
      );
    
      parameter uR_difference[sp,t];
      uR_difference[sp,t]$(1) = uR.l[sp,t] - uR_saved[sp,t];
      uR_difference[sp,t]$(abs(uR_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(uR_difference[sp,t])),
        display uR_difference;
      );
    
      parameter uKLB_difference[sp,t];
      uKLB_difference[sp,t]$(1) = uKLB.l[sp,t] - uKLB_saved[sp,t];
      uKLB_difference[sp,t]$(abs(uKLB_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(uKLB_difference[sp,t])),
        display uKLB_difference;
      );
    
      parameter uL_difference[sp,t];
      uL_difference[sp,t]$(1) = uL.l[sp,t] - uL_saved[sp,t];
      uL_difference[sp,t]$(abs(uL_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(uL_difference[sp,t])),
        display uL_difference;
      );
    
      parameter uK_difference[k,sp,t];
      uK_difference[k,sp,t]$(1) = uK.l[k,sp,t] - uK_saved[k,sp,t];
      uK_difference[k,sp,t]$(abs(uK_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(uK_difference[k,sp,t])),
        display uK_difference;
      );
    
      parameter uKL_difference[sp,t];
      uKL_difference[sp,t]$(1) = uKL.l[sp,t] - uKL_saved[sp,t];
      uKL_difference[sp,t]$(abs(uKL_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(uKL_difference[sp,t])),
        display uKL_difference;
      );
    
      parameter uh_difference[a,t];
      uh_difference[a,t]$(1) = uh.l[a,t] - uh_saved[a,t];
      uh_difference[a,t]$(abs(uh_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uh_difference[a,t])),
        display uh_difference;
      );
    
      parameter vVirkIndRest_difference[t];
      vVirkIndRest_difference[t]$(1) = vVirkIndRest.l[t] - vVirkIndRest_saved[t];
      vVirkIndRest_difference[t]$(abs(vVirkIndRest_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vVirkIndRest_difference[t])),
        display vVirkIndRest_difference;
      );
    
      parameter vOffAkt_difference[t];
      vOffAkt_difference[t]$(1) = vOffAkt.l[t] - vOffAkt_saved[t];
      vOffAkt_difference[t]$(abs(vOffAkt_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffAkt_difference[t])),
        display vOffAkt_difference;
      );
    
      parameter vOffFonde_difference[t];
      vOffFonde_difference[t]$(1) = vOffFonde.l[t] - vOffFonde_saved[t];
      vOffFonde_difference[t]$(abs(vOffFonde_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffFonde_difference[t])),
        display vOffFonde_difference;
      );
    
      parameter vtPALGab_difference[t];
      vtPALGab_difference[t]$(1) = vtPALGab.l[t] - vtPALGab_saved[t];
      vtPALGab_difference[t]$(abs(vtPALGab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtPALGab_difference[t])),
        display vtPALGab_difference;
      );
    
      parameter vtSelskabNordGab_difference[t];
      vtSelskabNordGab_difference[t]$(1) = vtSelskabNordGab.l[t] - vtSelskabNordGab_saved[t];
      vtSelskabNordGab_difference[t]$(abs(vtSelskabNordGab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtSelskabNordGab_difference[t])),
        display vtSelskabNordGab_difference;
      );
    
      parameter vtSelskabRestGab_difference[t];
      vtSelskabRestGab_difference[t]$(1) = vtSelskabRestGab.l[t] - vtSelskabRestGab_saved[t];
      vtSelskabRestGab_difference[t]$(abs(vtSelskabRestGab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtSelskabRestGab_difference[t])),
        display vtSelskabRestGab_difference;
      );
    
      parameter vtRegGab_difference[t];
      vtRegGab_difference[t]$(1) = vtRegGab.l[t] - vtRegGab_saved[t];
      vtRegGab_difference[t]$(abs(vtRegGab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtRegGab_difference[t])),
        display vtRegGab_difference;
      );
    
      parameter vOffNetRenterGab_difference[t];
      vOffNetRenterGab_difference[t]$(1) = vOffNetRenterGab.l[t] - vOffNetRenterGab_saved[t];
      vOffNetRenterGab_difference[t]$(abs(vOffNetRenterGab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffNetRenterGab_difference[t])),
        display vOffNetRenterGab_difference;
      );
    
      parameter vtRestGab_difference[t];
      vtRestGab_difference[t]$(1) = vtRestGab.l[t] - vtRestGab_saved[t];
      vtRestGab_difference[t]$(abs(vtRestGab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtRestGab_difference[t])),
        display vtRestGab_difference;
      );
    
      parameter vEngangsForholdGab_difference[t];
      vEngangsForholdGab_difference[t]$(1) = vEngangsForholdGab.l[t] - vEngangsForholdGab_saved[t];
      vEngangsForholdGab_difference[t]$(abs(vEngangsForholdGab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vEngangsForholdGab_difference[t])),
        display vEngangsForholdGab_difference;
      );
    
      parameter jvOffPrimInd_difference[t];
      jvOffPrimInd_difference[t]$(1) = jvOffPrimInd.l[t] - jvOffPrimInd_saved[t];
      jvOffPrimInd_difference[t]$(abs(jvOffPrimInd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvOffPrimInd_difference[t])),
        display jvOffPrimInd_difference;
      );
    
      parameter vtKildeRest_difference[t];
      vtKildeRest_difference[t]$(1) = vtKildeRest.l[t] - vtKildeRest_saved[t];
      vtKildeRest_difference[t]$(abs(vtKildeRest_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtKildeRest_difference[t])),
        display vtKildeRest_difference;
      );
    
      parameter vtDirekteRest_difference[t];
      vtDirekteRest_difference[t]$(1) = vtDirekteRest.l[t] - vtDirekteRest_saved[t];
      vtDirekteRest_difference[t]$(abs(vtDirekteRest_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vtDirekteRest_difference[t])),
        display vtDirekteRest_difference;
      );
    
      parameter vOffFraUdl_difference[t];
      vOffFraUdl_difference[t]$(1) = vOffFraUdl.l[t] - vOffFraUdl_saved[t];
      vOffFraUdl_difference[t]$(abs(vOffFraUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffFraUdl_difference[t])),
        display vOffFraUdl_difference;
      );
    
      parameter vOffFraHh_difference[t];
      vOffFraHh_difference[t]$(1) = vOffFraHh.l[t] - vOffFraHh_saved[t];
      vOffFraHh_difference[t]$(abs(vOffFraHh_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffFraHh_difference[t])),
        display vOffFraHh_difference;
      );
    
      parameter vOffFraVirk_difference[t];
      vOffFraVirk_difference[t]$(1) = vOffFraVirk.l[t] - vOffFraVirk_saved[t];
      vOffFraVirk_difference[t]$(abs(vOffFraVirk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffFraVirk_difference[t])),
        display vOffFraVirk_difference;
      );
    
      parameter vOffVirk_difference[t];
      vOffVirk_difference[t]$(1) = vOffVirk.l[t] - vOffVirk_saved[t];
      vOffVirk_difference[t]$(abs(vOffVirk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffVirk_difference[t])),
        display vOffVirk_difference;
      );
    
      parameter vPersIndRest_a_difference[a_,t];
      vPersIndRest_a_difference[a_,t]$(1) = vPersIndRest_a.l[a_,t] - vPersIndRest_a_saved[a_,t];
      vPersIndRest_a_difference[a_,t]$(abs(vPersIndRest_a_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vPersIndRest_a_difference[a_,t])),
        display vPersIndRest_a_difference;
      );
    
      parameter vPersIndRest_t_difference[t];
      vPersIndRest_t_difference[t]$(1) = vPersIndRest_t.l[t] - vPersIndRest_t_saved[t];
      vPersIndRest_t_difference[t]$(abs(vPersIndRest_t_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vPersIndRest_t_difference[t])),
        display vPersIndRest_t_difference;
      );
    
      parameter vHhOvfRest_difference[a,t];
      vHhOvfRest_difference[a,t]$(1) = vHhOvfRest.l[a,t] - vHhOvfRest_saved[a,t];
      vHhOvfRest_difference[a,t]$(abs(vHhOvfRest_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(vHhOvfRest_difference[a,t])),
        display vHhOvfRest_difference;
      );
    
      parameter vOffLandKoeb_difference[t];
      vOffLandKoeb_difference[t]$(1) = vOffLandKoeb.l[t] - vOffLandKoeb_saved[t];
      vOffLandKoeb_difference[t]$(abs(vOffLandKoeb_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffLandKoeb_difference[t])),
        display vOffLandKoeb_difference;
      );
    
      parameter vOffTilUdl_difference[t];
      vOffTilUdl_difference[t]$(1) = vOffTilUdl.l[t] - vOffTilUdl_saved[t];
      vOffTilUdl_difference[t]$(abs(vOffTilUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffTilUdl_difference[t])),
        display vOffTilUdl_difference;
      );
    
      parameter vOffTilVirk_difference[t];
      vOffTilVirk_difference[t]$(1) = vOffTilVirk.l[t] - vOffTilVirk_saved[t];
      vOffTilVirk_difference[t]$(abs(vOffTilVirk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffTilVirk_difference[t])),
        display vOffTilVirk_difference;
      );
    
      parameter vOffTilHhKap_difference[t];
      vOffTilHhKap_difference[t]$(1) = vOffTilHhKap.l[t] - vOffTilHhKap_saved[t];
      vOffTilHhKap_difference[t]$(abs(vOffTilHhKap_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffTilHhKap_difference[t])),
        display vOffTilHhKap_difference;
      );
    
      parameter vOffTilHhOev_difference[t];
      vOffTilHhOev_difference[t]$(1) = vOffTilHhOev.l[t] - vOffTilHhOev_saved[t];
      vOffTilHhOev_difference[t]$(abs(vOffTilHhOev_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffTilHhOev_difference[t])),
        display vOffTilHhOev_difference;
      );
    
      parameter vSubEU_difference[t];
      vSubEU_difference[t]$(1) = vSubEU.l[t] - vSubEU_saved[t];
      vSubEU_difference[t]$(abs(vSubEU_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vSubEU_difference[t])),
        display vSubEU_difference;
      );
    
      parameter vhWVirk_difference[t];
      vhWVirk_difference[t]$(1) = vhWVirk.l[t] - vhWVirk_saved[t];
      vhWVirk_difference[t]$(abs(vhWVirk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vhWVirk_difference[t])),
        display vhWVirk_difference;
      );
    
      parameter vOffLoen_difference[t];
      vOffLoen_difference[t]$(1) = vOffLoen.l[t] - vOffLoen_saved[t];
      vOffLoen_difference[t]$(abs(vOffLoen_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vOffLoen_difference[t])),
        display vOffLoen_difference;
      );
    
      parameter vHhFormueR_difference[a_,t];
      vHhFormueR_difference[a_,t]$(1) = vHhFormueR.l[a_,t] - vHhFormueR_saved[a_,t];
      vHhFormueR_difference[a_,t]$(abs(vHhFormueR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhFormueR_difference[a_,t])),
        display vHhFormueR_difference;
      );
    
      parameter vHhFormueHtM_difference[a_,t];
      vHhFormueHtM_difference[a_,t]$(1) = vHhFormueHtM.l[a_,t] - vHhFormueHtM_saved[a_,t];
      vHhFormueHtM_difference[a_,t]$(abs(vHhFormueHtM_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhFormueHtM_difference[a_,t])),
        display vHhFormueHtM_difference;
      );
    
      parameter vHhxR_difference[a_,t];
      vHhxR_difference[a_,t]$(1) = vHhxR.l[a_,t] - vHhxR_saved[a_,t];
      vHhxR_difference[a_,t]$(abs(vHhxR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhxR_difference[a_,t])),
        display vHhxR_difference;
      );
    
      parameter vHhPensR_difference[a_,t];
      vHhPensR_difference[a_,t]$(1) = vHhPensR.l[a_,t] - vHhPensR_saved[a_,t];
      vHhPensR_difference[a_,t]$(abs(vHhPensR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhPensR_difference[a_,t])),
        display vHhPensR_difference;
      );
    
      parameter vHhPensHtM_difference[a_,t];
      vHhPensHtM_difference[a_,t]$(1) = vHhPensHtM.l[a_,t] - vHhPensHtM_saved[a_,t];
      vHhPensHtM_difference[a_,t]$(abs(vHhPensHtM_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhPensHtM_difference[a_,t])),
        display vHhPensHtM_difference;
      );
    
      parameter vHhPens_difference[a_,t];
      vHhPens_difference[a_,t]$(1) = vHhPens.l[a_,t] - vHhPens_saved[a_,t];
      vHhPens_difference[a_,t]$(abs(vHhPens_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhPens_difference[a_,t])),
        display vHhPens_difference;
      );
    
      parameter vFrivaerdiR_difference[a_,t];
      vFrivaerdiR_difference[a_,t]$(1) = vFrivaerdiR.l[a_,t] - vFrivaerdiR_saved[a_,t];
      vFrivaerdiR_difference[a_,t]$(abs(vFrivaerdiR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vFrivaerdiR_difference[a_,t])),
        display vFrivaerdiR_difference;
      );
    
      parameter vFrivaerdiHtM_difference[a_,t];
      vFrivaerdiHtM_difference[a_,t]$(1) = vFrivaerdiHtM.l[a_,t] - vFrivaerdiHtM_saved[a_,t];
      vFrivaerdiHtM_difference[a_,t]$(abs(vFrivaerdiHtM_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vFrivaerdiHtM_difference[a_,t])),
        display vFrivaerdiHtM_difference;
      );
    
      parameter vHhIndHtM_difference[a_,t];
      vHhIndHtM_difference[a_,t]$(1) = vHhIndHtM.l[a_,t] - vHhIndHtM_saved[a_,t];
      vHhIndHtM_difference[a_,t]$(abs(vHhIndHtM_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhIndHtM_difference[a_,t])),
        display vHhIndHtM_difference;
      );
    
      parameter vHhIndR_difference[a_,t];
      vHhIndR_difference[a_,t]$(1) = vHhIndR.l[a_,t] - vHhIndR_saved[a_,t];
      vHhIndR_difference[a_,t]$(abs(vHhIndR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhIndR_difference[a_,t])),
        display vHhIndR_difference;
      );
    
      parameter vHhNetFinR_difference[a_,t];
      vHhNetFinR_difference[a_,t]$(1) = vHhNetFinR.l[a_,t] - vHhNetFinR_saved[a_,t];
      vHhNetFinR_difference[a_,t]$(abs(vHhNetFinR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhNetFinR_difference[a_,t])),
        display vHhNetFinR_difference;
      );
    
      parameter vHhNetFinHtM_difference[a_,t];
      vHhNetFinHtM_difference[a_,t]$(1) = vHhNetFinHtM.l[a_,t] - vHhNetFinHtM_saved[a_,t];
      vHhNetFinHtM_difference[a_,t]$(abs(vHhNetFinHtM_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhNetFinHtM_difference[a_,t])),
        display vHhNetFinHtM_difference;
      );
    
      parameter vHhNetFin_difference[a_,t];
      vHhNetFin_difference[a_,t]$(1) = vHhNetFin.l[a_,t] - vHhNetFin_saved[a_,t];
      vHhNetFin_difference[a_,t]$(abs(vHhNetFin_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhNetFin_difference[a_,t])),
        display vHhNetFin_difference;
      );
    
      parameter vHhIndMvHtM_difference[a_,t];
      vHhIndMvHtM_difference[a_,t]$(1) = vHhIndMvHtM.l[a_,t] - vHhIndMvHtM_saved[a_,t];
      vHhIndMvHtM_difference[a_,t]$(abs(vHhIndMvHtM_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhIndMvHtM_difference[a_,t])),
        display vHhIndMvHtM_difference;
      );
    
      parameter vHhIndMvR_difference[a_,t];
      vHhIndMvR_difference[a_,t]$(1) = vHhIndMvR.l[a_,t] - vHhIndMvR_saved[a_,t];
      vHhIndMvR_difference[a_,t]$(abs(vHhIndMvR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhIndMvR_difference[a_,t])),
        display vHhIndMvR_difference;
      );
    
      parameter vHhIndMv_difference[a_,t];
      vHhIndMv_difference[a_,t]$(1) = vHhIndMv.l[a_,t] - vHhIndMv_saved[a_,t];
      vHhIndMv_difference[a_,t]$(abs(vHhIndMv_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhIndMv_difference[a_,t])),
        display vHhIndMv_difference;
      );
    
      parameter vCR_NR_difference[a_,t];
      vCR_NR_difference[a_,t]$(1) = vCR_NR.l[a_,t] - vCR_NR_saved[a_,t];
      vCR_NR_difference[a_,t]$(abs(vCR_NR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vCR_NR_difference[a_,t])),
        display vCR_NR_difference;
      );
    
      parameter vCHtM_NR_difference[a_,t];
      vCHtM_NR_difference[a_,t]$(1) = vCHtM_NR.l[a_,t] - vCHtM_NR_saved[a_,t];
      vCHtM_NR_difference[a_,t]$(abs(vCHtM_NR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vCHtM_NR_difference[a_,t])),
        display vCHtM_NR_difference;
      );
    
      parameter vC_NR_difference[a_,t];
      vC_NR_difference[a_,t]$(1) = vC_NR.l[a_,t] - vC_NR_saved[a_,t];
      vC_NR_difference[a_,t]$(abs(vC_NR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vC_NR_difference[a_,t])),
        display vC_NR_difference;
      );
    
      parameter vHhFormue_difference[a_,t];
      vHhFormue_difference[a_,t]$(1) = vHhFormue.l[a_,t] - vHhFormue_saved[a_,t];
      vHhFormue_difference[a_,t]$(abs(vHhFormue_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vHhFormue_difference[a_,t])),
        display vHhFormue_difference;
      );
    
      parameter vBoligUdgiftR_difference[a_,t];
      vBoligUdgiftR_difference[a_,t]$(1) = vBoligUdgiftR.l[a_,t] - vBoligUdgiftR_saved[a_,t];
      vBoligUdgiftR_difference[a_,t]$(abs(vBoligUdgiftR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vBoligUdgiftR_difference[a_,t])),
        display vBoligUdgiftR_difference;
      );
    
      parameter vBoligR_difference[a_,t];
      vBoligR_difference[a_,t]$(1) = vBoligR.l[a_,t] - vBoligR_saved[a_,t];
      vBoligR_difference[a_,t]$(abs(vBoligR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(vBoligR_difference[a_,t])),
        display vBoligR_difference;
      );
    
      parameter qXMarked_difference[x,t];
      qXMarked_difference[x,t]$(1) = qXMarked.l[x,t] - qXMarked_saved[x,t];
      qXMarked_difference[x,t]$(abs(qXMarked_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(qXMarked_difference[x,t])),
        display qXMarked_difference;
      );
    
      parameter qProd_difference[t];
      qProd_difference[t]$(1) = qProd.l[t] - qProd_saved[t];
      qProd_difference[t]$(abs(qProd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qProd_difference[t])),
        display qProd_difference;
      );
    
      parameter qLand_difference[t];
      qLand_difference[t]$(1) = qLand.l[t] - qLand_saved[t];
      qLand_difference[t]$(abs(qLand_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qLand_difference[t])),
        display qLand_difference;
      );
    
      parameter qKLejeBolig_difference[t];
      qKLejeBolig_difference[t]$(1) = qKLejeBolig.l[t] - qKLejeBolig_saved[t];
      qKLejeBolig_difference[t]$(abs(qKLejeBolig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qKLejeBolig_difference[t])),
        display qKLejeBolig_difference;
      );
    
      parameter qGrus_difference[t];
      qGrus_difference[t]$(1) = qGrus.l[t] - qGrus_saved[t];
      qGrus_difference[t]$(abs(qGrus_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(qGrus_difference[t])),
        display qGrus_difference;
      );
    
      parameter qLxUdn_difference[s,t];
      qLxUdn_difference[s,t]$(1) = qLxUdn.l[s,t] - qLxUdn_saved[s,t];
      qLxUdn_difference[s,t]$(abs(qLxUdn_difference[s,t]) < 1e-6) = 0;
      if (sum([s,t]$(1), abs(qLxUdn_difference[s,t])),
        display qLxUdn_difference;
      );
    
      parameter qCR_NR_difference[a_,t];
      qCR_NR_difference[a_,t]$(1) = qCR_NR.l[a_,t] - qCR_NR_saved[a_,t];
      qCR_NR_difference[a_,t]$(abs(qCR_NR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(qCR_NR_difference[a_,t])),
        display qCR_NR_difference;
      );
    
      parameter qCHtM_NR_difference[a_,t];
      qCHtM_NR_difference[a_,t]$(1) = qCHtM_NR.l[a_,t] - qCHtM_NR_saved[a_,t];
      qCHtM_NR_difference[a_,t]$(abs(qCHtM_NR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(qCHtM_NR_difference[a_,t])),
        display qCHtM_NR_difference;
      );
    
      parameter qC_NR_difference[a_,t];
      qC_NR_difference[a_,t]$(1) = qC_NR.l[a_,t] - qC_NR_saved[a_,t];
      qC_NR_difference[a_,t]$(abs(qC_NR_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(qC_NR_difference[a_,t])),
        display qC_NR_difference;
      );
    
      parameter hVirk_difference[t];
      hVirk_difference[t]$(1) = hVirk.l[t] - hVirk_saved[t];
      hVirk_difference[t]$(abs(hVirk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(hVirk_difference[t])),
        display hVirk_difference;
      );
    
      parameter hOff_difference[t];
      hOff_difference[t]$(1) = hOff.l[t] - hOff_saved[t];
      hOff_difference[t]$(abs(hOff_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(hOff_difference[t])),
        display hOff_difference;
      );
    
      parameter tPensKor_difference[t];
      tPensKor_difference[t]$(1) = tPensKor.l[t] - tPensKor_saved[t];
      tPensKor_difference[t]$(abs(tPensKor_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tPensKor_difference[t])),
        display tPensKor_difference;
      );
    
      parameter nSoegBase_difference[t];
      nSoegBase_difference[t]$(1) = nSoegBase.l[t] - nSoegBase_saved[t];
      nSoegBase_difference[t]$(abs(nSoegBase_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(nSoegBase_difference[t])),
        display nSoegBase_difference;
      );
    
      parameter rtTopRenter_difference[t];
      rtTopRenter_difference[t]$(1) = rtTopRenter.l[t] - rtTopRenter_saved[t];
      rtTopRenter_difference[t]$(abs(rtTopRenter_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rtTopRenter_difference[t])),
        display rtTopRenter_difference;
      );
    
      parameter mrNet2KapIndPos_difference[t];
      mrNet2KapIndPos_difference[t]$(1) = mrNet2KapIndPos.l[t] - mrNet2KapIndPos_saved[t];
      mrNet2KapIndPos_difference[t]$(abs(mrNet2KapIndPos_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(mrNet2KapIndPos_difference[t])),
        display mrNet2KapIndPos_difference;
      );
    
      parameter rKolPens_difference[pens,t];
      rKolPens_difference[pens,t]$(1) = rKolPens.l[pens,t] - rKolPens_saved[pens,t];
      rKolPens_difference[pens,t]$(abs(rKolPens_difference[pens,t]) < 1e-6) = 0;
      if (sum([pens,t]$(1), abs(rKolPens_difference[pens,t])),
        display rKolPens_difference;
      );
    
      parameter rHhFraVirkKap_difference[t];
      rHhFraVirkKap_difference[t]$(1) = rHhFraVirkKap.l[t] - rHhFraVirkKap_saved[t];
      rHhFraVirkKap_difference[t]$(abs(rHhFraVirkKap_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rHhFraVirkKap_difference[t])),
        display rHhFraVirkKap_difference;
      );
    
      parameter rHhFraVirkOev_difference[t];
      rHhFraVirkOev_difference[t]$(1) = rHhFraVirkOev.l[t] - rHhFraVirkOev_saved[t];
      rHhFraVirkOev_difference[t]$(abs(rHhFraVirkOev_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rHhFraVirkOev_difference[t])),
        display rHhFraVirkOev_difference;
      );
    
      parameter rHhTilUdl_difference[t];
      rHhTilUdl_difference[t]$(1) = rHhTilUdl.l[t] - rHhTilUdl_saved[t];
      rHhTilUdl_difference[t]$(abs(rHhTilUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rHhTilUdl_difference[t])),
        display rHhTilUdl_difference;
      );
    
      parameter cHh_a_difference[akt,a,t];
      cHh_a_difference[akt,a,t]$(1) = cHh_a.l[akt,a,t] - cHh_a_saved[akt,a,t];
      cHh_a_difference[akt,a,t]$(abs(cHh_a_difference[akt,a,t]) < 1e-6) = 0;
      if (sum([akt,a,t]$(1), abs(cHh_a_difference[akt,a,t])),
        display cHh_a_difference;
      );
    
      parameter cHh_t_difference[akt,t];
      cHh_t_difference[akt,t]$(1) = cHh_t.l[akt,t] - cHh_t_saved[akt,t];
      cHh_t_difference[akt,t]$(abs(cHh_t_difference[akt,t]) < 1e-6) = 0;
      if (sum([akt,t]$(1), abs(cHh_t_difference[akt,t])),
        display cHh_t_difference;
      );
    
      parameter dvHh2dvHhx_difference[portf_,t];
      dvHh2dvHhx_difference[portf_,t]$(1) = dvHh2dvHhx.l[portf_,t] - dvHh2dvHhx_saved[portf_,t];
      dvHh2dvHhx_difference[portf_,t]$(abs(dvHh2dvHhx_difference[portf_,t]) < 1e-6) = 0;
      if (sum([portf_,t]$(1), abs(dvHh2dvHhx_difference[portf_,t])),
        display dvHh2dvHhx_difference;
      );
    
      parameter dvHh2dvBolig_difference[portf_,t];
      dvHh2dvBolig_difference[portf_,t]$(1) = dvHh2dvBolig.l[portf_,t] - dvHh2dvBolig_saved[portf_,t];
      dvHh2dvBolig_difference[portf_,t]$(abs(dvHh2dvBolig_difference[portf_,t]) < 1e-6) = 0;
      if (sum([portf_,t]$(1), abs(dvHh2dvBolig_difference[portf_,t])),
        display dvHh2dvBolig_difference;
      );
    
      parameter dvHh2dvPensIndb_difference[portf_,t];
      dvHh2dvPensIndb_difference[portf_,t]$(1) = dvHh2dvPensIndb.l[portf_,t] - dvHh2dvPensIndb_saved[portf_,t];
      dvHh2dvPensIndb_difference[portf_,t]$(abs(dvHh2dvPensIndb_difference[portf_,t]) < 1e-6) = 0;
      if (sum([portf_,t]$(1), abs(dvHh2dvPensIndb_difference[portf_,t])),
        display dvHh2dvPensIndb_difference;
      );
    
      parameter rBoligOmkRestRes_difference[t];
      rBoligOmkRestRes_difference[t]$(1) = rBoligOmkRestRes.l[t] - rBoligOmkRestRes_saved[t];
      rBoligOmkRestRes_difference[t]$(abs(rBoligOmkRestRes_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rBoligOmkRestRes_difference[t])),
        display rBoligOmkRestRes_difference;
      );
    
      parameter rRealKredTraeg_difference;
      rRealKredTraeg_difference$(1) = rRealKredTraeg.l - rRealKredTraeg_saved;
      rRealKredTraeg_difference$(abs(rRealKredTraeg_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rRealKredTraeg_difference)),
        display rRealKredTraeg_difference;
      );
    
      parameter rRealKred2Bolig_a_difference[a,t];
      rRealKred2Bolig_a_difference[a,t]$(1) = rRealKred2Bolig_a.l[a,t] - rRealKred2Bolig_a_saved[a,t];
      rRealKred2Bolig_a_difference[a,t]$(abs(rRealKred2Bolig_a_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(rRealKred2Bolig_a_difference[a,t])),
        display rRealKred2Bolig_a_difference;
      );
    
      parameter rRealKred2Bolig_t_difference[t];
      rRealKred2Bolig_t_difference[t]$(1) = rRealKred2Bolig_t.l[t] - rRealKred2Bolig_t_saved[t];
      rRealKred2Bolig_t_difference[t]$(abs(rRealKred2Bolig_t_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rRealKred2Bolig_t_difference[t])),
        display rRealKred2Bolig_t_difference;
      );
    
      parameter cmtAktie_difference[t];
      cmtAktie_difference[t]$(1) = cmtAktie.l[t] - cmtAktie_saved[t];
      cmtAktie_difference[t]$(abs(cmtAktie_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(cmtAktie_difference[t])),
        display cmtAktie_difference;
      );
    
      parameter ErAktieAfk_static_difference[t];
      ErAktieAfk_static_difference[t]$(1) = ErAktieAfk_static.l[t] - ErAktieAfk_static_saved[t];
      ErAktieAfk_static_difference[t]$(abs(ErAktieAfk_static_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(ErAktieAfk_static_difference[t])),
        display ErAktieAfk_static_difference;
      );
    
      parameter rPensArv_difference[pens,a_,t];
      rPensArv_difference[pens,a_,t]$(1) = rPensArv.l[pens,a_,t] - rPensArv_saved[pens,a_,t];
      rPensArv_difference[pens,a_,t]$(abs(rPensArv_difference[pens,a_,t]) < 1e-6) = 0;
      if (sum([pens,a_,t]$(1), abs(rPensArv_difference[pens,a_,t])),
        display rPensArv_difference;
      );
    
      parameter jvHhOmv_difference[t];
      jvHhOmv_difference[t]$(1) = jvHhOmv.l[t] - jvHhOmv_saved[t];
      jvHhOmv_difference[t]$(abs(jvHhOmv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvHhOmv_difference[t])),
        display jvHhOmv_difference;
      );
    
      parameter jvHhRenter_difference[t];
      jvHhRenter_difference[t]$(1) = jvHhRenter.l[t] - jvHhRenter_saved[t];
      jvHhRenter_difference[t]$(abs(jvHhRenter_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvHhRenter_difference[t])),
        display jvHhRenter_difference;
      );
    
      parameter jvNetKolPensUdb_difference[t];
      jvNetKolPensUdb_difference[t]$(1) = jvNetKolPensUdb.l[t] - jvNetKolPensUdb_saved[t];
      jvNetKolPensUdb_difference[t]$(abs(jvNetKolPensUdb_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvNetKolPensUdb_difference[t])),
        display jvNetKolPensUdb_difference;
      );
    
      parameter jvKolPensRenter_difference[t];
      jvKolPensRenter_difference[t]$(1) = jvKolPensRenter.l[t] - jvKolPensRenter_saved[t];
      jvKolPensRenter_difference[t]$(abs(jvKolPensRenter_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvKolPensRenter_difference[t])),
        display jvKolPensRenter_difference;
      );
    
      parameter jmrHhAfk_difference[t];
      jmrHhAfk_difference[t]$(1) = jmrHhAfk.l[t] - jmrHhAfk_saved[t];
      jmrHhAfk_difference[t]$(abs(jmrHhAfk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jmrHhAfk_difference[t])),
        display jmrHhAfk_difference;
      );
    
      parameter jrHhRente_difference[portf,t];
      jrHhRente_difference[portf,t]$(1) = jrHhRente.l[portf,t] - jrHhRente_saved[portf,t];
      jrHhRente_difference[portf,t]$(abs(jrHhRente_difference[portf,t]) < 1e-6) = 0;
      if (sum([portf,t]$(1), abs(jrHhRente_difference[portf,t])),
        display jrHhRente_difference;
      );
    
      parameter jrHhOmv_difference[portf,t];
      jrHhOmv_difference[portf,t]$(1) = jrHhOmv.l[portf,t] - jrHhOmv_saved[portf,t];
      jrHhOmv_difference[portf,t]$(abs(jrHhOmv_difference[portf,t]) < 1e-6) = 0;
      if (sum([portf,t]$(1), abs(jrHhOmv_difference[portf,t])),
        display jrHhOmv_difference;
      );
    
      parameter rUdlRealkred_difference[t];
      rUdlRealkred_difference[t]$(1) = rUdlRealkred.l[t] - rUdlRealkred_saved[t];
      rUdlRealkred_difference[t]$(abs(rUdlRealkred_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rUdlRealkred_difference[t])),
        display rUdlRealkred_difference;
      );
    
      parameter jvBFI_difference[t];
      jvBFI_difference[t]$(1) = jvBFI.l[t] - jvBFI_saved[t];
      jvBFI_difference[t]$(abs(jvBFI_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvBFI_difference[t])),
        display jvBFI_difference;
      );
    
      parameter fDemoTraek_difference[t];
      fDemoTraek_difference[t]$(1) = fDemoTraek.l[t] - fDemoTraek_saved[t];
      fDemoTraek_difference[t]$(abs(fDemoTraek_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(fDemoTraek_difference[t])),
        display fDemoTraek_difference;
      );
    
      parameter uHhOvfPop_difference[a,t];
      uHhOvfPop_difference[a,t]$(1) = uHhOvfPop.l[a,t] - uHhOvfPop_saved[a,t];
      uHhOvfPop_difference[a,t]$(abs(uHhOvfPop_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uHhOvfPop_difference[a,t])),
        display uHhOvfPop_difference;
      );
    
      parameter uOvfUbeskat_difference[a,t];
      uOvfUbeskat_difference[a,t]$(1) = uOvfUbeskat.l[a,t] - uOvfUbeskat_saved[a,t];
      uOvfUbeskat_difference[a,t]$(abs(uOvfUbeskat_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uOvfUbeskat_difference[a,t])),
        display uOvfUbeskat_difference;
      );
    
      parameter jvOvf_difference[ovf,t];
      jvOvf_difference[ovf,t]$(1) = jvOvf.l[ovf,t] - jvOvf_saved[ovf,t];
      jvOvf_difference[ovf,t]$(abs(jvOvf_difference[ovf,t]) < 1e-6) = 0;
      if (sum([ovf,t]$(1), abs(jvOvf_difference[ovf,t])),
        display jvOvf_difference;
      );
    
      parameter uvOvfSats_difference[ovf,t];
      uvOvfSats_difference[ovf,t]$(1) = uvOvfSats.l[ovf,t] - uvOvfSats_saved[ovf,t];
      uvOvfSats_difference[ovf,t]$(abs(uvOvfSats_difference[ovf,t]) < 1e-6) = 0;
      if (sum([ovf,t]$(1), abs(uvOvfSats_difference[ovf,t])),
        display uvOvfSats_difference;
      );
    
      parameter eG_difference[g_];
      eG_difference[g_]$(1) = eG.l[g_] - eG_saved[g_];
      eG_difference[g_]$(abs(eG_difference[g_]) < 1e-6) = 0;
      if (sum([g_,t]$(1), abs(eG_difference[g_])),
        display eG_difference;
      );
    
      parameter rGLukning_difference[t];
      rGLukning_difference[t]$(1) = rGLukning.l[t] - rGLukning_saved[t];
      rGLukning_difference[t]$(abs(rGLukning_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rGLukning_difference[t])),
        display rGLukning_difference;
      );
    
      parameter uG_difference[g_,t];
      uG_difference[g_,t]$(1) = uG.l[g_,t] - uG_saved[g_,t];
      uG_difference[g_,t]$(abs(uG_difference[g_,t]) < 1e-6) = 0;
      if (sum([g_,t]$(1), abs(uG_difference[g_,t])),
        display uG_difference;
      );
    
      parameter rvYsubRest2BVT_difference[t];
      rvYsubRest2BVT_difference[t]$(1) = rvYsubRest2BVT.l[t] - rvYsubRest2BVT_saved[t];
      rvYsubRest2BVT_difference[t]$(abs(rvYsubRest2BVT_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rvYsubRest2BVT_difference[t])),
        display rvYsubRest2BVT_difference;
      );
    
      parameter tEjd_difference[t];
      tEjd_difference[t]$(1) = tEjd.l[t] - tEjd_saved[t];
      tEjd_difference[t]$(abs(tEjd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tEjd_difference[t])),
        display tEjd_difference;
      );
    
      parameter tPersRestxKapPens_difference[t];
      tPersRestxKapPens_difference[t]$(1) = tPersRestxKapPens.l[t] - tPersRestxKapPens_saved[t];
      tPersRestxKapPens_difference[t]$(abs(tPersRestxKapPens_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tPersRestxKapPens_difference[t])),
        display tPersRestxKapPens_difference;
      );
    
      parameter tSelskabNord_difference[t];
      tSelskabNord_difference[t]$(1) = tSelskabNord.l[t] - tSelskabNord_saved[t];
      tSelskabNord_difference[t]$(abs(tSelskabNord_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tSelskabNord_difference[t])),
        display tSelskabNord_difference;
      );
    
      parameter tVirksomhed_difference[t];
      tVirksomhed_difference[t]$(1) = tVirksomhed.l[t] - tVirksomhed_saved[t];
      tVirksomhed_difference[t]$(abs(tVirksomhed_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tVirksomhed_difference[t])),
        display tVirksomhed_difference;
      );
    
      parameter tDoedsbo_difference[t];
      tDoedsbo_difference[t]$(1) = tDoedsbo.l[t] - tDoedsbo_saved[t];
      tDoedsbo_difference[t]$(abs(tDoedsbo_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tDoedsbo_difference[t])),
        display tDoedsbo_difference;
      );
    
      parameter tAktie_difference[t];
      tAktie_difference[t]$(1) = tAktie.l[t] - tAktie_saved[t];
      tAktie_difference[t]$(abs(tAktie_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tAktie_difference[t])),
        display tAktie_difference;
      );
    
      parameter tJordRente_difference[t];
      tJordRente_difference[t]$(1) = tJordRente.l[t] - tJordRente_saved[t];
      tJordRente_difference[t]$(abs(tJordRente_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tJordRente_difference[t])),
        display tJordRente_difference;
      );
    
      parameter tHhVaegt_difference[t];
      tHhVaegt_difference[t]$(1) = tHhVaegt.l[t] - tHhVaegt_saved[t];
      tHhVaegt_difference[t]$(abs(tHhVaegt_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tHhVaegt_difference[t])),
        display tHhVaegt_difference;
      );
    
      parameter tbeskfradrag_difference[t];
      tbeskfradrag_difference[t]$(1) = tbeskfradrag.l[t] - tbeskfradrag_saved[t];
      tbeskfradrag_difference[t]$(abs(tbeskfradrag_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tbeskfradrag_difference[t])),
        display tbeskfradrag_difference;
      );
    
      parameter ftAMBidrag_difference[t];
      ftAMBidrag_difference[t]$(1) = ftAMBidrag.l[t] - ftAMBidrag_saved[t];
      ftAMBidrag_difference[t]$(abs(ftAMBidrag_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(ftAMBidrag_difference[t])),
        display ftAMBidrag_difference;
      );
    
      parameter ftKapPens_difference[t];
      ftKapPens_difference[t]$(1) = ftKapPens.l[t] - ftKapPens_saved[t];
      ftKapPens_difference[t]$(abs(ftKapPens_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(ftKapPens_difference[t])),
        display ftKapPens_difference;
      );
    
      parameter ftSelskab_difference[t];
      ftSelskab_difference[t]$(1) = ftSelskab.l[t] - ftSelskab_saved[t];
      ftSelskab_difference[t]$(abs(ftSelskab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(ftSelskab_difference[t])),
        display ftSelskab_difference;
      );
    
      parameter ftPAL_difference[t];
      ftPAL_difference[t]$(1) = ftPAL.l[t] - ftPAL_saved[t];
      ftPAL_difference[t]$(abs(ftPAL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(ftPAL_difference[t])),
        display ftPAL_difference;
      );
    
      parameter ftKirke_difference[t];
      ftKirke_difference[t]$(1) = ftKirke.l[t] - ftKirke_saved[t];
      ftKirke_difference[t]$(abs(ftKirke_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(ftKirke_difference[t])),
        display ftKirke_difference;
      );
    
      parameter jfvSkatteplInd_difference[t];
      jfvSkatteplInd_difference[t]$(1) = jfvSkatteplInd.l[t] - jfvSkatteplInd_saved[t];
      jfvSkatteplInd_difference[t]$(abs(jfvSkatteplInd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jfvSkatteplInd_difference[t])),
        display jfvSkatteplInd_difference;
      );
    
      parameter rNet2KapIndPos_difference[a_,t];
      rNet2KapIndPos_difference[a_,t]$(1) = rNet2KapIndPos.l[a_,t] - rNet2KapIndPos_saved[a_,t];
      rNet2KapIndPos_difference[a_,t]$(abs(rNet2KapIndPos_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(rNet2KapIndPos_difference[a_,t])),
        display rNet2KapIndPos_difference;
      );
    
      parameter rtKirke_difference[t];
      rtKirke_difference[t]$(1) = rtKirke.l[t] - rtKirke_saved[t];
      rtKirke_difference[t]$(abs(rtKirke_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rtKirke_difference[t])),
        display rtKirke_difference;
      );
    
      parameter vRestFradragSats_difference[t];
      vRestFradragSats_difference[t]$(1) = vRestFradragSats.l[t] - vRestFradragSats_saved[t];
      vRestFradragSats_difference[t]$(abs(vRestFradragSats_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(vRestFradragSats_difference[t])),
        display vRestFradragSats_difference;
      );
    
      parameter rAKFradrag2Bidrag_difference[t];
      rAKFradrag2Bidrag_difference[t]$(1) = rAKFradrag2Bidrag.l[t] - rAKFradrag2Bidrag_saved[t];
      rAKFradrag2Bidrag_difference[t]$(abs(rAKFradrag2Bidrag_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rAKFradrag2Bidrag_difference[t])),
        display rAKFradrag2Bidrag_difference;
      );
    
      parameter rELFradrag2Bidrag_difference[t];
      rELFradrag2Bidrag_difference[t]$(1) = rELFradrag2Bidrag.l[t] - rELFradrag2Bidrag_saved[t];
      rELFradrag2Bidrag_difference[t]$(abs(rELFradrag2Bidrag_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rELFradrag2Bidrag_difference[t])),
        display rELFradrag2Bidrag_difference;
      );
    
      parameter uBidragOblTjm_difference[t];
      uBidragOblTjm_difference[t]$(1) = uBidragOblTjm.l[t] - uBidragOblTjm_saved[t];
      uBidragOblTjm_difference[t]$(abs(uBidragOblTjm_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uBidragOblTjm_difference[t])),
        display uBidragOblTjm_difference;
      );
    
      parameter uBidragATP_difference[t];
      uBidragATP_difference[t]$(1) = uBidragATP.l[t] - uBidragATP_saved[t];
      uBidragATP_difference[t]$(abs(uBidragATP_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uBidragATP_difference[t])),
        display uBidragATP_difference;
      );
    
      parameter uBidragOblRest_difference[t];
      uBidragOblRest_difference[t]$(1) = uBidragOblRest.l[t] - uBidragOblRest_saved[t];
      uBidragOblRest_difference[t]$(abs(uBidragOblRest_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uBidragOblRest_difference[t])),
        display uBidragOblRest_difference;
      );
    
      parameter uBidragEL_difference[t];
      uBidragEL_difference[t]$(1) = uBidragEL.l[t] - uBidragEL_saved[t];
      uBidragEL_difference[t]$(abs(uBidragEL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uBidragEL_difference[t])),
        display uBidragEL_difference;
      );
    
      parameter uBidragFri_difference[t];
      uBidragFri_difference[t]$(1) = uBidragFri.l[t] - uBidragFri_saved[t];
      uBidragFri_difference[t]$(abs(uBidragFri_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uBidragFri_difference[t])),
        display uBidragFri_difference;
      );
    
      parameter uBidragAK_difference[t];
      uBidragAK_difference[t]$(1) = uBidragAK.l[t] - uBidragAK_saved[t];
      uBidragAK_difference[t]$(abs(uBidragAK_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uBidragAK_difference[t])),
        display uBidragAK_difference;
      );
    
      parameter uBidragTjmp_difference[t];
      uBidragTjmp_difference[t]$(1) = uBidragTjmp.l[t] - uBidragTjmp_saved[t];
      uBidragTjmp_difference[t]$(abs(uBidragTjmp_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uBidragTjmp_difference[t])),
        display uBidragTjmp_difference;
      );
    
      parameter utMedie_difference[t];
      utMedie_difference[t]$(1) = utMedie.l[t] - utMedie_saved[t];
      utMedie_difference[t]$(abs(utMedie_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(utMedie_difference[t])),
        display utMedie_difference;
      );
    
      parameter rRealiseringAktieOmv_difference[t];
      rRealiseringAktieOmv_difference[t]$(1) = rRealiseringAktieOmv.l[t] - rRealiseringAktieOmv_saved[t];
      rRealiseringAktieOmv_difference[t]$(abs(rRealiseringAktieOmv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rRealiseringAktieOmv_difference[t])),
        display rRealiseringAktieOmv_difference;
      );
    
      parameter rvtAfgEU2vtAfg_difference[t];
      rvtAfgEU2vtAfg_difference[t]$(1) = rvtAfgEU2vtAfg.l[t] - rvtAfgEU2vtAfg_saved[t];
      rvtAfgEU2vtAfg_difference[t]$(abs(rvtAfgEU2vtAfg_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rvtAfgEU2vtAfg_difference[t])),
        display rvtAfgEU2vtAfg_difference;
      );
    
      parameter tBund_difference[t];
      tBund_difference[t]$(1) = tBund.l[t] - tBund_saved[t];
      tBund_difference[t]$(abs(tBund_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tBund_difference[t])),
        display tBund_difference;
      );
    
      parameter tTop_difference[t];
      tTop_difference[t]$(1) = tTop.l[t] - tTop_saved[t];
      tTop_difference[t]$(abs(tTop_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tTop_difference[t])),
        display tTop_difference;
      );
    
      parameter tKommune_difference[t];
      tKommune_difference[t]$(1) = tKommune.l[t] - tKommune_saved[t];
      tKommune_difference[t]$(abs(tKommune_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tKommune_difference[t])),
        display tKommune_difference;
      );
    
      parameter tAMbidrag_difference[t];
      tAMbidrag_difference[t]$(1) = tAMbidrag.l[t] - tAMbidrag_saved[t];
      tAMbidrag_difference[t]$(abs(tAMbidrag_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tAMbidrag_difference[t])),
        display tAMbidrag_difference;
      );
    
      parameter tKapPens_difference[t];
      tKapPens_difference[t]$(1) = tKapPens.l[t] - tKapPens_saved[t];
      tKapPens_difference[t]$(abs(tKapPens_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tKapPens_difference[t])),
        display tKapPens_difference;
      );
    
      parameter tSelskab_difference[t];
      tSelskab_difference[t]$(1) = tSelskab.l[t] - tSelskab_saved[t];
      tSelskab_difference[t]$(abs(tSelskab_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tSelskab_difference[t])),
        display tSelskab_difference;
      );
    
      parameter tPAL_difference[t];
      tPAL_difference[t]$(1) = tPAL.l[t] - tPAL_saved[t];
      tPAL_difference[t]$(abs(tPAL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tPAL_difference[t])),
        display tPAL_difference;
      );
    
      parameter tKirke_difference[t];
      tKirke_difference[t]$(1) = tKirke.l[t] - tKirke_saved[t];
      tKirke_difference[t]$(abs(tKirke_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tKirke_difference[t])),
        display tKirke_difference;
      );
    
      parameter rOffRealKred2Pas_difference[t];
      rOffRealKred2Pas_difference[t]$(1) = rOffRealKred2Pas.l[t] - rOffRealKred2Pas_saved[t];
      rOffRealKred2Pas_difference[t]$(abs(rOffRealKred2Pas_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffRealKred2Pas_difference[t])),
        display rOffRealKred2Pas_difference;
      );
    
      parameter rOffAkt_difference[akt,t];
      rOffAkt_difference[akt,t]$(1) = rOffAkt.l[akt,t] - rOffAkt_saved[akt,t];
      rOffAkt_difference[akt,t]$(abs(rOffAkt_difference[akt,t]) < 1e-6) = 0;
      if (sum([akt,t]$(1), abs(rOffAkt_difference[akt,t])),
        display rOffAkt_difference;
      );
    
      parameter jvOffOmv_difference[t];
      jvOffOmv_difference[t]$(1) = jvOffOmv.l[t] - jvOffOmv_saved[t];
      jvOffOmv_difference[t]$(abs(jvOffOmv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvOffOmv_difference[t])),
        display jvOffOmv_difference;
      );
    
      parameter jrOffRenteInd_difference[t];
      jrOffRenteInd_difference[t]$(1) = jrOffRenteInd.l[t] - jrOffRenteInd_saved[t];
      jrOffRenteInd_difference[t]$(abs(jrOffRenteInd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jrOffRenteInd_difference[t])),
        display jrOffRenteInd_difference;
      );
    
      parameter jrOffRenteUd_difference[t];
      jrOffRenteUd_difference[t]$(1) = jrOffRenteUd.l[t] - jrOffRenteUd_saved[t];
      jrOffRenteUd_difference[t]$(abs(jrOffRenteUd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jrOffRenteUd_difference[t])),
        display jrOffRenteUd_difference;
      );
    
      parameter jfSatsIndeks_difference[t];
      jfSatsIndeks_difference[t]$(1) = jfSatsIndeks.l[t] - jfSatsIndeks_saved[t];
      jfSatsIndeks_difference[t]$(abs(jfSatsIndeks_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jfSatsIndeks_difference[t])),
        display jfSatsIndeks_difference;
      );
    
      parameter rOffY2C_difference[t];
      rOffY2C_difference[t]$(1) = rOffY2C.l[t] - rOffY2C_saved[t];
      rOffY2C_difference[t]$(abs(rOffY2C_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffY2C_difference[t])),
        display rOffY2C_difference;
      );
    
      parameter rDisk_t_difference[t];
      rDisk_t_difference[t]$(1) = rDisk_t.l[t] - rDisk_t_saved[t];
      rDisk_t_difference[t]$(abs(rDisk_t_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rDisk_t_difference[t])),
        display rDisk_t_difference;
      );
    
      parameter rDisk_a_difference[a,t];
      rDisk_a_difference[a,t]$(1) = rDisk_a.l[a,t] - rDisk_a_saved[a,t];
      rDisk_a_difference[a,t]$(abs(rDisk_a_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(rDisk_a_difference[a,t])),
        display rDisk_a_difference;
      );
    
      parameter uBolig_a_difference[a,t];
      uBolig_a_difference[a,t]$(1) = uBolig_a.l[a,t] - uBolig_a_saved[a,t];
      uBolig_a_difference[a,t]$(abs(uBolig_a_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uBolig_a_difference[a,t])),
        display uBolig_a_difference;
      );
    
      parameter uBolig_t_difference[t];
      uBolig_t_difference[t]$(1) = uBolig_t.l[t] - uBolig_t_saved[t];
      uBolig_t_difference[t]$(abs(uBolig_t_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uBolig_t_difference[t])),
        display uBolig_t_difference;
      );
    
      parameter uBoligHtM_a_difference[a,t];
      uBoligHtM_a_difference[a,t]$(1) = uBoligHtM_a.l[a,t] - uBoligHtM_a_saved[a,t];
      uBoligHtM_a_difference[a,t]$(abs(uBoligHtM_a_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uBoligHtM_a_difference[a,t])),
        display uBoligHtM_a_difference;
      );
    
      parameter uBoligHtM_t_difference[t];
      uBoligHtM_t_difference[t]$(1) = uBoligHtM_t.l[t] - uBoligHtM_t_saved[t];
      uBoligHtM_t_difference[t]$(abs(uBoligHtM_t_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uBoligHtM_t_difference[t])),
        display uBoligHtM_t_difference;
      );
    
      parameter uBoligHtM_match_difference;
      uBoligHtM_match_difference$(1) = uBoligHtM_match.l - uBoligHtM_match_saved;
      uBoligHtM_match_difference$(abs(uBoligHtM_match_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(uBoligHtM_match_difference)),
        display uBoligHtM_match_difference;
      );
    
      parameter uBoernFraHh_t_difference[t];
      uBoernFraHh_t_difference[t]$(1) = uBoernFraHh_t.l[t] - uBoernFraHh_t_saved[t];
      uBoernFraHh_t_difference[t]$(abs(uBoernFraHh_t_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uBoernFraHh_t_difference[t])),
        display uBoernFraHh_t_difference;
      );
    
      parameter uBoernFraHh_a_difference[a,t];
      uBoernFraHh_a_difference[a,t]$(1) = uBoernFraHh_a.l[a,t] - uBoernFraHh_a_saved[a,t];
      uBoernFraHh_a_difference[a,t]$(abs(uBoernFraHh_a_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uBoernFraHh_a_difference[a,t])),
        display uBoernFraHh_a_difference;
      );
    
      parameter eHh_difference;
      eHh_difference$(1) = eHh.l - eHh_saved;
      eHh_difference$(abs(eHh_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(eHh_difference)),
        display eHh_difference;
      );
    
      parameter rRef_difference;
      rRef_difference$(1) = rRef.l - rRef_saved;
      rRef_difference$(abs(rRef_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rRef_difference)),
        display rRef_difference;
      );
    
      parameter rRef_2016_difference;
      rRef_2016_difference$(1) = rRef_2016.l - rRef_2016_saved;
      rRef_2016_difference$(abs(rRef_2016_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rRef_2016_difference)),
        display rRef_2016_difference;
      );
    
      parameter rRefHtM_difference;
      rRefHtM_difference$(1) = rRefHtM.l - rRefHtM_saved;
      rRefHtM_difference$(abs(rRefHtM_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rRefHtM_difference)),
        display rRefHtM_difference;
      );
    
      parameter rRefBolig_difference;
      rRefBolig_difference$(1) = rRefBolig.l - rRefBolig_saved;
      rRefBolig_difference$(abs(rRefBolig_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rRefBolig_difference)),
        display rRefBolig_difference;
      );
    
      parameter rHtM_difference;
      rHtM_difference$(1) = rHtM.l - rHtM_saved;
      rHtM_difference$(abs(rHtM_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rHtM_difference)),
        display rHtM_difference;
      );
    
      parameter eBolig_difference;
      eBolig_difference$(1) = eBolig.l - eBolig_saved;
      eBolig_difference$(abs(eBolig_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(eBolig_difference)),
        display eBolig_difference;
      );
    
      parameter uIBoligInstOmk_difference;
      uIBoligInstOmk_difference$(1) = uIBoligInstOmk.l - uIBoligInstOmk_saved;
      uIBoligInstOmk_difference$(abs(uIBoligInstOmk_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(uIBoligInstOmk_difference)),
        display uIBoligInstOmk_difference;
      );
    
      parameter fIBoligInstOmk_difference[t];
      fIBoligInstOmk_difference[t]$(1) = fIBoligInstOmk.l[t] - fIBoligInstOmk_saved[t];
      fIBoligInstOmk_difference[t]$(abs(fIBoligInstOmk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(fIBoligInstOmk_difference[t])),
        display fIBoligInstOmk_difference;
      );
    
      parameter fBoligGevinst_difference;
      fBoligGevinst_difference$(1) = fBoligGevinst.l - fBoligGevinst_saved;
      fBoligGevinst_difference$(abs(fBoligGevinst_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(fBoligGevinst_difference)),
        display fBoligGevinst_difference;
      );
    
      parameter EpLandInfl_difference[t];
      EpLandInfl_difference[t]$(1) = EpLandInfl.l[t] - EpLandInfl_saved[t];
      EpLandInfl_difference[t]$(abs(EpLandInfl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(EpLandInfl_difference[t])),
        display EpLandInfl_difference;
      );
    
      parameter EpBoligInfl_difference[t];
      EpBoligInfl_difference[t]$(1) = EpBoligInfl.l[t] - EpBoligInfl_saved[t];
      EpBoligInfl_difference[t]$(abs(EpBoligInfl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(EpBoligInfl_difference[t])),
        display EpBoligInfl_difference;
      );
    
      parameter eC_difference[c_];
      eC_difference[c_]$(1) = eC.l[c_] - eC_saved[c_];
      eC_difference[c_]$(abs(eC_difference[c_]) < 1e-6) = 0;
      if (sum([c_,t]$(1), abs(eC_difference[c_])),
        display eC_difference;
      );
    
      parameter uLand_difference[t];
      uLand_difference[t]$(1) = uLand.l[t] - uLand_saved[t];
      uLand_difference[t]$(abs(uLand_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uLand_difference[t])),
        display uLand_difference;
      );
    
      parameter uIBolig_difference[t];
      uIBolig_difference[t]$(1) = uIBolig.l[t] - uIBolig_saved[t];
      uIBolig_difference[t]$(abs(uIBolig_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uIBolig_difference[t])),
        display uIBolig_difference;
      );
    
      parameter rArv_difference[a,t];
      rArv_difference[a,t]$(1) = rArv.l[a,t] - rArv_saved[a,t];
      rArv_difference[a,t]$(abs(rArv_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(rArv_difference[a,t])),
        display rArv_difference;
      );
    
      parameter rArv_a_difference[a,aa];
      rArv_a_difference[a,aa]$(1) = rArv_a.l[a,aa] - rArv_a_saved[a,aa];
      rArv_a_difference[a,aa]$(abs(rArv_a_difference[a,aa]) < 1e-6) = 0;
      if (sum([a,aa,t]$(1), abs(rArv_a_difference[a,aa])),
        display rArv_a_difference;
      );
    
      parameter uFormue_difference[a,t];
      uFormue_difference[a,t]$(1) = uFormue.l[a,t] - uFormue_saved[a,t];
      uFormue_difference[a,t]$(abs(uFormue_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uFormue_difference[a,t])),
        display uFormue_difference;
      );
    
      parameter cFormue_difference[a,t];
      cFormue_difference[a,t]$(1) = cFormue.l[a,t] - cFormue_saved[a,t];
      cFormue_difference[a,t]$(abs(cFormue_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(cFormue_difference[a,t])),
        display cFormue_difference;
      );
    
      parameter rMaxRealkred_difference[t];
      rMaxRealkred_difference[t]$(1) = rMaxRealkred.l[t] - rMaxRealkred_saved[t];
      rMaxRealkred_difference[t]$(abs(rMaxRealkred_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rMaxRealkred_difference[t])),
        display rMaxRealkred_difference;
      );
    
      parameter uArv_difference[a,t];
      uArv_difference[a,t]$(1) = uArv.l[a,t] - uArv_saved[a,t];
      uArv_difference[a,t]$(abs(uArv_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uArv_difference[a,t])),
        display uArv_difference;
      );
    
      parameter cArv_difference[a,t];
      cArv_difference[a,t]$(1) = cArv.l[a,t] - cArv_saved[a,t];
      cArv_difference[a,t]$(abs(cArv_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(cArv_difference[a,t])),
        display cArv_difference;
      );
    
      parameter tArv_difference[t];
      tArv_difference[t]$(1) = tArv.l[t] - tArv_saved[t];
      tArv_difference[t]$(abs(tArv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tArv_difference[t])),
        display tArv_difference;
      );
    
      parameter rSelvstKapInd_difference[t];
      rSelvstKapInd_difference[t]$(1) = rSelvstKapInd.l[t] - rSelvstKapInd_saved[t];
      rSelvstKapInd_difference[t]$(abs(rSelvstKapInd_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rSelvstKapInd_difference[t])),
        display rSelvstKapInd_difference;
      );
    
      parameter eNytte_difference;
      eNytte_difference$(1) = eNytte.l - eNytte_saved;
      eNytte_difference$(abs(eNytte_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(eNytte_difference)),
        display eNytte_difference;
      );
    
      parameter rArvKorrektion_difference[a];
      rArvKorrektion_difference[a]$(1) = rArvKorrektion.l[a] - rArvKorrektion_saved[a];
      rArvKorrektion_difference[a]$(abs(rArvKorrektion_difference[a]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(rArvKorrektion_difference[a])),
        display rArvKorrektion_difference;
      );
    
      parameter uC0_difference[c_,t];
      uC0_difference[c_,t]$(1) = uC0.l[c_,t] - uC0_saved[c_,t];
      uC0_difference[c_,t]$(abs(uC0_difference[c_,t]) < 1e-6) = 0;
      if (sum([c_,t]$(1), abs(uC0_difference[c_,t])),
        display uC0_difference;
      );
    
      parameter fuCnest_difference[cNest,t];
      fuCnest_difference[cNest,t]$(1) = fuCnest.l[cNest,t] - fuCnest_saved[cNest,t];
      fuCnest_difference[cNest,t]$(abs(fuCnest_difference[cNest,t]) < 1e-6) = 0;
      if (sum([cNest,t]$(1), abs(fuCnest_difference[cNest,t])),
        display fuCnest_difference;
      );
    
      parameter rBilAfskr_difference[t];
      rBilAfskr_difference[t]$(1) = rBilAfskr.l[t] - rBilAfskr_saved[t];
      rBilAfskr_difference[t]$(abs(rBilAfskr_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rBilAfskr_difference[t])),
        display rBilAfskr_difference;
      );
    
      parameter rHhInvestx_difference[t];
      rHhInvestx_difference[t]$(1) = rHhInvestx.l[t] - rHhInvestx_saved[t];
      rHhInvestx_difference[t]$(abs(rHhInvestx_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rHhInvestx_difference[t])),
        display rHhInvestx_difference;
      );
    
      parameter nArvinger_difference[a,t];
      nArvinger_difference[a,t]$(1) = nArvinger.l[a,t] - nArvinger_saved[a,t];
      nArvinger_difference[a,t]$(abs(nArvinger_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(nArvinger_difference[a,t])),
        display nArvinger_difference;
      );
    
      parameter rBoern_difference[a,t];
      rBoern_difference[a,t]$(1) = rBoern.l[a,t] - rBoern_saved[a,t];
      rBoern_difference[a,t]$(abs(rBoern_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(rBoern_difference[a,t])),
        display rBoern_difference;
      );
    
      parameter rOverlev_difference[a_,t];
      rOverlev_difference[a_,t]$(1) = rOverlev.l[a_,t] - rOverlev_saved[a_,t];
      rOverlev_difference[a_,t]$(abs(rOverlev_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(rOverlev_difference[a_,t])),
        display rOverlev_difference;
      );
    
      parameter ErOverlev_difference[a,t];
      ErOverlev_difference[a,t]$(1) = ErOverlev.l[a,t] - ErOverlev_saved[a,t];
      ErOverlev_difference[a,t]$(abs(ErOverlev_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(ErOverlev_difference[a,t])),
        display ErOverlev_difference;
      );
    
      parameter rBoligPrem_difference[t];
      rBoligPrem_difference[t]$(1) = rBoligPrem.l[t] - rBoligPrem_saved[t];
      rBoligPrem_difference[t]$(abs(rBoligPrem_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rBoligPrem_difference[t])),
        display rBoligPrem_difference;
      );
    
      parameter jfEpC_difference[t];
      jfEpC_difference[t]$(1) = jfEpC.l[t] - jfEpC_saved[t];
      jfEpC_difference[t]$(abs(jfEpC_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jfEpC_difference[t])),
        display jfEpC_difference;
      );
    
      parameter srLUdn_difference[s_,t];
      srLUdn_difference[s_,t]$(1) = srLUdn.l[s_,t] - srLUdn_saved[s_,t];
      srLUdn_difference[s_,t]$(abs(srLUdn_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(srLUdn_difference[s_,t])),
        display srLUdn_difference;
      );
    
      parameter jshLHh_difference[a,t];
      jshLHh_difference[a,t]$(1) = jshLHh.l[a,t] - jshLHh_saved[a,t];
      jshLHh_difference[a,t]$(abs(jshLHh_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(jshLHh_difference[a,t])),
        display jshLHh_difference;
      );
    
      parameter jsfDeltag_difference[a,t];
      jsfDeltag_difference[a,t]$(1) = jsfDeltag.l[a,t] - jsfDeltag_saved[a,t];
      jsfDeltag_difference[a,t]$(abs(jsfDeltag_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(jsfDeltag_difference[a,t])),
        display jsfDeltag_difference;
      );
    
      parameter juY_difference[t];
      juY_difference[t]$(1) = juY.l[t] - juY_saved[t];
      juY_difference[t]$(abs(juY_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(juY_difference[t])),
        display juY_difference;
      );
    
      parameter dSoc2dBesk_difference[soc_,t];
      dSoc2dBesk_difference[soc_,t]$(1) = dSoc2dBesk.l[soc_,t] - dSoc2dBesk_saved[soc_,t];
      dSoc2dBesk_difference[soc_,t]$(abs(dSoc2dBesk_difference[soc_,t]) < 1e-6) = 0;
      if (sum([soc_,t]$(1), abs(dSoc2dBesk_difference[soc_,t])),
        display dSoc2dBesk_difference;
      );
    
      parameter fProdHh_a_difference[a,t];
      fProdHh_a_difference[a,t]$(1) = fProdHh_a.l[a,t] - fProdHh_a_saved[a,t];
      fProdHh_a_difference[a,t]$(abs(fProdHh_a_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(fProdHh_a_difference[a,t])),
        display fProdHh_a_difference;
      );
    
      parameter fProdHh_t_difference[t];
      fProdHh_t_difference[t]$(1) = fProdHh_t.l[t] - fProdHh_t_saved[t];
      fProdHh_t_difference[t]$(abs(fProdHh_t_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(fProdHh_t_difference[t])),
        display fProdHh_t_difference;
      );
    
      parameter fDiskpL_difference[sp,t];
      fDiskpL_difference[sp,t]$(1) = fDiskpL.l[sp,t] - fDiskpL_saved[sp,t];
      fDiskpL_difference[sp,t]$(abs(fDiskpL_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(fDiskpL_difference[sp,t])),
        display fDiskpL_difference;
      );
    
      parameter fDiskDeltag_difference[a,t];
      fDiskDeltag_difference[a,t]$(1) = fDiskDeltag.l[a,t] - fDiskDeltag_saved[a,t];
      fDiskDeltag_difference[a,t]$(abs(fDiskDeltag_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(fDiskDeltag_difference[a,t])),
        display fDiskDeltag_difference;
      );
    
      parameter mrKomp_difference[a_,t];
      mrKomp_difference[a_,t]$(1) = mrKomp.l[a_,t] - mrKomp_saved[a_,t];
      mrKomp_difference[a_,t]$(abs(mrKomp_difference[a_,t]) < 1e-6) = 0;
      if (sum([a_,t]$(1), abs(mrKomp_difference[a_,t])),
        display mrKomp_difference;
      );
    
      parameter eDeltag_difference;
      eDeltag_difference$(1) = eDeltag.l - eDeltag_saved;
      eDeltag_difference$(abs(eDeltag_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(eDeltag_difference)),
        display eDeltag_difference;
      );
    
      parameter emrKomp_difference;
      emrKomp_difference$(1) = emrKomp.l - emrKomp_saved;
      emrKomp_difference$(abs(emrKomp_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(emrKomp_difference)),
        display emrKomp_difference;
      );
    
      parameter eMatching_difference;
      eMatching_difference$(1) = eMatching.l - eMatching_saved;
      eMatching_difference$(abs(eMatching_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(eMatching_difference)),
        display eMatching_difference;
      );
    
      parameter nSoegBaseUdl_difference[t];
      nSoegBaseUdl_difference[t]$(1) = nSoegBaseUdl.l[t] - nSoegBaseUdl_saved[t];
      nSoegBaseUdl_difference[t]$(abs(nSoegBaseUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(nSoegBaseUdl_difference[t])),
        display nSoegBaseUdl_difference;
      );
    
      parameter uDeltag_difference[a,t];
      uDeltag_difference[a,t]$(1) = uDeltag.l[a,t] - uDeltag_saved[a,t];
      uDeltag_difference[a,t]$(abs(uDeltag_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(uDeltag_difference[a,t])),
        display uDeltag_difference;
      );
    
      parameter eh_difference;
      eh_difference$(1) = eh.l - eh_saved;
      eh_difference$(abs(eh_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(eh_difference)),
        display eh_difference;
      );
    
      parameter fhLUdl_difference[t];
      fhLUdl_difference[t]$(1) = fhLUdl.l[t] - fhLUdl_saved[t];
      fhLUdl_difference[t]$(abs(fhLUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(fhLUdl_difference[t])),
        display fhLUdl_difference;
      );
    
      parameter fProdUdl_difference[t];
      fProdUdl_difference[t]$(1) = fProdUdl.l[t] - fProdUdl_saved[t];
      fProdUdl_difference[t]$(abs(fProdUdl_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(fProdUdl_difference[t])),
        display fProdUdl_difference;
      );
    
      parameter fW0_difference[s_,t];
      fW0_difference[s_,t]$(1) = fW0.l[s_,t] - fW0_saved[s_,t];
      fW0_difference[s_,t]$(abs(fW0_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(fW0_difference[s_,t])),
        display fW0_difference;
      );
    
      parameter uOpslagOmk_difference;
      uOpslagOmk_difference$(1) = uOpslagOmk.l - uOpslagOmk_saved;
      uOpslagOmk_difference$(abs(uOpslagOmk_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(uOpslagOmk_difference)),
        display uOpslagOmk_difference;
      );
    
      parameter uMatchOmk_difference;
      uMatchOmk_difference$(1) = uMatchOmk.l - uMatchOmk_saved;
      uMatchOmk_difference$(abs(uMatchOmk_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(uMatchOmk_difference)),
        display uMatchOmk_difference;
      );
    
      parameter uMatchOmkSqr_difference;
      uMatchOmkSqr_difference$(1) = uMatchOmkSqr.l - uMatchOmkSqr_saved;
      uMatchOmkSqr_difference$(abs(uMatchOmkSqr_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(uMatchOmkSqr_difference)),
        display uMatchOmkSqr_difference;
      );
    
      parameter rLoenTraeghed_difference;
      rLoenTraeghed_difference$(1) = rLoenTraeghed.l - rLoenTraeghed_saved;
      rLoenTraeghed_difference$(abs(rLoenTraeghed_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rLoenTraeghed_difference)),
        display rLoenTraeghed_difference;
      );
    
      parameter rLoenIndeksering_difference;
      rLoenIndeksering_difference$(1) = rLoenIndeksering.l - rLoenIndeksering_saved;
      rLoenIndeksering_difference$(abs(rLoenIndeksering_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rLoenIndeksering_difference)),
        display rLoenIndeksering_difference;
      );
    
      parameter cmtInd_difference[a,t];
      cmtInd_difference[a,t]$(1) = cmtInd.l[a,t] - cmtInd_saved[a,t];
      cmtInd_difference[a,t]$(abs(cmtInd_difference[a,t]) < 1e-6) = 0;
      if (sum([a,t]$(1), abs(cmtInd_difference[a,t])),
        display cmtInd_difference;
      );
    
      parameter rfZhTraeghed_difference;
      rfZhTraeghed_difference$(1) = rfZhTraeghed.l - rfZhTraeghed_saved;
      rfZhTraeghed_difference$(abs(rfZhTraeghed_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rfZhTraeghed_difference)),
        display rfZhTraeghed_difference;
      );
    
      parameter rAMDisk_difference[t];
      rAMDisk_difference[t]$(1) = rAMDisk.l[t] - rAMDisk_saved[t];
      rAMDisk_difference[t]$(abs(rAMDisk_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rAMDisk_difference[t])),
        display rAMDisk_difference;
      );
    
      parameter rFFLoenAlternativ_difference;
      rFFLoenAlternativ_difference$(1) = rFFLoenAlternativ.l - rFFLoenAlternativ_saved;
      rFFLoenAlternativ_difference$(abs(rFFLoenAlternativ_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rFFLoenAlternativ_difference)),
        display rFFLoenAlternativ_difference;
      );
    
      parameter cMatchOmkSqr_difference[s_,t];
      cMatchOmkSqr_difference[s_,t]$(1) = cMatchOmkSqr.l[s_,t] - cMatchOmkSqr_saved[s_,t];
      cMatchOmkSqr_difference[s_,t]$(abs(cMatchOmkSqr_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(cMatchOmkSqr_difference[s_,t])),
        display cMatchOmkSqr_difference;
      );
    
      parameter jvhW_difference[t];
      jvhW_difference[t]$(1) = jvhW.l[t] - jvhW_saved[t];
      jvhW_difference[t]$(abs(jvhW_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvhW_difference[t])),
        display jvhW_difference;
      );
    
      parameter rLoenNash_difference[t];
      rLoenNash_difference[t]$(1) = rLoenNash.l[t] - rLoenNash_saved[t];
      rLoenNash_difference[t]$(abs(rLoenNash_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rLoenNash_difference[t])),
        display rLoenNash_difference;
      );
    
      parameter rSelvst_difference[s_,t];
      rSelvst_difference[s_,t]$(1) = rSelvst.l[s_,t] - rSelvst_saved[s_,t];
      rSelvst_difference[s_,t]$(abs(rSelvst_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(rSelvst_difference[s_,t])),
        display rSelvst_difference;
      );
    
      parameter jnSoc_difference[soc_,t];
      jnSoc_difference[soc_,t]$(1) = jnSoc.l[soc_,t] - jnSoc_saved[soc_,t];
      jnSoc_difference[soc_,t]$(abs(jnSoc_difference[soc_,t]) < 1e-6) = 0;
      if (sum([soc_,t]$(1), abs(jnSoc_difference[soc_,t])),
        display jnSoc_difference;
      );
    
      parameter upYTraeghed_difference[sp];
      upYTraeghed_difference[sp]$(1) = upYTraeghed.l[sp] - upYTraeghed_saved[sp];
      upYTraeghed_difference[sp]$(abs(upYTraeghed_difference[sp]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(upYTraeghed_difference[sp])),
        display upYTraeghed_difference;
      );
    
      parameter eY_difference[sp,t];
      eY_difference[sp,t]$(1) = eY.l[sp,t] - eY_saved[sp,t];
      eY_difference[sp,t]$(abs(eY_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(eY_difference[sp,t])),
        display eY_difference;
      );
    
      parameter epM2pOlie_difference[s];
      epM2pOlie_difference[s]$(1) = epM2pOlie.l[s] - epM2pOlie_saved[s];
      epM2pOlie_difference[s]$(abs(epM2pOlie_difference[s]) < 1e-6) = 0;
      if (sum([s,t]$(1), abs(epM2pOlie_difference[s])),
        display epM2pOlie_difference;
      );
    
      parameter epXUdl2pOlie_difference[x];
      epXUdl2pOlie_difference[x]$(1) = epXUdl2pOlie.l[x] - epXUdl2pOlie_saved[x];
      epXUdl2pOlie_difference[x]$(abs(epXUdl2pOlie_difference[x]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(epXUdl2pOlie_difference[x])),
        display epXUdl2pOlie_difference;
      );
    
      parameter upXSoe_difference[t];
      upXSoe_difference[t]$(1) = upXSoe.l[t] - upXSoe_saved[t];
      upXSoe_difference[t]$(abs(upXSoe_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(upXSoe_difference[t])),
        display upXSoe_difference;
      );
    
      parameter upXUdl_difference[x,t];
      upXUdl_difference[x,t]$(1) = upXUdl.l[x,t] - upXUdl_saved[x,t];
      upXUdl_difference[x,t]$(abs(upXUdl_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(upXUdl_difference[x,t])),
        display upXUdl_difference;
      );
    
      parameter upM_difference[s,t];
      upM_difference[s,t]$(1) = upM.l[s,t] - upM_saved[s,t];
      upM_difference[s,t]$(abs(upM_difference[s,t]) < 1e-6) = 0;
      if (sum([s,t]$(1), abs(upM_difference[s,t])),
        display upM_difference;
      );
    
      parameter upYUdv_difference[t];
      upYUdv_difference[t]$(1) = upYUdv.l[t] - upYUdv_saved[t];
      upYUdv_difference[t]$(abs(upYUdv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(upYUdv_difference[t])),
        display upYUdv_difference;
      );
    
      parameter jpY_bol_difference[t];
      jpY_bol_difference[t]$(1) = jpY_bol.l[t] - jpY_bol_saved[t];
      jpY_bol_difference[t]$(abs(jpY_bol_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jpY_bol_difference[t])),
        display jpY_bol_difference;
      );
    
      parameter rSkatAfskr_difference[k,t];
      rSkatAfskr_difference[k,t]$(1) = rSkatAfskr.l[k,t] - rSkatAfskr_saved[k,t];
      rSkatAfskr_difference[k,t]$(abs(rSkatAfskr_difference[k,t]) < 1e-6) = 0;
      if (sum([k,t]$(1), abs(rSkatAfskr_difference[k,t])),
        display rSkatAfskr_difference;
      );
    
      parameter rAktieRes2BVT_difference[t];
      rAktieRes2BVT_difference[t]$(1) = rAktieRes2BVT.l[t] - rAktieRes2BVT_saved[t];
      rAktieRes2BVT_difference[t]$(abs(rAktieRes2BVT_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rAktieRes2BVT_difference[t])),
        display rAktieRes2BVT_difference;
      );
    
      parameter rvOblLaan2K_difference[t];
      rvOblLaan2K_difference[t]$(1) = rvOblLaan2K.l[t] - rvOblLaan2K_saved[t];
      rvOblLaan2K_difference[t]$(abs(rvOblLaan2K_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rvOblLaan2K_difference[t])),
        display rvOblLaan2K_difference;
      );
    
      parameter rvVirkx_difference[akt,t];
      rvVirkx_difference[akt,t]$(1) = rvVirkx.l[akt,t] - rvVirkx_saved[akt,t];
      rvVirkx_difference[akt,t]$(abs(rvVirkx_difference[akt,t]) < 1e-6) = 0;
      if (sum([akt,t]$(1), abs(rvVirkx_difference[akt,t])),
        display rvVirkx_difference;
      );
    
      parameter rPensAkt_difference[akt,t];
      rPensAkt_difference[akt,t]$(1) = rPensAkt.l[akt,t] - rPensAkt_saved[akt,t];
      rPensAkt_difference[akt,t]$(abs(rPensAkt_difference[akt,t]) < 1e-6) = 0;
      if (sum([akt,t]$(1), abs(rPensAkt_difference[akt,t])),
        display rPensAkt_difference;
      );
    
      parameter rFinAccel_difference[sp];
      rFinAccel_difference[sp]$(1) = rFinAccel.l[sp] - rFinAccel_saved[sp];
      rFinAccel_difference[sp]$(abs(rFinAccel_difference[sp]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(rFinAccel_difference[sp])),
        display rFinAccel_difference;
      );
    
      parameter cFinAccel_difference[sp,t];
      cFinAccel_difference[sp,t]$(1) = cFinAccel.l[sp,t] - cFinAccel_saved[sp,t];
      cFinAccel_difference[sp,t]$(abs(cFinAccel_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(cFinAccel_difference[sp,t])),
        display cFinAccel_difference;
      );
    
      parameter uFinAccel_difference[sp,t];
      uFinAccel_difference[sp,t]$(1) = uFinAccel.l[sp,t] - uFinAccel_saved[sp,t];
      uFinAccel_difference[sp,t]$(abs(uFinAccel_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(uFinAccel_difference[sp,t])),
        display uFinAccel_difference;
      );
    
      parameter rFinAccelTraeghed_difference;
      rFinAccelTraeghed_difference$(1) = rFinAccelTraeghed.l - rFinAccelTraeghed_saved;
      rFinAccelTraeghed_difference$(abs(rFinAccelTraeghed_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rFinAccelTraeghed_difference)),
        display rFinAccelTraeghed_difference;
      );
    
      parameter rvRealKred2K_difference[t];
      rvRealKred2K_difference[t]$(1) = rvRealKred2K.l[t] - rvRealKred2K_saved[t];
      rvRealKred2K_difference[t]$(abs(rvRealKred2K_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rvRealKred2K_difference[t])),
        display rvRealKred2K_difference;
      );
    
      parameter crRenteBank_difference[t];
      crRenteBank_difference[t]$(1) = crRenteBank.l[t] - crRenteBank_saved[t];
      crRenteBank_difference[t]$(abs(crRenteBank_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(crRenteBank_difference[t])),
        display crRenteBank_difference;
      );
    
      parameter rUdlAktiePrem_difference[t];
      rUdlAktiePrem_difference[t]$(1) = rUdlAktiePrem.l[t] - rUdlAktiePrem_saved[t];
      rUdlAktiePrem_difference[t]$(abs(rUdlAktiePrem_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rUdlAktiePrem_difference[t])),
        display rUdlAktiePrem_difference;
      );
    
      parameter rVirkDiskPrem_difference[sp,t];
      rVirkDiskPrem_difference[sp,t]$(1) = rVirkDiskPrem.l[sp,t] - rVirkDiskPrem_saved[sp,t];
      rVirkDiskPrem_difference[sp,t]$(abs(rVirkDiskPrem_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(rVirkDiskPrem_difference[sp,t])),
        display rVirkDiskPrem_difference;
      );
    
      parameter jvVirkRenter_difference[t];
      jvVirkRenter_difference[t]$(1) = jvVirkRenter.l[t] - jvVirkRenter_saved[t];
      jvVirkRenter_difference[t]$(abs(jvVirkRenter_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvVirkRenter_difference[t])),
        display jvVirkRenter_difference;
      );
    
      parameter jvVirkOmv_difference[t];
      jvVirkOmv_difference[t]$(1) = jvVirkOmv.l[t] - jvVirkOmv_saved[t];
      jvVirkOmv_difference[t]$(abs(jvVirkOmv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvVirkOmv_difference[t])),
        display jvVirkOmv_difference;
      );
    
      parameter jrRente_pension_difference[t];
      jrRente_pension_difference[t]$(1) = jrRente_pension.l[t] - jrRente_pension_saved[t];
      jrRente_pension_difference[t]$(abs(jrRente_pension_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jrRente_pension_difference[t])),
        display jrRente_pension_difference;
      );
    
      parameter jrOmv_pension_difference[t];
      jrOmv_pension_difference[t]$(1) = jrOmv_pension.l[t] - jrOmv_pension_saved[t];
      jrOmv_pension_difference[t]$(abs(jrOmv_pension_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jrOmv_pension_difference[t])),
        display jrOmv_pension_difference;
      );
    
      parameter jrOmv_UdlAktier_difference[t];
      jrOmv_UdlAktier_difference[t]$(1) = jrOmv_UdlAktier.l[t] - jrOmv_UdlAktier_saved[t];
      jrOmv_UdlAktier_difference[t]$(abs(jrOmv_UdlAktier_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jrOmv_UdlAktier_difference[t])),
        display jrOmv_UdlAktier_difference;
      );
    
      parameter jvVirkx_difference[t];
      jvVirkx_difference[t]$(1) = jvVirkx.l[t] - jvVirkx_saved[t];
      jvVirkx_difference[t]$(abs(jvVirkx_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jvVirkx_difference[t])),
        display jvVirkx_difference;
      );
    
      parameter uKInstOmk_difference[k,sp];
      uKInstOmk_difference[k,sp]$(1) = uKInstOmk.l[k,sp] - uKInstOmk_saved[k,sp];
      uKInstOmk_difference[k,sp]$(abs(uKInstOmk_difference[k,sp]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(uKInstOmk_difference[k,sp])),
        display uKInstOmk_difference;
      );
    
      parameter fKInstOmk_difference[k,sp,t];
      fKInstOmk_difference[k,sp,t]$(1) = fKInstOmk.l[k,sp,t] - fKInstOmk_saved[k,sp,t];
      fKInstOmk_difference[k,sp,t]$(abs(fKInstOmk_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(fKInstOmk_difference[k,sp,t])),
        display fKInstOmk_difference;
      );
    
      parameter eKUdn_difference[k];
      eKUdn_difference[k]$(1) = eKUdn.l[k] - eKUdn_saved[k];
      eKUdn_difference[k]$(abs(eKUdn_difference[k]) < 1e-6) = 0;
      if (sum([k,t]$(1), abs(eKUdn_difference[k])),
        display eKUdn_difference;
      );
    
      parameter eKUdnPersistens_difference[k];
      eKUdnPersistens_difference[k]$(1) = eKUdnPersistens.l[k] - eKUdnPersistens_saved[k];
      eKUdnPersistens_difference[k]$(abs(eKUdnPersistens_difference[k]) < 1e-6) = 0;
      if (sum([k,t]$(1), abs(eKUdnPersistens_difference[k])),
        display eKUdnPersistens_difference;
      );
    
      parameter eLUdn_difference;
      eLUdn_difference$(1) = eLUdn.l - eLUdn_saved;
      eLUdn_difference$(abs(eLUdn_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(eLUdn_difference)),
        display eLUdn_difference;
      );
    
      parameter eLUdnPersistens_difference;
      eLUdnPersistens_difference$(1) = eLUdnPersistens.l - eLUdnPersistens_saved;
      eLUdnPersistens_difference$(abs(eLUdnPersistens_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(eLUdnPersistens_difference)),
        display eLUdnPersistens_difference;
      );
    
      parameter eKLBR_difference[sp];
      eKLBR_difference[sp]$(1) = eKLBR.l[sp] - eKLBR_saved[sp];
      eKLBR_difference[sp]$(abs(eKLBR_difference[sp]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(eKLBR_difference[sp])),
        display eKLBR_difference;
      );
    
      parameter eKLB_difference[sp];
      eKLB_difference[sp]$(1) = eKLB.l[sp] - eKLB_saved[sp];
      eKLB_difference[sp]$(abs(eKLB_difference[sp]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(eKLB_difference[sp])),
        display eKLB_difference;
      );
    
      parameter eKL_difference[sp];
      eKL_difference[sp]$(1) = eKL.l[sp] - eKL_saved[sp];
      eKL_difference[sp]$(abs(eKL_difference[sp]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(eKL_difference[sp])),
        display eKL_difference;
      );
    
      parameter rAfskr_static_difference[k,sp,t];
      rAfskr_static_difference[k,sp,t]$(1) = rAfskr_static.l[k,sp,t] - rAfskr_static_saved[k,sp,t];
      rAfskr_static_difference[k,sp,t]$(abs(rAfskr_static_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(rAfskr_static_difference[k,sp,t])),
        display rAfskr_static_difference;
      );
    
      parameter gpI_s_static_difference[k,sp,t];
      gpI_s_static_difference[k,sp,t]$(1) = gpI_s_static.l[k,sp,t] - gpI_s_static_saved[k,sp,t];
      gpI_s_static_difference[k,sp,t]$(abs(gpI_s_static_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(gpI_s_static_difference[k,sp,t])),
        display gpI_s_static_difference;
      );
    
      parameter rAfskr_difference[k,s_,t];
      rAfskr_difference[k,s_,t]$(1) = rAfskr.l[k,s_,t] - rAfskr_saved[k,s_,t];
      rAfskr_difference[k,s_,t]$(abs(rAfskr_difference[k,s_,t]) < 1e-6) = 0;
      if (sum([k,s_,t]$(1), abs(rAfskr_difference[k,s_,t])),
        display rAfskr_difference;
      );
    
      parameter rIL2y_difference[s_,t];
      rIL2y_difference[s_,t]$(1) = rIL2y.l[s_,t] - rIL2y_saved[s_,t];
      rIL2y_difference[s_,t]$(abs(rIL2y_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(rIL2y_difference[s_,t])),
        display rIL2y_difference;
      );
    
      parameter fProd_difference[s_,t];
      fProd_difference[s_,t]$(1) = fProd.l[s_,t] - fProd_saved[s_,t];
      fProd_difference[s_,t]$(abs(fProd_difference[s_,t]) < 1e-6) = 0;
      if (sum([s_,t]$(1), abs(fProd_difference[s_,t])),
        display fProd_difference;
      );
    
      parameter jrLUdn_difference[sp,t];
      jrLUdn_difference[sp,t]$(1) = jrLUdn.l[sp,t] - jrLUdn_saved[sp,t];
      jrLUdn_difference[sp,t]$(abs(jrLUdn_difference[sp,t]) < 1e-6) = 0;
      if (sum([sp,t]$(1), abs(jrLUdn_difference[sp,t])),
        display jrLUdn_difference;
      );
    
      parameter jrKUdn_difference[k,sp,t];
      jrKUdn_difference[k,sp,t]$(1) = jrKUdn.l[k,sp,t] - jrKUdn_saved[k,sp,t];
      jrKUdn_difference[k,sp,t]$(abs(jrKUdn_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(jrKUdn_difference[k,sp,t])),
        display jrKUdn_difference;
      );
    
      parameter jfqI_s_iL_difference[t];
      jfqI_s_iL_difference[t]$(1) = jfqI_s_iL.l[t] - jfqI_s_iL_saved[t];
      jfqI_s_iL_difference[t]$(abs(jfqI_s_iL_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jfqI_s_iL_difference[t])),
        display jfqI_s_iL_difference;
      );
    
      parameter jpK_difference[k,sp,t];
      jpK_difference[k,sp,t]$(1) = jpK.l[k,sp,t] - jpK_saved[k,sp,t];
      jpK_difference[k,sp,t]$(abs(jpK_difference[k,sp,t]) < 1e-6) = 0;
      if (sum([k,sp,t]$(1), abs(jpK_difference[k,sp,t])),
        display jpK_difference;
      );
    
      parameter rOffIB2NyInv_difference[t];
      rOffIB2NyInv_difference[t]$(1) = rOffIB2NyInv.l[t] - rOffIB2NyInv_saved[t];
      rOffIB2NyInv_difference[t]$(abs(rOffIB2NyInv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffIB2NyInv_difference[t])),
        display rOffIB2NyInv_difference;
      );
    
      parameter rOffLTraeghed_difference;
      rOffLTraeghed_difference$(1) = rOffLTraeghed.l - rOffLTraeghed_saved;
      rOffLTraeghed_difference$(abs(rOffLTraeghed_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rOffLTraeghed_difference)),
        display rOffLTraeghed_difference;
      );
    
      parameter rvOffIndirInv2vBVT_difference[t];
      rvOffIndirInv2vBVT_difference[t]$(1) = rvOffIndirInv2vBVT.l[t] - rvOffIndirInv2vBVT_saved[t];
      rvOffIndirInv2vBVT_difference[t]$(abs(rvOffIndirInv2vBVT_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(rvOffIndirInv2vBVT_difference[t])),
        display rvOffIndirInv2vBVT_difference;
      );
    
      parameter jrpOffAfskr_difference[k,t];
      jrpOffAfskr_difference[k,t]$(1) = jrpOffAfskr.l[k,t] - jrpOffAfskr_saved[k,t];
      jrpOffAfskr_difference[k,t]$(abs(jrpOffAfskr_difference[k,t]) < 1e-6) = 0;
      if (sum([k,t]$(1), abs(jrpOffAfskr_difference[k,t])),
        display jrpOffAfskr_difference;
      );
    
      parameter jrqOffAfskr_difference[k,t];
      jrqOffAfskr_difference[k,t]$(1) = jrqOffAfskr.l[k,t] - jrqOffAfskr_saved[k,t];
      jrqOffAfskr_difference[k,t]$(abs(jrqOffAfskr_difference[k,t]) < 1e-6) = 0;
      if (sum([k,t]$(1), abs(jrqOffAfskr_difference[k,t])),
        display jrqOffAfskr_difference;
      );
    
      parameter jrpOffNyInv_difference[t];
      jrpOffNyInv_difference[t]$(1) = jrpOffNyInv.l[t] - jrpOffNyInv_saved[t];
      jrpOffNyInv_difference[t]$(abs(jrpOffNyInv_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(jrpOffNyInv_difference[t])),
        display jrpOffNyInv_difference;
      );
    
      parameter uXTur_difference[t];
      uXTur_difference[t]$(1) = uXTur.l[t] - uXTur_saved[t];
      uXTur_difference[t]$(abs(uXTur_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(uXTur_difference[t])),
        display uXTur_difference;
      );
    
      parameter uXm_difference[x,t];
      uXm_difference[x,t]$(1) = uXm.l[x,t] - uXm_saved[x,t];
      uXm_difference[x,t]$(abs(uXm_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(uXm_difference[x,t])),
        display uXm_difference;
      );
    
      parameter fuCturisme_difference[t];
      fuCturisme_difference[t]$(1) = fuCturisme.l[t] - fuCturisme_saved[t];
      fuCturisme_difference[t]$(abs(fuCturisme_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(fuCturisme_difference[t])),
        display fuCturisme_difference;
      );
    
      parameter uCturisme0_difference[c,t];
      uCturisme0_difference[c,t]$(1) = uCturisme0.l[c,t] - uCturisme0_saved[c,t];
      uCturisme0_difference[c,t]$(abs(uCturisme0_difference[c,t]) < 1e-6) = 0;
      if (sum([c,t]$(1), abs(uCturisme0_difference[c,t])),
        display uCturisme0_difference;
      );
    
      parameter rXTraeghed_difference;
      rXTraeghed_difference$(1) = rXTraeghed.l - rXTraeghed_saved;
      rXTraeghed_difference$(abs(rXTraeghed_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rXTraeghed_difference)),
        display rXTraeghed_difference;
      );
    
      parameter upXyTraeghed_difference;
      upXyTraeghed_difference$(1) = upXyTraeghed.l - upXyTraeghed_saved;
      upXyTraeghed_difference$(abs(upXyTraeghed_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(upXyTraeghed_difference)),
        display upXyTraeghed_difference;
      );
    
      parameter rXSkalaTraeghed_difference;
      rXSkalaTraeghed_difference$(1) = rXSkalaTraeghed.l - rXSkalaTraeghed_saved;
      rXSkalaTraeghed_difference$(abs(rXSkalaTraeghed_difference) < 1e-6) = 0;
      if (sum([t]$(1), abs(rXSkalaTraeghed_difference)),
        display rXSkalaTraeghed_difference;
      );
    
      parameter eXUdl_difference[x];
      eXUdl_difference[x]$(1) = eXUdl.l[x] - eXUdl_saved[x];
      eXUdl_difference[x]$(abs(eXUdl_difference[x]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(eXUdl_difference[x])),
        display eXUdl_difference;
      );
    
      parameter cpXyTraeghed_difference[x,t];
      cpXyTraeghed_difference[x,t]$(1) = cpXyTraeghed.l[x,t] - cpXyTraeghed_saved[x,t];
      cpXyTraeghed_difference[x,t]$(abs(cpXyTraeghed_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(cpXyTraeghed_difference[x,t])),
        display cpXyTraeghed_difference;
      );
    
      parameter tYsub_y0_difference[d_,s,t];
      tYsub_y0_difference[d_,s,t]$(1) = tYsub_y0.l[d_,s,t] - tYsub_y0_saved[d_,s,t];
      tYsub_y0_difference[d_,s,t]$(abs(tYsub_y0_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tYsub_y0_difference[d_,s,t])),
        display tYsub_y0_difference;
      );
    
      parameter tYsub_m0_difference[d_,s,t];
      tYsub_m0_difference[d_,s,t]$(1) = tYsub_m0.l[d_,s,t] - tYsub_m0_saved[d_,s,t];
      tYsub_m0_difference[d_,s,t]$(abs(tYsub_m0_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tYsub_m0_difference[d_,s,t])),
        display tYsub_m0_difference;
      );
    
      parameter tTold_difference[d_,s,t];
      tTold_difference[d_,s,t]$(1) = tTold.l[d_,s,t] - tTold_saved[d_,s,t];
      tTold_difference[d_,s,t]$(abs(tTold_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tTold_difference[d_,s,t])),
        display tTold_difference;
      );
    
      parameter tMoms_y_difference[d_,s,t];
      tMoms_y_difference[d_,s,t]$(1) = tMoms_y.l[d_,s,t] - tMoms_y_saved[d_,s,t];
      tMoms_y_difference[d_,s,t]$(abs(tMoms_y_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tMoms_y_difference[d_,s,t])),
        display tMoms_y_difference;
      );
    
      parameter tMoms_m_difference[d_,s,t];
      tMoms_m_difference[d_,s,t]$(1) = tMoms_m.l[d_,s,t] - tMoms_m_saved[d_,s,t];
      tMoms_m_difference[d_,s,t]$(abs(tMoms_m_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tMoms_m_difference[d_,s,t])),
        display tMoms_m_difference;
      );
    
      parameter tK_difference[k,s_,t];
      tK_difference[k,s_,t]$(1) = tK.l[k,s_,t] - tK_saved[k,s_,t];
      tK_difference[k,s_,t]$(abs(tK_difference[k,s_,t]) < 1e-6) = 0;
      if (sum([k,s_,t]$(1), abs(tK_difference[k,s_,t])),
        display tK_difference;
      );
    
      parameter tLoensum_difference[s,t];
      tLoensum_difference[s,t]$(1) = tLoensum.l[s,t] - tLoensum_saved[s,t];
      tLoensum_difference[s,t]$(abs(tLoensum_difference[s,t]) < 1e-6) = 0;
      if (sum([s,t]$(1), abs(tLoensum_difference[s,t])),
        display tLoensum_difference;
      );
    
      parameter tVirkAM_difference[s,t];
      tVirkAM_difference[s,t]$(1) = tVirkAM.l[s,t] - tVirkAM_saved[s,t];
      tVirkAM_difference[s,t]$(abs(tVirkAM_difference[s,t]) < 1e-6) = 0;
      if (sum([s,t]$(1), abs(tVirkAM_difference[s,t])),
        display tVirkAM_difference;
      );
    
      parameter tLoenSub_difference[s,t];
      tLoenSub_difference[s,t]$(1) = tLoenSub.l[s,t] - tLoenSub_saved[s,t];
      tLoenSub_difference[s,t]$(abs(tLoenSub_difference[s,t]) < 1e-6) = 0;
      if (sum([s,t]$(1), abs(tLoenSub_difference[s,t])),
        display tLoenSub_difference;
      );
    
      parameter tYsub0_difference[t];
      tYsub0_difference[t]$(1) = tYsub0.l[t] - tYsub0_saved[t];
      tYsub0_difference[t]$(abs(tYsub0_difference[t]) < 1e-6) = 0;
      if (sum([t]$(1), abs(tYsub0_difference[t])),
        display tYsub0_difference;
      );
    
      parameter tReg_difference[d_,t];
      tReg_difference[d_,t]$(1) = tReg.l[d_,t] - tReg_saved[d_,t];
      tReg_difference[d_,t]$(abs(tReg_difference[d_,t]) < 1e-6) = 0;
      if (sum([d_,t]$(1), abs(tReg_difference[d_,t])),
        display tReg_difference;
      );
    
      parameter tNetYRest_difference[s,t];
      tNetYRest_difference[s,t]$(1) = tNetYRest.l[s,t] - tNetYRest_saved[s,t];
      tNetYRest_difference[s,t]$(abs(tNetYRest_difference[s,t]) < 1e-6) = 0;
      if (sum([s,t]$(1), abs(tNetYRest_difference[s,t])),
        display tNetYRest_difference;
      );
    
      parameter tAfg_y_difference[d_,s,t];
      tAfg_y_difference[d_,s,t]$(1) = tAfg_y.l[d_,s,t] - tAfg_y_saved[d_,s,t];
      tAfg_y_difference[d_,s,t]$(abs(tAfg_y_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tAfg_y_difference[d_,s,t])),
        display tAfg_y_difference;
      );
    
      parameter tAfg_m_difference[d_,s,t];
      tAfg_m_difference[d_,s,t]$(1) = tAfg_m.l[d_,s,t] - tAfg_m_saved[d_,s,t];
      tAfg_m_difference[d_,s,t]$(abs(tAfg_m_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tAfg_m_difference[d_,s,t])),
        display tAfg_m_difference;
      );
    
      parameter tYsub_y_difference[d_,s,t];
      tYsub_y_difference[d_,s,t]$(1) = tYsub_y.l[d_,s,t] - tYsub_y_saved[d_,s,t];
      tYsub_y_difference[d_,s,t]$(abs(tYsub_y_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tYsub_y_difference[d_,s,t])),
        display tYsub_y_difference;
      );
    
      parameter tYsub_m_difference[d_,s,t];
      tYsub_m_difference[d_,s,t]$(1) = tYsub_m.l[d_,s,t] - tYsub_m_saved[d_,s,t];
      tYsub_m_difference[d_,s,t]$(abs(tYsub_m_difference[d_,s,t]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(tYsub_m_difference[d_,s,t])),
        display tYsub_m_difference;
      );
    
      parameter eIO_difference[d_,s];
      eIO_difference[d_,s]$(1) = eIO.l[d_,s] - eIO_saved[d_,s];
      eIO_difference[d_,s]$(abs(eIO_difference[d_,s]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(eIO_difference[d_,s])),
        display eIO_difference;
      );
    
      parameter rMerPris_difference[d_,t];
      rMerPris_difference[d_,t]$(1) = rMerPris.l[d_,t] - rMerPris_saved[d_,t];
      rMerPris_difference[d_,t]$(abs(rMerPris_difference[d_,t]) < 1e-6) = 0;
      if (sum([d_,t]$(1), abs(rMerPris_difference[d_,t])),
        display rMerPris_difference;
      );
    
      parameter rvIO2vOffNyInv_difference[i,t];
      rvIO2vOffNyInv_difference[i,t]$(1) = rvIO2vOffNyInv.l[i,t] - rvIO2vOffNyInv_saved[i,t];
      rvIO2vOffNyInv_difference[i,t]$(abs(rvIO2vOffNyInv_difference[i,t]) < 1e-6) = 0;
      if (sum([i,t]$(1), abs(rvIO2vOffNyInv_difference[i,t])),
        display rvIO2vOffNyInv_difference;
      );
    
      parameter rvIO2vPublicSales_difference[c,t];
      rvIO2vPublicSales_difference[c,t]$(1) = rvIO2vPublicSales.l[c,t] - rvIO2vPublicSales_saved[c,t];
      rvIO2vPublicSales_difference[c,t]$(abs(rvIO2vPublicSales_difference[c,t]) < 1e-6) = 0;
      if (sum([c,t]$(1), abs(rvIO2vPublicSales_difference[c,t])),
        display rvIO2vPublicSales_difference;
      );
    
      parameter rpMTraeghed_difference[d_,s];
      rpMTraeghed_difference[d_,s]$(1) = rpMTraeghed.l[d_,s] - rpMTraeghed_saved[d_,s];
      rpMTraeghed_difference[d_,s]$(abs(rpMTraeghed_difference[d_,s]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(rpMTraeghed_difference[d_,s])),
        display rpMTraeghed_difference;
      );
    
      parameter rMKortsigt_difference[d_,s];
      rMKortsigt_difference[d_,s]$(1) = rMKortsigt.l[d_,s] - rMKortsigt_saved[d_,s];
      rMKortsigt_difference[d_,s]$(abs(rMKortsigt_difference[d_,s]) < 1e-6) = 0;
      if (sum([d_,s,t]$(1), abs(rMKortsigt_difference[d_,s])),
        display rMKortsigt_difference;
      );
    
      parameter uIOm0_difference[dux,s,t];
      uIOm0_difference[dux,s,t]$(1) = uIOm0.l[dux,s,t] - uIOm0_saved[dux,s,t];
      uIOm0_difference[dux,s,t]$(abs(uIOm0_difference[dux,s,t]) < 1e-6) = 0;
      if (sum([dux,s,t]$(1), abs(uIOm0_difference[dux,s,t])),
        display uIOm0_difference;
      );
    
      parameter uIOXy0_difference[x,s,t];
      uIOXy0_difference[x,s,t]$(1) = uIOXy0.l[x,s,t] - uIOXy0_saved[x,s,t];
      uIOXy0_difference[x,s,t]$(abs(uIOXy0_difference[x,s,t]) < 1e-6) = 0;
      if (sum([x,s,t]$(1), abs(uIOXy0_difference[x,s,t])),
        display uIOXy0_difference;
      );
    
      parameter uIOXm0_difference[x,s,t];
      uIOXm0_difference[x,s,t]$(1) = uIOXm0.l[x,s,t] - uIOXm0_saved[x,s,t];
      uIOXm0_difference[x,s,t]$(abs(uIOXm0_difference[x,s,t]) < 1e-6) = 0;
      if (sum([x,s,t]$(1), abs(uIOXm0_difference[x,s,t])),
        display uIOXm0_difference;
      );
    
      parameter fuIO_difference[dux,t];
      fuIO_difference[dux,t]$(1) = fuIO.l[dux,t] - fuIO_saved[dux,t];
      fuIO_difference[dux,t]$(abs(fuIO_difference[dux,t]) < 1e-6) = 0;
      if (sum([dux,t]$(1), abs(fuIO_difference[dux,t])),
        display fuIO_difference;
      );
    
      parameter fuIOym_difference[dux,s,t];
      fuIOym_difference[dux,s,t]$(1) = fuIOym.l[dux,s,t] - fuIOym_saved[dux,s,t];
      fuIOym_difference[dux,s,t]$(abs(fuIOym_difference[dux,s,t]) < 1e-6) = 0;
      if (sum([dux,s,t]$(1), abs(fuIOym_difference[dux,s,t])),
        display fuIOym_difference;
      );
    
      parameter fuXm_difference[x,t];
      fuXm_difference[x,t]$(1) = fuXm.l[x,t] - fuXm_saved[x,t];
      fuXm_difference[x,t]$(abs(fuXm_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(fuXm_difference[x,t])),
        display fuXm_difference;
      );
    
      parameter fuXy_difference[x,t];
      fuXy_difference[x,t]$(1) = fuXy.l[x,t] - fuXy_saved[x,t];
      fuXy_difference[x,t]$(abs(fuXy_difference[x,t]) < 1e-6) = 0;
      if (sum([x,t]$(1), abs(fuXy_difference[x,t])),
        display fuXy_difference;
      );
    
      parameter upI_s_difference[i,s,t];
      upI_s_difference[i,s,t]$(1) = upI_s.l[i,s,t] - upI_s_saved[i,s,t];
      upI_s_difference[i,s,t]$(abs(upI_s_difference[i,s,t]) < 1e-6) = 0;
      if (sum([i,s,t]$(1), abs(upI_s_difference[i,s,t])),
        display upI_s_difference;
      );
    
      parameter fpCTurist_difference[c,t];
      fpCTurist_difference[c,t]$(1) = fpCTurist.l[c,t] - fpCTurist_saved[c,t];
      fpCTurist_difference[c,t]$(abs(fpCTurist_difference[c,t]) < 1e-6) = 0;
      if (sum([c,t]$(1), abs(fpCTurist_difference[c,t])),
        display fpCTurist_difference;
      );
    
    
# ----------------------------------------------------------------------------------------------------
#  Loop over G_ZeroShockTest
# ----------------------------------------------------------------------------------------------------

      loop([x_,t]$(1),
        abort$(qX_difference[x_,t] <> 0) 'qX_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(qXy_difference[x,t] <> 0) 'qXy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(qXm_difference[x,t] <> 0) 'qXm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c,t]$(1),
        abort$(qCTurist_difference[c,t] <> 0) 'qCTurist_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(qXSkala_difference[x,t] <> 0) 'qXSkala_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(qXTraek_difference[x,t] <> 0) 'qXTraek_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(empty_group_dummy_difference[t] <> 0) 'empty_group_dummy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(rpXUdl2pXy_difference[x,t] <> 0) 'rpXUdl2pXy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(rpXy2pXUdl_difference[x,t] <> 0) 'rpXy2pXUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(uXy_difference[x,t] <> 0) 'uXy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c,t]$(1),
        abort$(uCturisme_difference[c,t] <> 0) 'uCturisme_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(rpM2pXm_difference[x,t] <> 0) 'rpM2pXm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(dqLdnL_difference[s_,t] <> 0) 'dqLdnL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(dqLLeaddnL_difference[sp,t] <> 0) 'dqLLeaddnL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vWHh_difference[a_,t] <> 0) 'vWHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vhW_difference[t] <> 0) 'vhW_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vhWNy_difference[t] <> 0) 'vhWNy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vWUdl_difference[t] <> 0) 'vWUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vhWForhandlet_difference[t] <> 0) 'vhWForhandlet_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vVirkLoenPos_difference[t] <> 0) 'vVirkLoenPos_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vVirkLoenPos0_difference[t] <> 0) 'vVirkLoenPos0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vVirkLoenNeg_difference[t] <> 0) 'vVirkLoenNeg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vVirkLoenNeg0_difference[t] <> 0) 'vVirkLoenNeg0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vFFLoenPos_difference[t] <> 0) 'vFFLoenPos_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vFFLoenPos0_difference[t] <> 0) 'vFFLoenPos0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vFFLoenNeg_difference[t] <> 0) 'vFFLoenNeg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vFFLoenNeg0_difference[t] <> 0) 'vFFLoenNeg0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vW_difference[s_,t] <> 0) 'vW_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vSelvstLoen_difference[s_,t] <> 0) 'vSelvstLoen_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vLoensum_difference[s_,t] <> 0) 'vLoensum_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(pL_difference[sp,t] <> 0) 'pL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rL2nL_difference[t] <> 0) 'rL2nL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(dOpslagOmk2dnL_difference[sp,t] <> 0) 'dOpslagOmk2dnL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(dOpslagOmk2dnLLag_difference[sp,t] <> 0) 'dOpslagOmk2dnLLag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(nSoegBaseHh_difference[a_,t] <> 0) 'nSoegBaseHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(nLHh_difference[a_,t] <> 0) 'nLHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(nSoegHh_difference[a_,t] <> 0) 'nSoegHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(fDeltag_difference[a,t] <> 0) 'fDeltag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(nLUdl_difference[t] <> 0) 'nLUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(nSoegUdl_difference[t] <> 0) 'nSoegUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(hLHh_difference[a_,t] <> 0) 'hLHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(hL_difference[t] <> 0) 'hL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(hLUdl_difference[t] <> 0) 'hLUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rJobFinding_difference[t] <> 0) 'rJobFinding_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rMatch_difference[t] <> 0) 'rMatch_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOpslag2soeg_difference[t] <> 0) 'rOpslag2soeg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(nOpslag_difference[s_,t] <> 0) 'nOpslag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(rOpslagOmk_difference[s_,t] <> 0) 'rOpslagOmk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(rSeparation_difference[a_,t] <> 0) 'rSeparation_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(fZh_difference[a,t] <> 0) 'fZh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(cZh_difference[a,t] <> 0) 'cZh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(nL_difference[s_,t] <> 0) 'nL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(nPop_difference[a_,t] <> 0) 'nPop_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([soc_,t]$(1),
        abort$(nSoc_difference[soc_,t] <> 0) 'nSoc_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rLedig_difference[t] <> 0) 'rLedig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rLedigGab_difference[t] <> 0) 'rLedigGab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(fProdHh_difference[a_,t] <> 0) 'fProdHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(fW_difference[s_,t] <> 0) 'fW_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(mtInd_difference[a_,t] <> 0) 'mtInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(pY_difference[s_,t] <> 0) 'pY_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x_,t]$(1),
        abort$(pXUdl_difference[x_,t] <> 0) 'pXUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(pM_difference[s_,t] <> 0) 'pM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(jrMarkup_difference[s_,t] <> 0) 'jrMarkup_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(rMarkup_difference[s_,t] <> 0) 'rMarkup_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(srMarkup_difference[s_,t] <> 0) 'srMarkup_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(rLUdn_difference[s_,t] <> 0) 'rLUdn_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,s_,t]$(1),
        abort$(rKUdn_difference[k,s_,t] <> 0) 'rKUdn_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rKUdnSpBy_difference[t] <> 0) 'rKUdnSpBy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(ErSkatAfskr_difference[k,sp,t] <> 0) 'ErSkatAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(qL_difference[s_,t] <> 0) 'qL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(dKInstOmk2dK_difference[k,sp,t] <> 0) 'dKInstOmk2dK_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(dKInstOmk2dI_difference[k,sp,t] <> 0) 'dKInstOmk2dI_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(dKInstOmkLead2dI_difference[k,sp,t] <> 0) 'dKInstOmkLead2dI_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(pKL_difference[sp,t] <> 0) 'pKL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(pKLB_difference[sp,t] <> 0) 'pKLB_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(pKLBR_difference[s_,t] <> 0) 'pKLBR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(pK_difference[k,sp,t] <> 0) 'pK_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(pTobinsQ_difference[k,sp,t] <> 0) 'pTobinsQ_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i_,sp,t]$(1),
        abort$(qKInstOmk_difference[i_,sp,t] <> 0) 'qKInstOmk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(qKLBR_difference[sp,t] <> 0) 'qKLBR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(qKLB_difference[sp,t] <> 0) 'qKLB_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(qKL_difference[sp,t] <> 0) 'qKL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([r_,t]$(1),
        abort$(qR_difference[r_,t] <> 0) 'qR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,s_,t]$(1),
        abort$(qK_difference[k,s_,t] <> 0) 'qK_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i_,s_,t]$(1),
        abort$(qI_s_difference[i_,s_,t] <> 0) 'qI_s_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(qY_difference[s_,t] <> 0) 'qY_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i_,t]$(1),
        abort$(pOffAfskr_difference[i_,t] <> 0) 'pOffAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(pOffNyInv_difference[t] <> 0) 'pOffNyInv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i_,t]$(1),
        abort$(qOffAfskr_difference[i_,t] <> 0) 'qOffAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qOffNyInv_difference[t] <> 0) 'qOffNyInv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i_,t]$(1),
        abort$(vOffAfskr_difference[i_,t] <> 0) 'vOffAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffLR_difference[t] <> 0) 'vOffLR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i_,s_,t]$(1),
        abort$(vI_s_difference[i_,s_,t] <> 0) 'vI_s_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffDirInv_difference[t] <> 0) 'vOffDirInv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffIndirInv_difference[t] <> 0) 'vOffIndirInv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffNyInv_difference[t] <> 0) 'vOffNyInv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(srvOffL2LR_difference[t] <> 0) 'srvOffL2LR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,t]$(1),
        abort$(rOffK2Y_difference[k,t] <> 0) 'rOffK2Y_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rvOffDirInv2BNP_difference[t] <> 0) 'rvOffDirInv2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vAktie_difference[t] <> 0) 'vAktie_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vAktiex_difference[s_,t] <> 0) 'vAktiex_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vAktieRes_difference[t] <> 0) 'vAktieRes_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vEBT_difference[s_,t] <> 0) 'vEBT_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vEBTx_difference[s_,t] <> 0) 'vEBTx_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vEBITDA_difference[s_,t] <> 0) 'vEBITDA_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vFCF_difference[s_,t] <> 0) 'vFCF_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vVirkRenter_difference[t] <> 0) 'vVirkRenter_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vVirkOmv_difference[t] <> 0) 'vVirkOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vVirkNFE_difference[t] <> 0) 'vVirkNFE_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i_,s_,t]$(1),
        abort$(vKskat_difference[i_,s_,t] <> 0) 'vKskat_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vAfskrFradrag_difference[s_,t] <> 0) 'vAfskrFradrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vDividender_difference[t] <> 0) 'vDividender_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vUdstedelser_difference[t] <> 0) 'vUdstedelser_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vVirkK_difference[s_,t] <> 0) 'vVirkK_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,t]$(1),
        abort$(vVirk_difference[portf_,t] <> 0) 'vVirk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vVirkLaan_difference[s_,t] <> 0) 'vVirkLaan_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vVirkx_difference[t] <> 0) 'vVirkx_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([akt,t]$(1),
        abort$(vPension_difference[akt,t] <> 0) 'vPension_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vtSelskabx_difference[s_,t] <> 0) 'vtSelskabx_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vVirkFinInd_difference[t] <> 0) 'vVirkFinInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(rVirkDisk_difference[sp,t] <> 0) 'rVirkDisk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(rAfkastKrav_difference[s_,t] <> 0) 'rAfkastKrav_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rVirkxAfk_difference[t] <> 0) 'rVirkxAfk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf,t]$(1),
        abort$(rRente_difference[portf,t] <> 0) 'rRente_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf,t]$(1),
        abort$(rOmv_difference[portf,t] <> 0) 'rOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rLaan2K_difference[t] <> 0) 'rLaan2K_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(rIndlAktiePrem_difference[s_,t] <> 0) 'rIndlAktiePrem_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(rFinAccelPrem_difference[sp,t] <> 0) 'rFinAccelPrem_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(vFCFxRef_difference[sp,t] <> 0) 'vFCFxRef_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(EpC_difference[t] <> 0) 'EpC_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(pBolig_difference[t] <> 0) 'pBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(pLand_difference[t] <> 0) 'pLand_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c_,t]$(1),
        abort$(pC_difference[c_,t] <> 0) 'pC_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(EpBolig_difference[t] <> 0) 'EpBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(EpLand_difference[t] <> 0) 'EpLand_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(pBoligUC_difference[a,t] <> 0) 'pBoligUC_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c_,t]$(1),
        abort$(qC_difference[c_,t] <> 0) 'qC_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(qC_a_difference[a,t] <> 0) 'qC_a_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(qCR_difference[a_,t] <> 0) 'qCR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(qCHtM_difference[a_,t] <> 0) 'qCHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(qCRxRef_difference[a,t] <> 0) 'qCRxRef_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(qCHtMxRef_difference[a_,t] <> 0) 'qCHtMxRef_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qBiler_difference[t] <> 0) 'qBiler_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(qBoligHtM_difference[a_,t] <> 0) 'qBoligHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(qBoligHtMxRef_difference[a_,t] <> 0) 'qBoligHtMxRef_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(qBoligR_difference[a_,t] <> 0) 'qBoligR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(qBolig_difference[a_,t] <> 0) 'qBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(qBoligRxRef_difference[a_,t] <> 0) 'qBoligRxRef_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qYBolig_difference[t] <> 0) 'qYBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qIBoligInstOmk_difference[t] <> 0) 'qIBoligInstOmk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qLandSalg_difference[t] <> 0) 'qLandSalg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qKBolig_difference[t] <> 0) 'qKBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qIBolig_difference[t] <> 0) 'qIBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(qNytte_difference[a,t] <> 0) 'qNytte_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(qArvBase_difference[a,t] <> 0) 'qArvBase_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(qFormueBase_difference[a,t] <> 0) 'qFormueBase_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(vC_a_difference[a,t] <> 0) 'vC_a_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhx_difference[a_,t] <> 0) 'vHhx_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vCLejeBolig_difference[a_,t] <> 0) 'vCLejeBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(vArvGivet_difference[a,t] <> 0) 'vArvGivet_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vArv_difference[a_,t] <> 0) 'vArv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtArv_difference[a_,t] <> 0) 'vtArv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtHhx_difference[a_,t] <> 0) 'vtHhx_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vBoligUdgift_difference[a_,t] <> 0) 'vBoligUdgift_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vBoligUdgiftHtM_difference[a_,t] <> 0) 'vBoligUdgiftHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBoligUdgiftArv_difference[t] <> 0) 'vBoligUdgiftArv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhNFErest_difference[a_,t] <> 0) 'vHhNFErest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(jvHhNFErest_difference[a_,t] <> 0) 'jvHhNFErest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(vBoernFraHh_difference[a,t] <> 0) 'vBoernFraHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhTilBoern_difference[a_,t] <> 0) 'vHhTilBoern_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vBolig_difference[a_,t] <> 0) 'vBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vBoligHtM_difference[a_,t] <> 0) 'vBoligHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vKBolig_difference[t] <> 0) 'vKBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vIBolig_difference[t] <> 0) 'vIBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhInvestx_difference[a_,t] <> 0) 'vHhInvestx_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vSelvstKapInd_difference[a_,t] <> 0) 'vSelvstKapInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vArvKorrektion_difference[a_,t] <> 0) 'vArvKorrektion_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(rDisk_difference[a,t] <> 0) 'rDisk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rKLeje2Bolig_difference[t] <> 0) 'rKLeje2Bolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(rvCLejeBolig_difference[a_,t] <> 0) 'rvCLejeBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(fHh_difference[a,t] <> 0) 'fHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uBolig_difference[a,t] <> 0) 'uBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uBoligHtM_difference[a,t] <> 0) 'uBoligHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(fBoligUdgift_difference[a,t] <> 0) 'fBoligUdgift_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(mUBolig_difference[a,t] <> 0) 'mUBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(dqIBoligInstOmk_difference[t] <> 0) 'dqIBoligInstOmk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(mUC_difference[a,t] <> 0) 'mUC_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(EmUC_difference[a,t] <> 0) 'EmUC_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c_,t]$(1),
        abort$(uC_difference[c_,t] <> 0) 'uC_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(fMigration_difference[a_,t] <> 0) 'fMigration_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uBoernFraHh_difference[a,t] <> 0) 'uBoernFraHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(dFormue_difference[a_,t] <> 0) 'dFormue_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(jvHhx_difference[a_,t] <> 0) 'jvHhx_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vPrimSaldo_difference[t] <> 0) 'vPrimSaldo_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vSaldo_difference[t] <> 0) 'vSaldo_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,t]$(1),
        abort$(vOff_difference[portf_,t] <> 0) 'vOff_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffOmv_difference[t] <> 0) 'vOffOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffNetRenter_difference[t] <> 0) 'vOffNetRenter_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vNROffNetRenter_difference[t] <> 0) 'vNROffNetRenter_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffRenteInd_difference[t] <> 0) 'vOffRenteInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffRenteUd_difference[t] <> 0) 'vOffRenteUd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffNetFormue_difference[t] <> 0) 'vOffNetFormue_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffPas_difference[t] <> 0) 'vOffPas_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffY2C_difference[t] <> 0) 'vOffY2C_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vSatsIndeks_difference[t] <> 0) 'vSatsIndeks_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffRenteUd_difference[t] <> 0) 'rOffRenteUd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(nvBNP_difference[t] <> 0) 'nvBNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(nvPrimSaldo_difference[t] <> 0) 'nvPrimSaldo_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(nvtLukning_difference[t] <> 0) 'nvtLukning_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(nvGLukning_difference[t] <> 0) 'nvGLukning_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rHBI_difference[t] <> 0) 'rHBI_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fHBIDisk_difference[t] <> 0) 'fHBIDisk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffRenteInd_difference[t] <> 0) 'rOffRenteInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffAkt2BNP_difference[t] <> 0) 'rOffAkt2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffPrimInd_difference[t] <> 0) 'vOffPrimInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtY_difference[t] <> 0) 'vtY_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtYRest_difference[t] <> 0) 'vtYRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtDirekte_difference[t] <> 0) 'vtDirekte_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtKilde_difference[t] <> 0) 'vtKilde_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtBund_difference[a_,t] <> 0) 'vtBund_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtTop_difference[a_,t] <> 0) 'vtTop_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtKommune_difference[a_,t] <> 0) 'vtKommune_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtEjd_difference[a_,t] <> 0) 'vtEjd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtAktie_difference[a_,t] <> 0) 'vtAktie_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtVirksomhed_difference[a_,t] <> 0) 'vtVirksomhed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtDoedsbo_difference[a_,t] <> 0) 'vtDoedsbo_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtHhAM_difference[a_,t] <> 0) 'vtHhAM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtPersRest_difference[a_,t] <> 0) 'vtPersRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtKapPens_difference[a_,t] <> 0) 'vtKapPens_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtKapPensArv_difference[a_,t] <> 0) 'vtKapPensArv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vtSelskab_difference[s_,t] <> 0) 'vtSelskab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vtSelskabRest_difference[s_,t] <> 0) 'vtSelskabRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtSelskabNord_difference[t] <> 0) 'vtSelskabNord_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtPAL_difference[t] <> 0) 'vtPAL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtMedie_difference[t] <> 0) 'vtMedie_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtHhVaegt_difference[a_,t] <> 0) 'vtHhVaegt_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtAfgEU_difference[t] <> 0) 'vtAfgEU_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtLukning_difference[a_,t] <> 0) 'vtLukning_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtIndirekte_difference[t] <> 0) 'vtIndirekte_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtEU_difference[t] <> 0) 'vtEU_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vBidrag_difference[a_,t] <> 0) 'vBidrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBidragAK_difference[t] <> 0) 'vBidragAK_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBidragEL_difference[t] <> 0) 'vBidragEL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBidragFri_difference[t] <> 0) 'vBidragFri_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBidragObl_difference[t] <> 0) 'vBidragObl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBidragOblTjm_difference[t] <> 0) 'vBidragOblTjm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBidragATP_difference[t] <> 0) 'vBidragATP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBidragOblRest_difference[t] <> 0) 'vBidragOblRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBidragTjmp_difference[t] <> 0) 'vBidragTjmp_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffIndRest_difference[t] <> 0) 'vOffIndRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtKirke_difference[a_,t] <> 0) 'vtKirke_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vJordrente_difference[t] <> 0) 'vJordrente_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vPersInd_difference[a_,t] <> 0) 'vPersInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vPersIndRest_difference[a_,t] <> 0) 'vPersIndRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vSkatteplInd_difference[a_,t] <> 0) 'vSkatteplInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vNetKapIndPos_difference[a_,t] <> 0) 'vNetKapIndPos_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vNetKapInd_difference[a_,t] <> 0) 'vNetKapInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vKapIndPos_difference[a_,t] <> 0) 'vKapIndPos_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vKapIndNeg_difference[a_,t] <> 0) 'vKapIndNeg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vPersFradrag_difference[a_,t] <> 0) 'vPersFradrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vAKFradrag_difference[a_,t] <> 0) 'vAKFradrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vELFradrag_difference[a_,t] <> 0) 'vELFradrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vRestFradrag_difference[a_,t] <> 0) 'vRestFradrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vBeskFradrag_difference[a_,t] <> 0) 'vBeskFradrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vRealiseretAktieOmv_difference[a_,t] <> 0) 'vRealiseretAktieOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vUrealiseretAktieOmv_difference[t] <> 0) 'vUrealiseretAktieOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(ftBund_difference[a_,t] <> 0) 'ftBund_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(rTopSkatInd_difference[a_,t] <> 0) 'rTopSkatInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(ftKommune_difference[a_,t] <> 0) 'ftKommune_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fvtEjd_difference[t] <> 0) 'fvtEjd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fvtAktie_difference[t] <> 0) 'fvtAktie_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fvtDoedsbo_difference[t] <> 0) 'fvtDoedsbo_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(jvKapIndPos_difference[a_,t] <> 0) 'jvKapIndPos_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(jvKapIndneg_difference[a_,t] <> 0) 'jvKapIndneg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(uvPersFradrag_difference[a_,t] <> 0) 'uvPersFradrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffFraUdl2BNP_difference[t] <> 0) 'rOffFraUdl2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffFraHh2BNP_difference[t] <> 0) 'rOffFraHh2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffFraVirk2BNP_difference[t] <> 0) 'rOffFraVirk2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffVirk2BNP_difference[t] <> 0) 'rOffVirk2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(rPersIndRest_a2PersInd_difference[a,t] <> 0) 'rPersIndRest_a2PersInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rPersIndRest_t2PersInd_difference[t] <> 0) 'rPersIndRest_t2PersInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rRestFradragSats2SatsIndeks_difference[t] <> 0) 'rRestFradragSats2SatsIndeks_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(mtVirk_difference[s_,t] <> 0) 'mtVirk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tLukning_difference[t] <> 0) 'tLukning_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(pGxAfskr_difference[t] <> 0) 'pGxAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qGxAfskr_difference[t] <> 0) 'qGxAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([g_,t]$(1),
        abort$(qG_difference[g_,t] <> 0) 'qG_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vGxAfskr_difference[t] <> 0) 'vGxAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffPrimUd_difference[t] <> 0) 'vOffPrimUd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffInv_difference[t] <> 0) 'vOffInv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffSub_difference[t] <> 0) 'vOffSub_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vSubY_difference[t] <> 0) 'vSubY_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vSubYRes_difference[t] <> 0) 'vSubYRes_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffUdRest_difference[t] <> 0) 'vOffUdRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffTilHh_difference[t] <> 0) 'vOffTilHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([ovf_,t]$(1),
        abort$(vOvf_difference[ovf_,t] <> 0) 'vOvf_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(vHhOvf_difference[a,t] <> 0) 'vHhOvf_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vOvfSkatPl_difference[a_,t] <> 0) 'vOvfSkatPl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([ovf,t]$(1),
        abort$(vOvfSats_difference[ovf,t] <> 0) 'vOvfSats_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vOvfUbeskat_difference[a_,t] <> 0) 'vOvfUbeskat_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vGLukning_difference[t] <> 0) 'vGLukning_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uvGxAfskr_difference[t] <> 0) 'uvGxAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([ovf,t]$(1),
        abort$(nOvf_difference[ovf,t] <> 0) 'nOvf_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fHhOvf_difference[t] <> 0) 'fHhOvf_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([ovf,t]$(1),
        abort$(dnOvf2dBesk_difference[ovf,t] <> 0) 'dnOvf2dBesk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([ovf,t]$(1),
        abort$(dnOvf2dPop_difference[ovf,t] <> 0) 'dnOvf2dPop_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([ovf_,t]$(1),
        abort$(dvOvf2dBesk_difference[ovf_,t] <> 0) 'dvOvf2dBesk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([ovf_,t]$(1),
        abort$(dvOvf2dPop_difference[ovf_,t] <> 0) 'dvOvf2dPop_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffLandKoeb2BNP_difference[t] <> 0) 'rOffLandKoeb2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffTilUdl2BNP_difference[t] <> 0) 'rOffTilUdl2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffTilVirk2BNP_difference[t] <> 0) 'rOffTilVirk2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffTilHhKap2BNP_difference[t] <> 0) 'rOffTilHhKap2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffTilHhOev2BNP_difference[t] <> 0) 'rOffTilHhOev2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rSubEU2BNP_difference[t] <> 0) 'rSubEU2BNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s_,t]$(1),
        abort$(vtMoms_difference[d_,s_,t] <> 0) 'vtMoms_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s_,t]$(1),
        abort$(vtNetAfg_difference[d_,s_,t] <> 0) 'vtNetAfg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s_,t]$(1),
        abort$(vtAfg_difference[d_,s_,t] <> 0) 'vtAfg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,t]$(1),
        abort$(vtReg_difference[d_,t] <> 0) 'vtReg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vPunktSub_difference[t] <> 0) 'vPunktSub_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s_,t]$(1),
        abort$(vtTold_difference[d_,s_,t] <> 0) 'vtTold_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vtGrund_difference[s_,t] <> 0) 'vtGrund_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vtVirkVaegt_difference[s_,t] <> 0) 'vtVirkVaegt_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vtVirkAM_difference[s_,t] <> 0) 'vtVirkAM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vtAUB_difference[s_,t] <> 0) 'vtAUB_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vtSubLoen_difference[s_,t] <> 0) 'vtSubLoen_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vtNetLoenAfg_difference[s_,t] <> 0) 'vtNetLoenAfg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vtNetYAfg_difference[s_,t] <> 0) 'vtNetYAfg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vtNetYAfgRest_difference[s_,t] <> 0) 'vtNetYAfgRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tNetAfg_y_difference[d_,s,t] <> 0) 'tNetAfg_y_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tNetAfg_m_difference[d_,s,t] <> 0) 'tNetAfg_m_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(tL_difference[s_,t] <> 0) 'tL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tIOy_difference[d_,s,t] <> 0) 'tIOy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tIOm_difference[d_,s,t] <> 0) 'tIOm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vVirkBVT5aarSnit_difference[t] <> 0) 'vVirkBVT5aarSnit_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBVT2hL_difference[t] <> 0) 'vBVT2hL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBVT2hLsnit_difference[t] <> 0) 'vBVT2hLsnit_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qBVT2hL_difference[t] <> 0) 'qBVT2hL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qBVT2hLsnit_difference[t] <> 0) 'qBVT2hLsnit_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBFI_difference[t] <> 0) 'vBFI_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,t]$(1),
        abort$(vUdl_difference[portf_,t] <> 0) 'vUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vUdlRenter_difference[t] <> 0) 'vUdlRenter_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vUdlOmv_difference[t] <> 0) 'vUdlOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vUdlNFE_difference[t] <> 0) 'vUdlNFE_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rArbProd_difference[t] <> 0) 'rArbProd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rBVTGab_difference[t] <> 0) 'rBVTGab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rBeskGab_difference[t] <> 0) 'rBeskGab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(pCInflSnit_difference[t] <> 0) 'pCInflSnit_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(pBNP_difference[t] <> 0) 'pBNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(pBVT_difference[s_,t] <> 0) 'pBVT_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(pIO_difference[d_,s,t] <> 0) 'pIO_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(pIOy_difference[d_,s,t] <> 0) 'pIOy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(pIOm_difference[d_,s,t] <> 0) 'pIOm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x_,t]$(1),
        abort$(pX_difference[x_,t] <> 0) 'pX_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(pXm_difference[x,t] <> 0) 'pXm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(pXy_difference[x,t] <> 0) 'pXy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([r_,t]$(1),
        abort$(pR_difference[r_,t] <> 0) 'pR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c_,t]$(1),
        abort$(pCDK_difference[c_,t] <> 0) 'pCDK_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c,t]$(1),
        abort$(pCTurist_difference[c,t] <> 0) 'pCTurist_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([g_,t]$(1),
        abort$(pG_difference[g_,t] <> 0) 'pG_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i_,t]$(1),
        abort$(pI_difference[i_,t] <> 0) 'pI_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i_,s_,t]$(1),
        abort$(pI_s_difference[i_,s_,t] <> 0) 'pI_s_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vY_difference[s_,t] <> 0) 'vY_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vM_difference[s_,t] <> 0) 'vM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vBNP_difference[t] <> 0) 'vBNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(vBVT_difference[s_,t] <> 0) 'vBVT_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s_,t]$(1),
        abort$(vIO_difference[d_,s_,t] <> 0) 'vIO_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s_,t]$(1),
        abort$(vIOy_difference[d_,s_,t] <> 0) 'vIOy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s_,t]$(1),
        abort$(vIOm_difference[d_,s_,t] <> 0) 'vIOm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x_,t]$(1),
        abort$(vX_difference[x_,t] <> 0) 'vX_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(vXy_difference[x,t] <> 0) 'vXy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([r_,t]$(1),
        abort$(vR_difference[r_,t] <> 0) 'vR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c_,t]$(1),
        abort$(vC_difference[c_,t] <> 0) 'vC_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c,t]$(1),
        abort$(vCTurist_difference[c,t] <> 0) 'vCTurist_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([g_,t]$(1),
        abort$(vG_difference[g_,t] <> 0) 'vG_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i_,t]$(1),
        abort$(vI_difference[i_,t] <> 0) 'vI_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(qM_difference[s_,t] <> 0) 'qM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qBNP_difference[t] <> 0) 'qBNP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(qBVT_difference[s_,t] <> 0) 'qBVT_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s_,t]$(1),
        abort$(qIO_difference[d_,s_,t] <> 0) 'qIO_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s_,t]$(1),
        abort$(qIOy_difference[d_,s_,t] <> 0) 'qIOy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s_,t]$(1),
        abort$(qIOm_difference[d_,s_,t] <> 0) 'qIOm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c,t]$(1),
        abort$(qCDK_difference[c,t] <> 0) 'qCDK_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i_,t]$(1),
        abort$(qI_difference[i_,t] <> 0) 'qI_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s,t]$(1),
        abort$(juIOm_difference[s,t] <> 0) 'juIOm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s,t]$(1),
        abort$(juIOXy_difference[s,t] <> 0) 'juIOXy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(uIO_difference[d_,s,t] <> 0) 'uIO_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([dux,s,t]$(1),
        abort$(uIOy_difference[dux,s,t] <> 0) 'uIOy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([dux,s,t]$(1),
        abort$(uIOm_difference[dux,s,t] <> 0) 'uIOm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,s,t]$(1),
        abort$(uIOXy_difference[x,s,t] <> 0) 'uIOXy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,s,t]$(1),
        abort$(uIOXm_difference[x,s,t] <> 0) 'uIOXm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i,t]$(1),
        abort$(fpI_s_difference[i,t] <> 0) 'fpI_s_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([dux,s_,t]$(1),
        abort$(uIO0_difference[dux,s_,t] <> 0) 'uIO0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(rpIOm2pIOy_difference[d_,s,t] <> 0) 'rpIOm2pIOy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([dux,s,t]$(1),
        abort$(fqMKortsigt_difference[dux,s,t] <> 0) 'fqMKortsigt_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(pBoligRigid_difference[a,t] <> 0) 'pBoligRigid_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vtHh_difference[a_,t] <> 0) 'vtHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vDispInd_difference[t] <> 0) 'vDispInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhInd_difference[a_,t] <> 0) 'vHhInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhxAfk_difference[a_,t] <> 0) 'vHhxAfk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhFinAkt_difference[a_,t] <> 0) 'vHhFinAkt_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,a_,t]$(1),
        abort$(vHh_difference[portf_,a_,t] <> 0) 'vHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,t]$(1),
        abort$(vHhRenter_difference[portf_,t] <> 0) 'vHhRenter_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,t]$(1),
        abort$(vHhOmv_difference[portf_,t] <> 0) 'vHhOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,a_,t]$(1),
        abort$(vHhPensAfk_difference[portf_,a_,t] <> 0) 'vHhPensAfk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vHhNFE_difference[t] <> 0) 'vHhNFE_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,a_,t]$(1),
        abort$(vPensIndb_difference[portf_,a_,t] <> 0) 'vPensIndb_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,a_,t]$(1),
        abort$(vPensUdb_difference[portf_,a_,t] <> 0) 'vPensUdb_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,a_,t]$(1),
        abort$(vPensArv_difference[portf_,a_,t] <> 0) 'vPensArv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vNetIndPensUdb_difference[t] <> 0) 'vNetIndPensUdb_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vNetKolPensUdb_difference[t] <> 0) 'vNetKolPensUdb_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vKolPensRenter_difference[t] <> 0) 'vKolPensRenter_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vLejeAfEjerBolig_difference[t] <> 0) 'vLejeAfEjerBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vHhFraVirkKap_difference[t] <> 0) 'vHhFraVirkKap_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vHhFraVirkOev_difference[t] <> 0) 'vHhFraVirkOev_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vHhFraVirk_difference[t] <> 0) 'vHhFraVirk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vHhTilUdl_difference[t] <> 0) 'vHhTilUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(mrHhxAfk_difference[t] <> 0) 'mrHhxAfk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(mrRealKredAfk_difference[t] <> 0) 'mrRealKredAfk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(rRealKred2Bolig_difference[a_,t] <> 0) 'rRealKred2Bolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([pens,a_,t]$(1),
        abort$(rPensIndb_difference[pens,a_,t] <> 0) 'rPensIndb_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([pens,a_,t]$(1),
        abort$(rPensUdb_difference[pens,a_,t] <> 0) 'rPensUdb_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rBoligOmkRest_difference[t] <> 0) 'rBoligOmkRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf,t]$(1),
        abort$(rHhAfk_difference[portf,t] <> 0) 'rHhAfk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(jvHhxAfk_difference[a_,t] <> 0) 'jvHhxAfk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,a_,t]$(1),
        abort$(jvHhPensAfk_difference[portf_,a_,t] <> 0) 'jvHhPensAfk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvHh_difference[t] <> 0) 'jvHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(mtAktie_difference[t] <> 0) 'mtAktie_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(pKspBy_difference[t] <> 0) 'pKspBy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(sqBVT_difference[t] <> 0) 'sqBVT_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(sdqLdnL_difference[s_,t] <> 0) 'sdqLdnL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(sdOpslagOmk2dnLLag_difference[t] <> 0) 'sdOpslagOmk2dnLLag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(sqL_difference[s_,t] <> 0) 'sqL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qKspBy_difference[t] <> 0) 'qKspBy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qLspBy_difference[t] <> 0) 'qLspBy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(sqLspBy_difference[t] <> 0) 'sqLspBy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uY_difference[t] <> 0) 'uY_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(shL_difference[t] <> 0) 'shL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(srL2nL_difference[t] <> 0) 'srL2nL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(sfW_difference[s_,t] <> 0) 'sfW_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(sdOpslagOmk2dnL_difference[t] <> 0) 'sdOpslagOmk2dnL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(sfProdHh_difference[t] <> 0) 'sfProdHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(snSoegBaseHh_difference[a_,t] <> 0) 'snSoegBaseHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(snLHh_difference[a_,t] <> 0) 'snLHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(snSoegHh_difference[a_,t] <> 0) 'snSoegHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(sfDeltag_difference[a,t] <> 0) 'sfDeltag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(srJobFinding_difference[t] <> 0) 'srJobFinding_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(srMatch_difference[t] <> 0) 'srMatch_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(srOpslag2soeg_difference[t] <> 0) 'srOpslag2soeg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(shLHh_difference[a_,t] <> 0) 'shLHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(srOpslagOmk_difference[t] <> 0) 'srOpslagOmk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(snOpslag_difference[t] <> 0) 'snOpslag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(srSeparation_difference[t] <> 0) 'srSeparation_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(snLUdl_difference[t] <> 0) 'snLUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(shLUdl_difference[t] <> 0) 'shLUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(snL_difference[s_,t] <> 0) 'snL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(snSoegUdl_difference[t] <> 0) 'snSoegUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([soc_,t]$(1),
        abort$(snSoc_difference[soc_,t] <> 0) 'snSoc_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([soc_,t]$(1),
        abort$(dSoc2dPop_difference[soc_,t] <> 0) 'dSoc2dPop_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(srLedig_difference[t] <> 0) 'srLedig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(pUdl_difference[t] <> 0) 'pUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(pOlie_difference[t] <> 0) 'pOlie_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(pLxUdn_difference[sp,t] <> 0) 'pLxUdn_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(uR_difference[sp,t] <> 0) 'uR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(uKLB_difference[sp,t] <> 0) 'uKLB_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(uL_difference[sp,t] <> 0) 'uL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(uK_difference[k,sp,t] <> 0) 'uK_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(uKL_difference[sp,t] <> 0) 'uKL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uh_difference[a,t] <> 0) 'uh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vVirkIndRest_difference[t] <> 0) 'vVirkIndRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffAkt_difference[t] <> 0) 'vOffAkt_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffFonde_difference[t] <> 0) 'vOffFonde_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtPALGab_difference[t] <> 0) 'vtPALGab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtSelskabNordGab_difference[t] <> 0) 'vtSelskabNordGab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtSelskabRestGab_difference[t] <> 0) 'vtSelskabRestGab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtRegGab_difference[t] <> 0) 'vtRegGab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffNetRenterGab_difference[t] <> 0) 'vOffNetRenterGab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtRestGab_difference[t] <> 0) 'vtRestGab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vEngangsForholdGab_difference[t] <> 0) 'vEngangsForholdGab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvOffPrimInd_difference[t] <> 0) 'jvOffPrimInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtKildeRest_difference[t] <> 0) 'vtKildeRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vtDirekteRest_difference[t] <> 0) 'vtDirekteRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffFraUdl_difference[t] <> 0) 'vOffFraUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffFraHh_difference[t] <> 0) 'vOffFraHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffFraVirk_difference[t] <> 0) 'vOffFraVirk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffVirk_difference[t] <> 0) 'vOffVirk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vPersIndRest_a_difference[a_,t] <> 0) 'vPersIndRest_a_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vPersIndRest_t_difference[t] <> 0) 'vPersIndRest_t_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(vHhOvfRest_difference[a,t] <> 0) 'vHhOvfRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffLandKoeb_difference[t] <> 0) 'vOffLandKoeb_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffTilUdl_difference[t] <> 0) 'vOffTilUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffTilVirk_difference[t] <> 0) 'vOffTilVirk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffTilHhKap_difference[t] <> 0) 'vOffTilHhKap_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffTilHhOev_difference[t] <> 0) 'vOffTilHhOev_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vSubEU_difference[t] <> 0) 'vSubEU_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vhWVirk_difference[t] <> 0) 'vhWVirk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vOffLoen_difference[t] <> 0) 'vOffLoen_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhFormueR_difference[a_,t] <> 0) 'vHhFormueR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhFormueHtM_difference[a_,t] <> 0) 'vHhFormueHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhxR_difference[a_,t] <> 0) 'vHhxR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhPensR_difference[a_,t] <> 0) 'vHhPensR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhPensHtM_difference[a_,t] <> 0) 'vHhPensHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhPens_difference[a_,t] <> 0) 'vHhPens_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vFrivaerdiR_difference[a_,t] <> 0) 'vFrivaerdiR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vFrivaerdiHtM_difference[a_,t] <> 0) 'vFrivaerdiHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhIndHtM_difference[a_,t] <> 0) 'vHhIndHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhIndR_difference[a_,t] <> 0) 'vHhIndR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhNetFinR_difference[a_,t] <> 0) 'vHhNetFinR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhNetFinHtM_difference[a_,t] <> 0) 'vHhNetFinHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhNetFin_difference[a_,t] <> 0) 'vHhNetFin_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhIndMvHtM_difference[a_,t] <> 0) 'vHhIndMvHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhIndMvR_difference[a_,t] <> 0) 'vHhIndMvR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhIndMv_difference[a_,t] <> 0) 'vHhIndMv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vCR_NR_difference[a_,t] <> 0) 'vCR_NR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vCHtM_NR_difference[a_,t] <> 0) 'vCHtM_NR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vC_NR_difference[a_,t] <> 0) 'vC_NR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vHhFormue_difference[a_,t] <> 0) 'vHhFormue_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vBoligUdgiftR_difference[a_,t] <> 0) 'vBoligUdgiftR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(vBoligR_difference[a_,t] <> 0) 'vBoligR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(qXMarked_difference[x,t] <> 0) 'qXMarked_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qProd_difference[t] <> 0) 'qProd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qLand_difference[t] <> 0) 'qLand_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qKLejeBolig_difference[t] <> 0) 'qKLejeBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(qGrus_difference[t] <> 0) 'qGrus_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s,t]$(1),
        abort$(qLxUdn_difference[s,t] <> 0) 'qLxUdn_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(qCR_NR_difference[a_,t] <> 0) 'qCR_NR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(qCHtM_NR_difference[a_,t] <> 0) 'qCHtM_NR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(qC_NR_difference[a_,t] <> 0) 'qC_NR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(hVirk_difference[t] <> 0) 'hVirk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(hOff_difference[t] <> 0) 'hOff_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tPensKor_difference[t] <> 0) 'tPensKor_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(nSoegBase_difference[t] <> 0) 'nSoegBase_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rtTopRenter_difference[t] <> 0) 'rtTopRenter_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(mrNet2KapIndPos_difference[t] <> 0) 'mrNet2KapIndPos_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([pens,t]$(1),
        abort$(rKolPens_difference[pens,t] <> 0) 'rKolPens_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rHhFraVirkKap_difference[t] <> 0) 'rHhFraVirkKap_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rHhFraVirkOev_difference[t] <> 0) 'rHhFraVirkOev_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rHhTilUdl_difference[t] <> 0) 'rHhTilUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([akt,a,t]$(1),
        abort$(cHh_a_difference[akt,a,t] <> 0) 'cHh_a_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([akt,t]$(1),
        abort$(cHh_t_difference[akt,t] <> 0) 'cHh_t_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,t]$(1),
        abort$(dvHh2dvHhx_difference[portf_,t] <> 0) 'dvHh2dvHhx_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,t]$(1),
        abort$(dvHh2dvBolig_difference[portf_,t] <> 0) 'dvHh2dvBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf_,t]$(1),
        abort$(dvHh2dvPensIndb_difference[portf_,t] <> 0) 'dvHh2dvPensIndb_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rBoligOmkRestRes_difference[t] <> 0) 'rBoligOmkRestRes_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rRealKredTraeg_difference <> 0) 'rRealKredTraeg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(rRealKred2Bolig_a_difference[a,t] <> 0) 'rRealKred2Bolig_a_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rRealKred2Bolig_t_difference[t] <> 0) 'rRealKred2Bolig_t_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(cmtAktie_difference[t] <> 0) 'cmtAktie_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(ErAktieAfk_static_difference[t] <> 0) 'ErAktieAfk_static_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([pens,a_,t]$(1),
        abort$(rPensArv_difference[pens,a_,t] <> 0) 'rPensArv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvHhOmv_difference[t] <> 0) 'jvHhOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvHhRenter_difference[t] <> 0) 'jvHhRenter_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvNetKolPensUdb_difference[t] <> 0) 'jvNetKolPensUdb_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvKolPensRenter_difference[t] <> 0) 'jvKolPensRenter_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jmrHhAfk_difference[t] <> 0) 'jmrHhAfk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf,t]$(1),
        abort$(jrHhRente_difference[portf,t] <> 0) 'jrHhRente_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([portf,t]$(1),
        abort$(jrHhOmv_difference[portf,t] <> 0) 'jrHhOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rUdlRealkred_difference[t] <> 0) 'rUdlRealkred_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvBFI_difference[t] <> 0) 'jvBFI_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fDemoTraek_difference[t] <> 0) 'fDemoTraek_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uHhOvfPop_difference[a,t] <> 0) 'uHhOvfPop_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uOvfUbeskat_difference[a,t] <> 0) 'uOvfUbeskat_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([ovf,t]$(1),
        abort$(jvOvf_difference[ovf,t] <> 0) 'jvOvf_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([ovf,t]$(1),
        abort$(uvOvfSats_difference[ovf,t] <> 0) 'uvOvfSats_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([g_,t]$(1),
        abort$(eG_difference[g_] <> 0) 'eG_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rGLukning_difference[t] <> 0) 'rGLukning_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([g_,t]$(1),
        abort$(uG_difference[g_,t] <> 0) 'uG_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rvYsubRest2BVT_difference[t] <> 0) 'rvYsubRest2BVT_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tEjd_difference[t] <> 0) 'tEjd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tPersRestxKapPens_difference[t] <> 0) 'tPersRestxKapPens_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tSelskabNord_difference[t] <> 0) 'tSelskabNord_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tVirksomhed_difference[t] <> 0) 'tVirksomhed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tDoedsbo_difference[t] <> 0) 'tDoedsbo_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tAktie_difference[t] <> 0) 'tAktie_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tJordRente_difference[t] <> 0) 'tJordRente_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tHhVaegt_difference[t] <> 0) 'tHhVaegt_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tbeskfradrag_difference[t] <> 0) 'tbeskfradrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(ftAMBidrag_difference[t] <> 0) 'ftAMBidrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(ftKapPens_difference[t] <> 0) 'ftKapPens_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(ftSelskab_difference[t] <> 0) 'ftSelskab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(ftPAL_difference[t] <> 0) 'ftPAL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(ftKirke_difference[t] <> 0) 'ftKirke_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jfvSkatteplInd_difference[t] <> 0) 'jfvSkatteplInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(rNet2KapIndPos_difference[a_,t] <> 0) 'rNet2KapIndPos_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rtKirke_difference[t] <> 0) 'rtKirke_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(vRestFradragSats_difference[t] <> 0) 'vRestFradragSats_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rAKFradrag2Bidrag_difference[t] <> 0) 'rAKFradrag2Bidrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rELFradrag2Bidrag_difference[t] <> 0) 'rELFradrag2Bidrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uBidragOblTjm_difference[t] <> 0) 'uBidragOblTjm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uBidragATP_difference[t] <> 0) 'uBidragATP_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uBidragOblRest_difference[t] <> 0) 'uBidragOblRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uBidragEL_difference[t] <> 0) 'uBidragEL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uBidragFri_difference[t] <> 0) 'uBidragFri_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uBidragAK_difference[t] <> 0) 'uBidragAK_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uBidragTjmp_difference[t] <> 0) 'uBidragTjmp_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(utMedie_difference[t] <> 0) 'utMedie_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rRealiseringAktieOmv_difference[t] <> 0) 'rRealiseringAktieOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rvtAfgEU2vtAfg_difference[t] <> 0) 'rvtAfgEU2vtAfg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tBund_difference[t] <> 0) 'tBund_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tTop_difference[t] <> 0) 'tTop_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tKommune_difference[t] <> 0) 'tKommune_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tAMbidrag_difference[t] <> 0) 'tAMbidrag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tKapPens_difference[t] <> 0) 'tKapPens_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tSelskab_difference[t] <> 0) 'tSelskab_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tPAL_difference[t] <> 0) 'tPAL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tKirke_difference[t] <> 0) 'tKirke_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffRealKred2Pas_difference[t] <> 0) 'rOffRealKred2Pas_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([akt,t]$(1),
        abort$(rOffAkt_difference[akt,t] <> 0) 'rOffAkt_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvOffOmv_difference[t] <> 0) 'jvOffOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jrOffRenteInd_difference[t] <> 0) 'jrOffRenteInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jrOffRenteUd_difference[t] <> 0) 'jrOffRenteUd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jfSatsIndeks_difference[t] <> 0) 'jfSatsIndeks_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffY2C_difference[t] <> 0) 'rOffY2C_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rDisk_t_difference[t] <> 0) 'rDisk_t_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(rDisk_a_difference[a,t] <> 0) 'rDisk_a_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uBolig_a_difference[a,t] <> 0) 'uBolig_a_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uBolig_t_difference[t] <> 0) 'uBolig_t_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uBoligHtM_a_difference[a,t] <> 0) 'uBoligHtM_a_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uBoligHtM_t_difference[t] <> 0) 'uBoligHtM_t_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uBoligHtM_match_difference <> 0) 'uBoligHtM_match_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uBoernFraHh_t_difference[t] <> 0) 'uBoernFraHh_t_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uBoernFraHh_a_difference[a,t] <> 0) 'uBoernFraHh_a_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(eHh_difference <> 0) 'eHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rRef_difference <> 0) 'rRef_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rRef_2016_difference <> 0) 'rRef_2016_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rRefHtM_difference <> 0) 'rRefHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rRefBolig_difference <> 0) 'rRefBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rHtM_difference <> 0) 'rHtM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(eBolig_difference <> 0) 'eBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uIBoligInstOmk_difference <> 0) 'uIBoligInstOmk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fIBoligInstOmk_difference[t] <> 0) 'fIBoligInstOmk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fBoligGevinst_difference <> 0) 'fBoligGevinst_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(EpLandInfl_difference[t] <> 0) 'EpLandInfl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(EpBoligInfl_difference[t] <> 0) 'EpBoligInfl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c_,t]$(1),
        abort$(eC_difference[c_] <> 0) 'eC_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uLand_difference[t] <> 0) 'uLand_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uIBolig_difference[t] <> 0) 'uIBolig_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(rArv_difference[a,t] <> 0) 'rArv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,aa,t]$(1),
        abort$(rArv_a_difference[a,aa] <> 0) 'rArv_a_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uFormue_difference[a,t] <> 0) 'uFormue_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(cFormue_difference[a,t] <> 0) 'cFormue_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rMaxRealkred_difference[t] <> 0) 'rMaxRealkred_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uArv_difference[a,t] <> 0) 'uArv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(cArv_difference[a,t] <> 0) 'cArv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tArv_difference[t] <> 0) 'tArv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rSelvstKapInd_difference[t] <> 0) 'rSelvstKapInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(eNytte_difference <> 0) 'eNytte_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(rArvKorrektion_difference[a] <> 0) 'rArvKorrektion_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c_,t]$(1),
        abort$(uC0_difference[c_,t] <> 0) 'uC0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([cNest,t]$(1),
        abort$(fuCnest_difference[cNest,t] <> 0) 'fuCnest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rBilAfskr_difference[t] <> 0) 'rBilAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rHhInvestx_difference[t] <> 0) 'rHhInvestx_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(nArvinger_difference[a,t] <> 0) 'nArvinger_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(rBoern_difference[a,t] <> 0) 'rBoern_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(rOverlev_difference[a_,t] <> 0) 'rOverlev_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(ErOverlev_difference[a,t] <> 0) 'ErOverlev_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rBoligPrem_difference[t] <> 0) 'rBoligPrem_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jfEpC_difference[t] <> 0) 'jfEpC_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(srLUdn_difference[s_,t] <> 0) 'srLUdn_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(jshLHh_difference[a,t] <> 0) 'jshLHh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(jsfDeltag_difference[a,t] <> 0) 'jsfDeltag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(juY_difference[t] <> 0) 'juY_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([soc_,t]$(1),
        abort$(dSoc2dBesk_difference[soc_,t] <> 0) 'dSoc2dBesk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(fProdHh_a_difference[a,t] <> 0) 'fProdHh_a_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fProdHh_t_difference[t] <> 0) 'fProdHh_t_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(fDiskpL_difference[sp,t] <> 0) 'fDiskpL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(fDiskDeltag_difference[a,t] <> 0) 'fDiskDeltag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a_,t]$(1),
        abort$(mrKomp_difference[a_,t] <> 0) 'mrKomp_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(eDeltag_difference <> 0) 'eDeltag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(emrKomp_difference <> 0) 'emrKomp_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(eMatching_difference <> 0) 'eMatching_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(nSoegBaseUdl_difference[t] <> 0) 'nSoegBaseUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(uDeltag_difference[a,t] <> 0) 'uDeltag_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(eh_difference <> 0) 'eh_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fhLUdl_difference[t] <> 0) 'fhLUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fProdUdl_difference[t] <> 0) 'fProdUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(fW0_difference[s_,t] <> 0) 'fW0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uOpslagOmk_difference <> 0) 'uOpslagOmk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uMatchOmk_difference <> 0) 'uMatchOmk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uMatchOmkSqr_difference <> 0) 'uMatchOmkSqr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rLoenTraeghed_difference <> 0) 'rLoenTraeghed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rLoenIndeksering_difference <> 0) 'rLoenIndeksering_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([a,t]$(1),
        abort$(cmtInd_difference[a,t] <> 0) 'cmtInd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rfZhTraeghed_difference <> 0) 'rfZhTraeghed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rAMDisk_difference[t] <> 0) 'rAMDisk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rFFLoenAlternativ_difference <> 0) 'rFFLoenAlternativ_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(cMatchOmkSqr_difference[s_,t] <> 0) 'cMatchOmkSqr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvhW_difference[t] <> 0) 'jvhW_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rLoenNash_difference[t] <> 0) 'rLoenNash_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(rSelvst_difference[s_,t] <> 0) 'rSelvst_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([soc_,t]$(1),
        abort$(jnSoc_difference[soc_,t] <> 0) 'jnSoc_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(upYTraeghed_difference[sp] <> 0) 'upYTraeghed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(eY_difference[sp,t] <> 0) 'eY_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s,t]$(1),
        abort$(epM2pOlie_difference[s] <> 0) 'epM2pOlie_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(epXUdl2pOlie_difference[x] <> 0) 'epXUdl2pOlie_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(upXSoe_difference[t] <> 0) 'upXSoe_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(upXUdl_difference[x,t] <> 0) 'upXUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s,t]$(1),
        abort$(upM_difference[s,t] <> 0) 'upM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(upYUdv_difference[t] <> 0) 'upYUdv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jpY_bol_difference[t] <> 0) 'jpY_bol_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,t]$(1),
        abort$(rSkatAfskr_difference[k,t] <> 0) 'rSkatAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rAktieRes2BVT_difference[t] <> 0) 'rAktieRes2BVT_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rvOblLaan2K_difference[t] <> 0) 'rvOblLaan2K_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([akt,t]$(1),
        abort$(rvVirkx_difference[akt,t] <> 0) 'rvVirkx_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([akt,t]$(1),
        abort$(rPensAkt_difference[akt,t] <> 0) 'rPensAkt_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(rFinAccel_difference[sp] <> 0) 'rFinAccel_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(cFinAccel_difference[sp,t] <> 0) 'cFinAccel_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(uFinAccel_difference[sp,t] <> 0) 'uFinAccel_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rFinAccelTraeghed_difference <> 0) 'rFinAccelTraeghed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rvRealKred2K_difference[t] <> 0) 'rvRealKred2K_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(crRenteBank_difference[t] <> 0) 'crRenteBank_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rUdlAktiePrem_difference[t] <> 0) 'rUdlAktiePrem_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(rVirkDiskPrem_difference[sp,t] <> 0) 'rVirkDiskPrem_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvVirkRenter_difference[t] <> 0) 'jvVirkRenter_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvVirkOmv_difference[t] <> 0) 'jvVirkOmv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jrRente_pension_difference[t] <> 0) 'jrRente_pension_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jrOmv_pension_difference[t] <> 0) 'jrOmv_pension_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jrOmv_UdlAktier_difference[t] <> 0) 'jrOmv_UdlAktier_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jvVirkx_difference[t] <> 0) 'jvVirkx_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(uKInstOmk_difference[k,sp] <> 0) 'uKInstOmk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(fKInstOmk_difference[k,sp,t] <> 0) 'fKInstOmk_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,t]$(1),
        abort$(eKUdn_difference[k] <> 0) 'eKUdn_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,t]$(1),
        abort$(eKUdnPersistens_difference[k] <> 0) 'eKUdnPersistens_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(eLUdn_difference <> 0) 'eLUdn_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(eLUdnPersistens_difference <> 0) 'eLUdnPersistens_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(eKLBR_difference[sp] <> 0) 'eKLBR_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(eKLB_difference[sp] <> 0) 'eKLB_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(eKL_difference[sp] <> 0) 'eKL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(rAfskr_static_difference[k,sp,t] <> 0) 'rAfskr_static_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(gpI_s_static_difference[k,sp,t] <> 0) 'gpI_s_static_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,s_,t]$(1),
        abort$(rAfskr_difference[k,s_,t] <> 0) 'rAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(rIL2y_difference[s_,t] <> 0) 'rIL2y_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s_,t]$(1),
        abort$(fProd_difference[s_,t] <> 0) 'fProd_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([sp,t]$(1),
        abort$(jrLUdn_difference[sp,t] <> 0) 'jrLUdn_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(jrKUdn_difference[k,sp,t] <> 0) 'jrKUdn_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jfqI_s_iL_difference[t] <> 0) 'jfqI_s_iL_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,sp,t]$(1),
        abort$(jpK_difference[k,sp,t] <> 0) 'jpK_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffIB2NyInv_difference[t] <> 0) 'rOffIB2NyInv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rOffLTraeghed_difference <> 0) 'rOffLTraeghed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rvOffIndirInv2vBVT_difference[t] <> 0) 'rvOffIndirInv2vBVT_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,t]$(1),
        abort$(jrpOffAfskr_difference[k,t] <> 0) 'jrpOffAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,t]$(1),
        abort$(jrqOffAfskr_difference[k,t] <> 0) 'jrqOffAfskr_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(jrpOffNyInv_difference[t] <> 0) 'jrpOffNyInv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(uXTur_difference[t] <> 0) 'uXTur_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(uXm_difference[x,t] <> 0) 'uXm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(fuCturisme_difference[t] <> 0) 'fuCturisme_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c,t]$(1),
        abort$(uCturisme0_difference[c,t] <> 0) 'uCturisme0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rXTraeghed_difference <> 0) 'rXTraeghed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(upXyTraeghed_difference <> 0) 'upXyTraeghed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(rXSkalaTraeghed_difference <> 0) 'rXSkalaTraeghed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(eXUdl_difference[x] <> 0) 'eXUdl_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(cpXyTraeghed_difference[x,t] <> 0) 'cpXyTraeghed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tYsub_y0_difference[d_,s,t] <> 0) 'tYsub_y0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tYsub_m0_difference[d_,s,t] <> 0) 'tYsub_m0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tTold_difference[d_,s,t] <> 0) 'tTold_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tMoms_y_difference[d_,s,t] <> 0) 'tMoms_y_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tMoms_m_difference[d_,s,t] <> 0) 'tMoms_m_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([k,s_,t]$(1),
        abort$(tK_difference[k,s_,t] <> 0) 'tK_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s,t]$(1),
        abort$(tLoensum_difference[s,t] <> 0) 'tLoensum_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s,t]$(1),
        abort$(tVirkAM_difference[s,t] <> 0) 'tVirkAM_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s,t]$(1),
        abort$(tLoenSub_difference[s,t] <> 0) 'tLoenSub_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([t]$(1),
        abort$(tYsub0_difference[t] <> 0) 'tYsub0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,t]$(1),
        abort$(tReg_difference[d_,t] <> 0) 'tReg_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([s,t]$(1),
        abort$(tNetYRest_difference[s,t] <> 0) 'tNetYRest_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tAfg_y_difference[d_,s,t] <> 0) 'tAfg_y_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tAfg_m_difference[d_,s,t] <> 0) 'tAfg_m_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tYsub_y_difference[d_,s,t] <> 0) 'tYsub_y_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(tYsub_m_difference[d_,s,t] <> 0) 'tYsub_m_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(eIO_difference[d_,s] <> 0) 'eIO_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,t]$(1),
        abort$(rMerPris_difference[d_,t] <> 0) 'rMerPris_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i,t]$(1),
        abort$(rvIO2vOffNyInv_difference[i,t] <> 0) 'rvIO2vOffNyInv_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c,t]$(1),
        abort$(rvIO2vPublicSales_difference[c,t] <> 0) 'rvIO2vPublicSales_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(rpMTraeghed_difference[d_,s] <> 0) 'rpMTraeghed_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([d_,s,t]$(1),
        abort$(rMKortsigt_difference[d_,s] <> 0) 'rMKortsigt_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([dux,s,t]$(1),
        abort$(uIOm0_difference[dux,s,t] <> 0) 'uIOm0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,s,t]$(1),
        abort$(uIOXy0_difference[x,s,t] <> 0) 'uIOXy0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,s,t]$(1),
        abort$(uIOXm0_difference[x,s,t] <> 0) 'uIOXm0_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([dux,t]$(1),
        abort$(fuIO_difference[dux,t] <> 0) 'fuIO_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([dux,s,t]$(1),
        abort$(fuIOym_difference[dux,s,t] <> 0) 'fuIOym_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(fuXm_difference[x,t] <> 0) 'fuXm_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([x,t]$(1),
        abort$(fuXy_difference[x,t] <> 0) 'fuXy_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([i,s,t]$(1),
        abort$(upI_s_difference[i,s,t] <> 0) 'upI_s_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
    
      loop([c,t]$(1),
        abort$(fpCTurist_difference[c,t] <> 0) 'fpCTurist_difference exceeds allowed threshold! "Zero shock changed variables significantly."';
      )
$onlisting;

;
